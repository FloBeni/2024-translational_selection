arbrePhylotips$tip.label <- str_replace_all(arbrePhylotips$tip.label,"_"," ")
edge_group <- str_replace_all(arbrePhylotips$tip.label,"_"," ")
edge_clade <- rep("branch",length(arbrePhylotips$edge[,2]))
for (group in unique(edge_group)){
if (group %in% unlist(listNomSpecies)){
edge_clade[arbrePhylotips$edge[,2] %in% grep(group,edge_group)] =
names(listNomSpecies[unlist(lapply(listNomSpecies,function(x) group %in% x))])
}
}
for (clade in  names(listNomSpecies)){print(clade)
edge_clade[ which.edge(arbrePhylotips, arbrePhylotips$edge[,2][edge_clade == clade] ) ] = clade
}
node_metadata = data.frame(node=arbrePhylotips$edge[,2],color=edge_clade)
# node_metadata$color = factor(node_metadata$color, levels = c("Mecopterida","Hymenoptera","Other Insecta","Nematoda","Other Invertebrates","Teleostei","Mammalia","Aves","Other Tetrapods"))
node_metadata$color = factor(node_metadata$color, levels = c("Diptera","Lepidoptera","Coleoptera","Hymenoptera",
"Other Insecta","Nematoda","Other Metazoans",
"Mammalia","Aves","Other Tetrapods","Teleostei"))
offspring.tbl_tree_item <- utils::getFromNamespace(".offspring.tbl_tree_item", "tidytree") # to use flip deprecated
pA = ggtree(arbrePhylotips,layout="roundrect",size=1) %>% flip(264, 375)
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none")
pA
jpeg(paste(path_pannel,"p1A.jpg",sep=""), width = 1500/1, height = 3000/1,res=250/1)
print(pA)
dev.off()
# Pannel 1 B
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
dt_graph = data1
ylabel = "gc3"
xlabel = "gci"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo)
pB = ggplot(dt_graph,aes_string(y=ylabel,x=xlabel,fill="clade_group",label="species")) +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
# geom_errorbar(aes(ymin = gc3-sqrt(var_gc3), ymax = gc3+sqrt(var_gc3)),alpha=0.2) +
# geom_errorbarh(aes(xmin = gci-sqrt(var_gci), xmax =gci+sqrt(var_gci)),alpha=0.2) +
geom_point(aes(fill=clade_group),size=4,pch=21,alpha=0.7) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=20, family="economica"),
axis.text.x =  element_text(color="black", size=20, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.65, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
) + theme(legend.position='none') + scale_fill_manual(values=Clade_color) +
ylab("Average per gene GC3") +
xlab("Average per gene GCi") +
labs(
caption = substitute(paste(model,": AIC = ",aic,", R"^2,"= ",r2,", p-value = ",pvalue,model_non_opti), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
)
pB
# Generate Figure 1
source("figure/figure_main_generator/library_path.R")
# Pannel 1 A
arbrePhylotips = arbrePhylo
arbrePhylotips$tip.label <- str_replace_all(arbrePhylotips$tip.label,"_"," ")
edge_group <- str_replace_all(arbrePhylotips$tip.label,"_"," ")
edge_clade <- rep("branch",length(arbrePhylotips$edge[,2]))
for (group in unique(edge_group)){
if (group %in% unlist(listNomSpecies)){
edge_clade[arbrePhylotips$edge[,2] %in% grep(group,edge_group)] =
names(listNomSpecies[unlist(lapply(listNomSpecies,function(x) group %in% x))])
}
}
for (clade in  names(listNomSpecies)){print(clade)
edge_clade[ which.edge(arbrePhylotips, arbrePhylotips$edge[,2][edge_clade == clade] ) ] = clade
}
node_metadata = data.frame(node=arbrePhylotips$edge[,2],color=edge_clade)
# node_metadata$color = factor(node_metadata$color, levels = c("Mecopterida","Hymenoptera","Other Insecta","Nematoda","Other Invertebrates","Teleostei","Mammalia","Aves","Other Tetrapods"))
node_metadata$color = factor(node_metadata$color, levels = c("Diptera","Lepidoptera","Mecopterida","Coleoptera","Hymenoptera",
"Other Insecta","Nematoda","Other Metazoans",
"Mammalia","Aves","Other Tetrapods","Teleostei"))
offspring.tbl_tree_item <- utils::getFromNamespace(".offspring.tbl_tree_item", "tidytree") # to use flip deprecated
pA = ggtree(arbrePhylotips,layout="roundrect",size=1) %>% flip(264, 375)
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none")
pA
jpeg(paste(path_pannel,"p1A.jpg",sep=""), width = 1500/1, height = 3000/1,res=250/1)
print(pA)
dev.off()
# Pannel 1 B
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
dt_graph = data1
ylabel = "gc3"
xlabel = "gci"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo)
pB = ggplot(dt_graph,aes_string(y=ylabel,x=xlabel,fill="clade_group",label="species")) +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
# geom_errorbar(aes(ymin = gc3-sqrt(var_gc3), ymax = gc3+sqrt(var_gc3)),alpha=0.2) +
# geom_errorbarh(aes(xmin = gci-sqrt(var_gci), xmax =gci+sqrt(var_gci)),alpha=0.2) +
geom_point(aes(fill=clade_group),size=4,pch=21,alpha=0.7) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=20, family="economica"),
axis.text.x =  element_text(color="black", size=20, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.65, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
) + theme(legend.position='none') + scale_fill_manual(values=Clade_color) +
ylab("Average per gene GC3") +
xlab("Average per gene GCi") +
labs(
caption = substitute(paste(model,": AIC = ",aic,", R"^2,"= ",r2,", p-value = ",pvalue,model_non_opti), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
)
pB
gls = GLS(shorebird)
shorebird <- comparative.data(arbrePhylo, data.frame(species=dt_graph[,"species"],pgls_x=dt_graph[,xlabel],pgls_y=data_1[,ylabel]), species, vcv=TRUE)
gls = GLS(shorebird)
shorebird <- comparative.data(arbrePhylo, data.frame(species=dt_graph[,"species"],pgls_x=dt_graph[,xlabel],pgls_y=data_1[,ylabel]), species, vcv=TRUE)
shorebird <- comparative.data(arbrePhylo, data.frame(species=dt_graph[,"species"],pgls_x=dt_graph[,xlabel],pgls_y=dt_graph[,ylabel]), species, vcv=TRUE)
gls = GLS(shorebird)
GLS(shorebird)
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
dnds = read.delim("data/GTDrift_Metazoa_dNdS.tab")
rownames(dnds) = dnds$species
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1[,c("lifespan_days","length_cm","weight_kg")] = GTDrift_list_species[data1$species,c("lifespan_days","length_cm","weight_kg")]
data1[,c("dNdS")] = dnds[data1$species,c("dNdS")]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "length_cm"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = log10(dt_graph[,xlabel])
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
model_to_use = fitted_model(x=lm_x,y=lm_y,label=dt_graph$species,tree=arbrePhylo)
model_to_use
GLS(shorebird)
GLS(shorebird)
GLS(shorebird)[[1]]
# Generate Figure 8
source("figure/figure_main_generator/library_path.R")
# Pannel 8 A
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1[,c("lifespan_days","length_cm","weight_kg")] = GTDrift_list_species[data1$species,c("lifespan_days","length_cm","weight_kg")]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "lifespan_days"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = log10(dt_graph[,xlabel])
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x, pgls_y=lm_y), species, vcv=TRUE)
GLS(shorebird)[[1]]
model_to_use = fitted_model(x=lm_x,y=lm_y,label=dt_graph$species,tree=arbrePhylo)
pA =  ggplot(dt_graph,aes_string(y=ylabel,x=xlabel))  +
geom_point(aes(fill=clade_group),size=4,pch=21,alpha=.8) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=24, family="economica"),
axis.text.x =  element_text(color="black", size=24, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.59, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
)+ guides(fill = guide_legend(override.aes = list(size=5))) + theme(legend.position="none")+
# labs(
#   caption = substitute(paste("LM: "," R"^2,lm_eqn," / PGLS:"," R"^2,pgls_eq), list(nbspecies=nrow(dt_graph),
#                                                                                    lm_eqn=lm_eqn(lm(lm_y ~ lm_x)),
#                                                                                    pgls_eq=lm_eqn(pgls(pgls_y~pgls_x,shorebird)))),
#   title = substitute(paste("N = ",nbspecies," species"), list(nbspecies=nrow(dt_graph),
#                                                           lm_eqn=lm_eqn(lm(lm_y ~ lm_x)),
#                                                           pgls_eq=lm_eqn(pgls(pgls_y~pgls_x,shorebird))))
# ) +
labs(
caption = substitute(paste(model,": AIC = ",aic,", R"^2,"= ",r2,", p-value = ",pvalue,model_non_opti), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
) + scale_fill_manual(values=Clade_color) +
ylab("Translational selection intensity") +
scale_x_log10(breaks=c(0.05,0.1,0.5,1,5,10,100,1000,10000),labels=c(0.05,0.1,0.5,1,5,10,100,1000,10000)) +
xlab("Longevity (days log scale)")+ annotation_logticks(sides="b")
pA
GLS(shorebird)[[1]]
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
dnds = read.delim("data/GTDrift_Metazoa_dNdS.tab")
rownames(dnds) = dnds$species
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1[,c("lifespan_days","length_cm","weight_kg")] = GTDrift_list_species[data1$species,c("lifespan_days","length_cm","weight_kg")]
data1[,c("dNdS")] = dnds[data1$species,c("dNdS")]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "length_cm"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = log10(dt_graph[,xlabel])
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
model_to_use = fitted_model(x=lm_x,y=lm_y,label=dt_graph$species,tree=arbrePhylo)
GLS(shorebird)[[1]]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "weight_kg"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = log10(dt_graph[,xlabel])
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
GLS(shorebird)[[1]]
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1[,c("lifespan_days","length_cm","weight_kg")] = GTDrift_list_species[data1$species,c("lifespan_days","length_cm","weight_kg")]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "lifespan_days"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = log10(dt_graph[,xlabel])
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x, pgls_y=lm_y), species, vcv=TRUE)
GLS(shorebird)[[1]]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "weight_kg"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = log10(dt_graph[,xlabel])
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
GLS(shorebird)[[1]]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "dNdS"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
GLS(shorebird)[[1]]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "dNdS"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
# Supplementary Pannel 10 A
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
dnds = read.delim("data/GTDrift_Metazoa_dNdS.tab")
rownames(dnds) = dnds$species
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1[,c("lifespan_days","length_cm","weight_kg")] = GTDrift_list_species[data1$species,c("lifespan_days","length_cm","weight_kg")]
data1[,c("dNdS")] = dnds[data1$species,c("dNdS")]
dt_graph = data1
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "dNdS"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = dt_graph[,xlabel]
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
GLS(shorebird)[[1]]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "dNdS"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = dt_graph[,xlabel]
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
GLS(shorebird)[[1]]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "weight_kg"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = log10(dt_graph[,xlabel])
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
GLS(shorebird)[[1]]
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
dnds = read.delim("data/GTDrift_Metazoa_dNdS.tab")
rownames(dnds) = dnds$species
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1[,c("lifespan_days","length_cm","weight_kg")] = GTDrift_list_species[data1$species,c("lifespan_days","length_cm","weight_kg")]
data1[,c("dNdS")] = dnds[data1$species,c("dNdS")]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "length_cm"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = log10(dt_graph[,xlabel])
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
model_to_use = fitted_model(x=lm_x,y=lm_y,label=dt_graph$species,tree=arbrePhylo)
GLS(shorebird)[[1]]
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "dNdS"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = dt_graph[,xlabel]
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
GLS(shorebird)[[1]]
pC = ggplot(dt_graph,aes_string(y=ylabel,x=xlabel))  +
geom_point(aes(fill=clade_group),size=4,pch=21,alpha=.8) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=24, family="economica"),
axis.text.x =  element_text(color="black", size=24, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.99, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
)+ guides(fill = guide_legend(override.aes = list(size=5))) + theme(legend.position="none")+
labs(
caption = substitute(paste("LM: "," R"^2,lm_eqn," / PGLS:"," R"^2,pgls_eq), list(nbspecies=nrow(dt_graph),
lm_eqn=lm_eqn(lm(lm_y ~ lm_x)),
pgls_eq=lm_eqn(pgls(pgls_y~pgls_x,shorebird)))),
title = substitute(paste("N = ",nbspecies," species"), list(nbspecies=nrow(dt_graph),
lm_eqn=lm_eqn(lm(lm_y ~ lm_x)),
pgls_eq=lm_eqn(pgls(pgls_y~pgls_x,shorebird))))
) + scale_fill_manual(values=Clade_color) +
ylab("Translational selection intensity") + xlab("dN/dS")
dt_graph = data1
ylabel = "expressed_overused_background_global"
xlabel = "dNdS"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
lm_y = dt_graph[,ylabel]
lm_x = dt_graph[,xlabel]
shorebird <- comparative.data(arbrePhylo,
data.frame(species=dt_graph$species,
pgls_x=lm_x,
pgls_y=lm_y), species, vcv=TRUE)
GLS(shorebird)[[1]]
96+93+54+30+94+47+58+188+213+372+80+182
ggedit:::ggeditAddin()
ggExtra:::ggMarginalGadgetAddin ()
esquisse:::esquisser()
0.5^70
0.10*0.2*7
0.14^(1/3)
(0.1*0.2*0.7)^(1/3)
(0.1*0.1*0.8)^(1/3)
(0.2*0.3*0.5)^(1/3)
(0.3*0.3*0.3)^(1/3)
1*0.01
(1*0.01)^(1/2)
(0.99*0.01)^(1/2)
x=0.5
aa_1 = c(x,1-x)
aa_1
rep(aa_1,5)
prod(rep(aa_1,5))
prod(rep(aa_1,5))^(1/(5*2))
x=0.7
aa_1 = c(x,1-x)
prod(rep(aa_1,5))^(1/(5*2))
x=0.9
aa_1 = c(x,1-x)
prod(rep(aa_1,5))^(1/(5*2))
x = 0.9
aa_1 = c(x,1-x)
rep(aa_1,5)
prod(rep(aa_1,5))
prod(rep(aa_1,5))^(1/(5*2))
1/(5*2)
x = 0.7
aa_1 = c(x,1-x)
prod(rep(aa_1,5))^(1/(5*2))
x = 0.6
aa_1 = c(x,1-x)
prod(rep(aa_1,5))^(1/(5*2))
x = 0.8
aa_1 = c(x,1-x)
prod(rep(aa_1,5))^(1/(5*2))
x = 0.85
aa_1 = c(x,1-x)
prod(rep(aa_1,5))^(1/(5*2))
library(seqinr)
dmel_genome = read.fasta("/home/fbenitiere/data/Projet-SplicedVariants/Genomes/Drosophila_melanogaster/genome.fna")
View(dmel_genome)
daf_snp = read.delim("/home/fbenitiere/data/Projet-NeGA/translational_selection/daf_drosophila_melanogaster/processed/DAF_snp.tab")
chrList = c("chrX","chr2L","chr2R","chr3L","chr3R","chr4","chrY")
names(chrList) = c("NC_004354.4","NT_033779.5","NT_033778.4","NT_037436.4","NT_033777.3","NC_004353.4","NC_024512.1"])
names(chrList) = c("NC_004354.4","NT_033779.5","NT_033778.4","NT_037436.4","NT_033777.3","NC_004353.4","NC_024512.1")
chrList = c("chrX","chr2L","chr2R","chr3L","chr3R","chr4","chrY")
names(chrList) = c("NC_004354.4","NT_033779.5","NT_033778.4","NT_037436.4","NT_033777.3","NC_004353.4","NC_024512.1")
daf_snp
daf_snp[1,]
names(chrList) = c("chrX","chr2L","chr2R","chr3L","chr3R","chr4","chrY")
chrList = c("NC_004354.4","NT_033779.5","NT_033778.4","NT_037436.4","NT_033777.3","NC_004353.4","NC_024512.1")
x = daf_snp[1,]
dmel_genome[[chrList[x$CHROM]]]
chrList[x$CHROM]
x$CHROM
dmel_genome[[chrList[x$chrom]]]
x$chrom
chrList = c("NC_004354.4","NT_033779.5","NT_033778.4","NT_037436.4","NT_033777.3","NC_004353.4","NC_024512.1")
names(chrList) = c("chrX","chr2L","chr2R","chr3L","chr3R","chr4","chrY")
daf_snp = read.delim("/home/fbenitiere/data/Projet-NeGA/translational_selection/daf_drosophila_melanogaster/processed/DAF_snp.tab")
x = daf_snp[1,]
dmel_genome[[chrList[x$chrom]]]
dmel_genome[[chrList[x$chrom]]][x$Dm6_pos]
x
dmel_genome[[chrList[x$chrom]]][upper(x$Dm6_pos)]
upper(dmel_genome[[chrList[x$chrom]]][x$Dm6_pos])
dmel_genome[[chrList[x$chrom]]][x$Dm6_pos]
daf_snp$REF == daf_snp$Dm6_ref
table(daf_snp$REF == daf_snp$Dm6_ref)
daf_snp[(daf_snp$REF != daf_snp$Dm6_ref),]
daf_snp = read.delim("/home/fbenitiere/data/Projet-NeGA/translational_selection/daf_drosophila_melanogaster/processed/table_snp_subst/alignment_chr4.tab")
x = daf_snp[1,]
x
x = daf_snp[100,]
dmel_genome[[chrList[x$chrom]]][x$Dm6_pos]
x
View(daf_snp)
daf_snp = read.delim("/home/fbenitiere/data/Projet-NeGA/translational_selection/daf_drosophila_melanogaster/processed/table_snp_subst/alignment_chr4.tab")
table(daf_snp$major_allele=="N")
table(daf_snp$polymorph)
table(daf_snp$major_allele != daf_snp$ancestral_1)
table(daf_snp$major_allele != daf_snp$ancestral_1 & daf_snp$major_allele=="N")
daf_snp$major_allele != daf_snp$ancestral_1
daf_snp$major_allele != daf_snp$ancestral_1 & daf_snp$major_allele
table(daf_snp$major_allele != daf_snp$ancestral_1 & daf_snp$major_allele=="N")
table(daf_snp$major_allele=="N")
table(daf_snp$polymorph)
table(daf_snp$major_allele != daf_snp$ancestral_1 & daf_snp$major_allele=="N",daf_snp$polymorph)
table(daf_snp$major_allele != daf_snp$ancestral_1 & daf_snp$major_allele=="N" & daf_snp$ancestral_1 != "N",daf_snp$polymorph)
table(daf_snp$major_allele != daf_snp$ancestral_1 & (daf_snp$major_allele=="N" | daf_snp$ancestral_1 != "N"),daf_snp$polymorph)
table(daf_snp$major_allele != daf_snp$ancestral_1 & (daf_snp$major_allele=="N" | daf_snp$ancestral_1 == "N"),daf_snp$polymorph)
table(daf_snp$major_allele != daf_snp$ancestral_1 & (daf_snp$major_allele!="N" & daf_snp$ancestral_1 != "N"),daf_snp$polymorph)
table(daf_snp$major_allele != daf_snp$ancestral_1 & (daf_snp$major_allele!="N" ),daf_snp$polymorph)
table(daf_snp$major_allele != daf_snp$ancestral_1 & (daf_snp$major_allele!="N" ),daf_snp$polymorph)
table(daf_snp$major_allele=="N")
table(daf_snp$polymorph)
source("figure/figure_main_generator/library_path.R")
source("figure/figure_main_generator/library_path.R")
setwd("~/2024-translational_selection")
source("figure/figure_main_generator/library_path.R")
data1 = read.delim("data/data1_supp.tab")
rownames(data1) = data1$species
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
##  Abstract
print("Abstract")
##  Introduction
print("Introduction")
##  Non-adaptive processes shape codon usage variations across species
print("Non-adaptive processes are the primary drivers of codon usage variations among metazoans")
print(paste("position between ",nrow(data1)," metazoan species",sep=""))
print(paste("after removal of species lacking gene expression data (N=",nrow(data1[ data1$nb_genes_filtered < 5000,]),"",sep=""))
print(paste("we investigated CU across ",nrow(data1[ data1$nb_genes_filtered >= 5000,])," metazoan",sep=""))
data1 = data1[ data1$nb_genes_filtered >= 5000,]
print(paste("clades (",sum(table(data1$clade_group)[c("Mammalia","Aves","Other Tetrapods","Teleostei")]),
" vertebrates, ",sum(table(data1$clade_group)[c("Diptera","Lepidoptera","Coleoptera","Hymenoptera","Other Insects")]),
" insects and ",sum(table(data1$clade_group)[c("Other Metazoans","Nematoda")]),
" other metazoans).",sep=""))
print(paste("(GCi range=",round(min(data1$gci),2)," to ",round(max(data1$gci),2),")",sep=""))
print(paste("spans from ",round(min(data1$gc3),2)," to ",round(max(data1$gc3),2),sep=""))
print(paste("dipterans (N=",sum(table(data1$clade_group)[c("Diptera")]),")",sep=""))
print(paste("the wider range of GC3 variations (from ",round(min(data1[data1$clade_group == "Diptera",]$gc3),2),
" to ",round(max(data1[data1$clade_group == "Diptera",]$gc3),2),").",sep=""))
print(paste("GC3 and GCi are highly correlated (rho=",round(data1["Homo_sapiens",]$rho_gc3_gci,2),")",sep=""))
print(paste("pronounced in Caenorhabditis elegans (rho=",round(data1["Caenorhabditis_elegans",]$rho_gc3_gci,2),",",sep=""))
dt_graph = data1
ylabel = "var_gc3"
xlabel = "var_gci"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
dt_graph[,c(ylabel,xlabel)] = sqrt(dt_graph[,c(ylabel,xlabel)])
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
print(paste("were higly correlated (R2=",model_to_use$r2,")",sep=""))
print(paste(" gene GCi and GC3 ($SD_{GCi} > ",
round(min(sqrt(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods","Hymenoptera"),]$var_gci)),3),
"$, $SD_{GC3} > ",
round(min(sqrt(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods","Hymenoptera"),]$var_gc3)),3),sep=""))
data1 =   data1[ data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 & data1$nb_codon_not_decoded == 0,]
table(data1$expressed_overused_background_POC1>0)
table(data1$expressed_overused_background_POC2>0)
table(data1$expressed_overused_background_POCs>0)
31/(191+31)
table(data1$expressed_overused_background_POC2>0) / sum(table(data1$expressed_overused_background_POC2>0))
table(data1$expressed_overused_background_POC1>0)/ sum(table(data1$expressed_overused_background_POC1>0))
table(data1$expressed_overused_background_POC2>0) / sum(table(data1$expressed_overused_background_POC2>0))
table(data1$expressed_overused_background_POCs>0)/ sum(table(data1$expressed_overused_background_POCs>0))
