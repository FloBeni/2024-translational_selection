for (clade in names(list_inclusion)){
edge_clade[ which.edge(arbrePhylotips,  arbrePhylotips$edge[,2][edge_clade_prev %in% unlist(list_inclusion[clade])] ) ] = clade
}
node_metadata = data.frame(node=arbrePhylotips$edge[,2],color=edge_clade)
node_metadata$color = factor(node_metadata$color, levels = names(Clade_color))
offspring.tbl_tree_item <- utils::getFromNamespace(".offspring.tbl_tree_item", "tidytree") # to use flip deprecated
pA = ggtree(arbrePhylotips,layout="roundrect",size=1) %>% flip(264, 375)
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none")
pA
jpeg(paste(path_pannel,"p1A.jpg",sep=""), width = 1500/1, height = 3000/1,res=250/1)
print(pA)
dev.off()
# Pannel 1 B
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
labels = paste(names(tapply(data1$species,data1$clade_group,length))," N=",tapply(data1$species,data1$clade_group,length),sep="")
names(labels) = names(tapply(data1$species,data1$clade_group,length))
data1 = data1[ data1$nb_genes_filtered >= 5000,]
dt_graph = data1
ylabel = "gc3"
xlabel = "gci"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
pB = ggplot(dt_graph,aes_string(y=ylabel,x=xlabel,fill="clade_group",label="species")) +
geom_abline(linetype="dashed") +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
geom_point(aes(fill=clade_group),size=3,pch=21,alpha=0.7) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=28,vjust=0.5,family="ubuntu condensed"),
axis.title.y = element_text(color="black", size=28,vjust=1.5, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=24, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=24, family="ubuntu condensed"),
title =  element_text(color="black", size=20, family="ubuntu condensed"),
text =  element_text(color="black", size=31, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=24, family="ubuntu condensed",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.59, face= "italic", size=20, family="ubuntu condensed"),
plot.caption.position =  "plot"
)  + scale_fill_manual("Clades",values=Clade_color,labels=labels) +
ylab("GC3") +
xlab("GCi") +
labs(
caption = substitute(paste(model,lambda," :",aic," R"^2,"= ",r2,", p-value ",pvalue,model_non_opti), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
)+ theme(legend.position='none')
pB
jpeg(paste(path_pannel,"p1B.jpg",sep=""), width = 4000/1, height = 3500/1,res=600/1)
print(pB)
dev.off()
# Pannel 1 C
data2 = read.delim("data/data2_supp.tab")
dt_graph = data2[data2$species == "Homo_sapiens" ,]
spearman_method_aa = cor.test( dt_graph$GCi, dt_graph$GC3,method="spearman",exact=F)
if(spearman_method_aa$p.value < 1e-16){
spearman_method_aa$p.value = "< 1e-16"
} else {
spearman_method_aa$p.value = paste("= ",spearman_method_aa$p.value,sep="")
}
pC = ggplot(dt_graph , aes(x=GCi ,y=GC3))  +
geom_abline(linetype="dashed") +
geom_point(col=set_color[8],alpha=0.4,size=.51)+
scale_fill_manual(values=set_color) +
scale_color_manual(values=set_color) +
scale_shape_manual(values=c(24,22,21,23,25,20))+ xlab("log10( FPKM+1 )") + ylab("Frequency optimal codons") + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0.5, size=30,family="ubuntu condensed"),
axis.title.y = element_text(color="black", size=30,vjust=1.5, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=25, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=25, family="ubuntu condensed"),
title =  element_text(color="black", size=18, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=16, family="ubuntu condensed"),
strip.text = element_text(size=15),
plot.caption = element_text(hjust = 0.7, face= "italic", size=20, family="ubuntu condensed"),
plot.caption.position =  "plot"
)  +labs(fill='Categories',color='Categories',shape='',linetype='')+
labs(
caption = substitute(paste("rho = ",rho_aa_fpkm,", p-value ",pval_aa_fpkm), list(
rho_aa_fpkm = round(spearman_method_aa$estimate, 2),
pval_aa_fpkm = spearman_method_aa$p.value))
) +
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2,size=NA),
)  +  ylab("GC3") + xlab("GCi") + xlim(0.1,.8) +ylim(0.15,1)
pC
jpeg(paste(path_pannel,"p1C.jpg",sep=""),
width = 6000/4.5,  5000/4,res=1000/4)
print(pC)
dev.off()
# Pannel 1 D
dt_graph = data2[data2$species == "Caenorhabditis_elegans" ,]
spearman_method_aa = cor.test( dt_graph$GCi, dt_graph$GC3,method="spearman",exact=F)
if(spearman_method_aa$p.value < 1e-16){
spearman_method_aa$p.value = "< 1e-16"
} else {
spearman_method_aa$p.value = paste("= ",spearman_method_aa$p.value,sep="")
}
pD = ggplot(dt_graph , aes(x=GCi ,y=GC3))  +
geom_abline(linetype="dashed") +
geom_point(col=set_color[8],alpha=0.4,size=.51)+
scale_fill_manual(values=set_color) +
scale_color_manual(values=set_color) +
scale_shape_manual(values=c(24,22,21,23,25,20)) + xlab("log10( FPKM+1 )") + ylab("Frequency optimal codons") + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0.5, size=30,family="ubuntu condensed"),
axis.title.y = element_text(color="black", size=0, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=0, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=25, family="ubuntu condensed"),
title =  element_text(color="black", size=18, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=16, family="ubuntu condensed"),
strip.text = element_text(size=15),
plot.caption = element_text(hjust = 0.55, face= "italic", size=20, family="ubuntu condensed"),
plot.caption.position =  "plot"
)+ labs(fill='Categories',color='Categories',shape='',linetype='') +
labs(
caption = substitute(paste("rho = ",rho_aa_fpkm,", p-value ",pval_aa_fpkm), list(
rho_aa_fpkm = round(spearman_method_aa$estimate, 2),
pval_aa_fpkm = formatC(spearman_method_aa$p.value, format = "e", digits = 0)))
) +
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2,size=NA),
)  +  ylab("") + xlab("GCi") + xlim(0.1,.8) +ylim(0.15,1)
pD
jpeg(paste(path_pannel,"p1D.jpg",sep=""),
width = 5000/4.5,  5000/4,res=1000/4)
print(pD)
dev.off()
# Figure 1
imgA = load.image(paste(path_pannel,"p1A.jpg",sep="") )
imgB = load.image(paste(path_pannel,"p1B.jpg",sep="") )
imgC = load.image(paste(path_pannel,"p1C.jpg",sep="") )
imgD = load.image(paste(path_pannel,"p1D.jpg",sep="") )
clade_png<-readPNG(paste(path_require,"clade.png",sep=""))
human<-readPNG(paste(path_require,"human_f.png",sep=""))
Caenorhabditis_elegans = readPNG(paste(path_require,"Caenorhabditis_elegans.png",sep=""))
aves<-readPNG(paste(path_require,"aves.png",sep=""))
teleostei<-readPNG(paste(path_require,"teleostei.png",sep=""))
monkey<-readPNG(paste(path_require,"monkey.png",sep=""))
fly<-readPNG(paste(path_require,"fly.png",sep=""))
bee<-readPNG(paste(path_require,"bee.png",sep=""))
coleoptera<-readPNG(paste(path_require,"coleoptera.png",sep=""))
lepidoptera<-readPNG(paste(path_require,"lepidoptera.png",sep=""))
{
pdf(file= paste(path_figure,"Figure1.pdf",sep=""), width=7, height=5)
m=matrix(rep(NA,10*100), nrow=10)
for(i in 1:100){
m[,i]=rep(1)
}
for(i in 50:100){
m[,i]=c(rep(2,5),rep(3,5))
}
for(i in 6:10){
m[i,]=c(rep(1,42),rep(3,29),rep(4,29))
}
layout(m)
m
par(mar=c(0, 1, 0, 4))
plot(imgA, axes=FALSE)
mtext("A",at=100,adj=-1, side=2, line=1, font=2, cex=1.4,las=2)
xclade=900
yclade=1700
rasterImage(clade_png,xleft=0+xclade, ybottom=850/.75+yclade, xright=520/.75+xclade, ytop=yclade)
xaxis=700
yaxis=2800
rasterImage(teleostei,xleft=0+xaxis, ybottom=0+yaxis, xright=1100/6+xaxis, ytop=-500/6+yaxis)
xaxis=680
yaxis=2350
rasterImage(aves,xleft=0+xaxis, ybottom=0+yaxis, xright=600/3.5+xaxis, ytop=-750/3.5+yaxis)
xaxis=750
yaxis=1750
rasterImage(monkey,xleft=0+xaxis, ybottom=0+yaxis, xright=900/5+xaxis, ytop=-900/5+yaxis)
xcel=1310
ycel=1120
rasterImage(Caenorhabditis_elegans,xleft=0+xcel, ybottom=0+ycel, xright=1000/5+xcel, ytop=-350/5+ycel)
xaxis=1100
yaxis=800
rasterImage(bee,xleft=0+xaxis, ybottom=0+yaxis, xright=900/5+xaxis, ytop=-700/5+yaxis)
xaxis=1150
yaxis=440
rasterImage(coleoptera,xleft=0+xaxis, ybottom=0+yaxis, xright=1500/10+xaxis, ytop=-900/10+yaxis)
xaxis=1250
yaxis=350
rasterImage(lepidoptera,xleft=0+xaxis, ybottom=0+yaxis, xright=1500/7+xaxis, ytop=-900/7+yaxis)
xaxis=1300
yaxis=150
rasterImage(fly,xleft=0+xaxis, ybottom=0+yaxis, xright=1200/10+xaxis, ytop=-900/10+yaxis)
par(mar=c(0, 0, 1, 2.5))
plot(imgB, axes=FALSE)
mtext("B",at=49.4,adj=-1.5, side=2, line=1, font=2, cex=1.4,las=2)
par(mar=c(0, 0, 0, 0))
plot(imgC, axes=FALSE)
xhuman=300
yhuman=-60
rasterImage(human,xleft=0+xhuman, ybottom=500/1.9-yhuman, xright=190/1.9+xhuman, ytop=0-yhuman)
mtext("C", adj=0.1,side=2,at=0, line=1, font=2, cex=1.4,las=2)
par(mar=c(0, 0, 0, 2.5))
plot(imgD, axes=FALSE)
xcel=125
ycel=-50
rasterImage(Caenorhabditis_elegans,xleft=0+xcel, ybottom=350/3-ycel, xright=1000/3+xcel, ytop=0-ycel)
dev.off()
}
# Generate Supplementary Figure 6, 7, 8 & 9
source("figure/figure_main_generator/library_path.R")
set_color_class = c("#E31A1C","#33A02C")
names(set_color_class) = c( "PO>nPO","nPO>PO")
set_shape_class = c(CDS=21,intron=24)
set_linetype_class = c(CDS="solid",intron="dashed")
set_alpha_class = c(CDS=1,intron=0.5)
# Pannel B
data_11 = read.delim("data/data11_supp.tab")
dt_graph = data_11
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_codon),big.mark=",",scientific=T)," SNPs PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_codon),big.mark=",",scientific=T)," SNPs nPO>PO",sep=""))
pB = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="CDS",aes(x=0.012,y=0.053), family="ubuntu condensed", size=12)
pB
# Generate Figure 6
source("figure/figure_main_generator/library_path.R")
set_color_class = c("#E31A1C","#33A02C")
names(set_color_class) = c( "PO>nPO","nPO>PO")
set_shape_class = c(CDS=21,intron=24)
set_linetype_class = c(CDS="solid",intron="dashed")
set_alpha_class = c(CDS=1,intron=0.5)
# Pannel B
data_11 = read.delim("data/data11_supp.tab")
dt_graph = data_11
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_codon),big.mark=",",scientific=T)," SNPs PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_codon),big.mark=",",scientific=T)," SNPs nPO>PO",sep=""))
pB = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="CDS",aes(x=0.012,y=0.053), family="ubuntu condensed", size=12)
pB = pB +
geom_line(aes(y=density_optimal_to_nonoptimal_codon,color="PO>nPO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_codon,fill="PO>nPO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_codon,
ymax=confint_high_density_optimal_to_nonoptimal_codon,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_codon,color="nPO>PO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_codon,fill="nPO>PO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_codon,
ymax=confint_high_density_nonoptimal_to_optimal_codon,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pB = pB + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0.5, size=0,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=0, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("SNP rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F)+ ylim(0.01,0.055)+
theme(legend.position = c(0.76, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(0.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) + guides(fill= guide_legend(override.aes = list(size=7,pch=21), byrow = TRUE,order = 2))
pB
# Generate Figure 6
source("figure/figure_main_generator/library_path.R")
set_color_class = c("#E31A1C","#33A02C")
names(set_color_class) = c( "PO>nPO","nPO>PO")
set_shape_class = c(CDS=21,intron=24)
set_linetype_class = c(CDS="solid",intron="dashed")
set_alpha_class = c(CDS=1,intron=0.5)
# Pannel B
data_11 = read.delim("data/data11_supp.tab")
dt_graph = data_11
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_codon),big.mark=",",scientific=T)," SNPs PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_codon),big.mark=",",scientific=T)," SNPs nPO>PO",sep=""))
pB = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="CDS",aes(x=0.012,y=0.053), family="ubuntu condensed", size=12)
pB = pB +
geom_line(aes(y=density_optimal_to_nonoptimal_codon,color="PO>nPO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_codon,fill="PO>nPO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_codon,
ymax=confint_high_density_optimal_to_nonoptimal_codon,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_codon,color="nPO>PO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_codon,fill="nPO>PO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_codon,
ymax=confint_high_density_nonoptimal_to_optimal_codon,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pB = pB + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0.5, size=0,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=0, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("SNP rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F)+ ylim(0.01,0.055)+
theme(legend.position = c(0.76, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(0.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) + guides(fill= guide_legend(override.aes = list(size=7,pch=21), byrow = TRUE,order = 2))
pB
jpeg(paste(path_pannel,"p6B.jpg",sep=""), width = 6000/1, height = 2800/1,res=600/1)
print(pB)
dev.off()
# Pannel C
data_10 = read.delim("data/data10_supp.tab")
dt_graph = data_10
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_codon),big.mark=",",scientific=T)," substitutions PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_codon),big.mark=",",scientific=T)," substitutions nPO>PO",sep=""))
pC = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="CDS",aes(x=0.012,y=0.048), family="ubuntu condensed", size=12)
pC = pC +
geom_line(aes(y=density_optimal_to_nonoptimal_codon,color="PO>nPO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_codon,fill="PO>nPO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_codon,
ymax=confint_high_density_optimal_to_nonoptimal_codon,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_codon,color="nPO>PO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_codon,fill="nPO>PO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_codon,
ymax=confint_high_density_nonoptimal_to_optimal_codon,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pC = pC + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0, size=0,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=0, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("Substitution rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F) + ylim(0.005,0.05)+
theme(legend.position = c(0.7, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) +  guides(fill= guide_legend(override.aes = list(size=7,pch=21),byrow = TRUE,order = 2))
pC
jpeg(paste(path_pannel,"p6C.jpg",sep=""), width = 6000/1, height = 2800/1,res=600/1)
print(pC)
dev.off()
# Pannel D
data_11 = read.delim("data/data11_supp.tab")
dt_graph = data_11
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_intron),big.mark=",",scientific=T)," SNPs PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_intron),big.mark=",",scientific=T)," SNPs nPO>PO",sep=""))
pD = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="Intron",aes(x=0.015,y=0.053), family="ubuntu condensed", size=12)
pD = pD +
geom_line(aes(y=density_optimal_to_nonoptimal_intron,color="PO>nPO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_intron,fill="PO>nPO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_intron,
ymax=confint_high_density_optimal_to_nonoptimal_intron,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_intron,color="nPO>PO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_intron,fill="nPO>PO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_intron,
ymax=confint_high_density_nonoptimal_to_optimal_intron,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pD = pD + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=-0, size=25,family="ubuntu condensed"),
axis.title.y = element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=27, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("SNP rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F) + ylim(0.01,0.055) +
theme(legend.position = c(0.76, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) +  guides(fill= guide_legend(override.aes = list(size=7,pch=21),byrow = TRUE,order = 2))+
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
pD
jpeg(paste(path_pannel,"p6D.jpg",sep=""), width = 6000/1, height = 3000/1,res=600/1)
print(pD)
dev.off()
# Pannel E
data_10 = read.delim("data/data10_supp.tab")
dt_graph = data_10
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_intron),big.mark=",",scientific=T)," substitutions PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_intron),big.mark=",",scientific=T)," substitutions nPO>PO",sep=""))
pE = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="Intron",aes(x=0.015,y=0.048), family="ubuntu condensed", size=12)
pE = pE +
geom_line(aes(y=density_optimal_to_nonoptimal_intron,color="PO>nPO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_intron,fill="PO>nPO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_intron,
ymax=confint_high_density_optimal_to_nonoptimal_intron,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_intron,color="nPO>PO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_intron,fill="nPO>PO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_intron,
ymax=confint_high_density_nonoptimal_to_optimal_intron,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pE = pE + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0, size=25,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=27, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("Substitution rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F)  + ylim(0.005,0.05) +
theme(legend.position = c(0.7, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) +  guides(fill= guide_legend(override.aes = list(size=7,pch=21),byrow = TRUE,order = 2))+
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
pE
jpeg(paste(path_pannel,"p6E.jpg",sep=""), width = 6000/1, height = 3000/1,res=600/1)
print(pE)
dev.off()
# Figure 6
imgA = load.image(paste(path_require,"poly_subst.png",sep="") )
imgB = load.image(paste(path_pannel,"p6B.jpg",sep="") )
imgC = load.image(paste(path_pannel,"p6C.jpg",sep="") )
imgD = load.image(paste(path_pannel,"p6D.jpg",sep="") )
imgE = load.image(paste(path_pannel,"p6E.jpg",sep="") )
fly<-readPNG(paste(path_require,"Drosophila_melanogaster.png",sep=""))
{
pdf(file= paste(path_figure,"Figure6.pdf",sep=""), width=8, height=7)
m = matrix(rep(NA,10*120), nrow=120)
for(i in 1:6){
m[,i]=c(rep(1,50),rep(2,35),rep(3,35))
}
for(i in 6:10){
m[,i]=c(rep(1,50),rep(4,35),rep(5,35))
}
m
layout(m)
par(mar=c(0, 0, 0, 0))
plot(imgA, axes=FALSE)
mtext("A",at=100,adj=-4, side=2, line=1, font=2, cex=1.7,las=2)
xaxis=1300/1.1
yaxis=120/1.1
rasterImage(fly,xleft=0+xaxis, ybottom=0+yaxis, xright=1100/13+xaxis, ytop=-900/13+yaxis)
par(mar=c(0, 1, 1.5, 1))
plot(imgB, axes=FALSE)
mtext("B",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
par(mar=c(0.5, 1, 0, 1))
plot(imgD, axes=FALSE)
mtext("D",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
par(mar=c(0, 1, 1.5, 1))
plot(imgC, axes=FALSE)
mtext("C",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
par(mar=c(0.5, 1, 0, 1))
plot(imgE, axes=FALSE)
mtext("E",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
dev.off()
}
# Generate Supplementary Figure 2
source("figure/figure_supp_generator/library_path.R")
# Supplementary Pannel 2 A
data1_supp = read.delim("data/data7_supp.tab")
dt_graph = data1_supp[data1_supp$species == "Drosophila_melanogaster",]
spearman_method_aa = cor.test( dt_graph$prop_abundance_average, dt_graph$prop_transcriptome_count,method="spearman",exact=F)
pA=ggplot(dt_graph,aes(x = prop_transcriptome_count*100 , y = prop_abundance_average*100)) + geom_smooth(method='lm',linetype='dashed',se=F, formula= y~x,col=set_color[3],size=2) +
geom_point(pch=21,fill=set_color[4],size=4) +
ylab("tRNA abundance (%)") + xlab("Amino-acid frequency (%)") +
theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=20, family="economica"),
axis.text.x =  element_text(color="black", size=20, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.55, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
) +
labs(
caption = substitute(paste("rho = ",rho_aa_fpkm,", p-value = ",pval_aa_fpkm), list(
rho_aa_fpkm = round(spearman_method_aa$estimate, 2),
pval_aa_fpkm = formatC(spearman_method_aa$p.value, format = "e", digits = 0)))
)
pA
pA
