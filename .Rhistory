library(stringi)
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
code = code[code$aa_name != "Ter",]
setwd("~/2024-translational_selection")
library(stringi)
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
code = code[code$aa_name != "Ter",]
dt = data.frame(nb_copy=tapply(code$anticodon,code$aa_name,function(x) sum(tRNA_abundance[species,x])))
tRNA_abundance = read.delim("/home/fbenitiere/2024-translational_selection/data/tRNA_abundance.tab")
species="Blattella germanica"
dt = data.frame(nb_copy=tapply(code$anticodon,code$aa_name,function(x) sum(tRNA_abundance[species,x])))
code$nb_copy = unlist(tRNA_abundance[species,code$anticodon])
code[code$anticodon == "AGA",]
min(code[code$anticodon != "AGA" & code$nb_copy!=0,]$nb_copy)
max(code[code$anticodon != "AGA" & code$nb_copy!=0,]$nb_copy)
library(stringi)
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
code = code[code$aa_name != "Ter",]
tRNA_abundance = read.delim("/home/fbenitiere/2024-translational_selection/data/tRNA_abundance.tab")
species="Blattella germanica"
dt = data.frame(nb_copy=tapply(code$anticodon,code$aa_name,function(x) sum(tRNA_abundance[species,x])))
dt
tRNA_abundance
code$aa_name
code$anticodon
tapply(code$anticodon,code$aa_name,function(x) sum(tRNA_abundance[species,x]))
tRNA_abundance
View(tRNA_abundance)
species="Blattella_germanica"
dt = data.frame(nb_copy=tapply(code$anticodon,code$aa_name,function(x) sum(tRNA_abundance[species,x])))
code$nb_copy = unlist(tRNA_abundance[species,code$anticodon])
code[code$anticodon == "AGA",]
min(code[code$anticodon != "AGA" & code$nb_copy!=0,]$nb_copy)
max(code[code$anticodon != "AGA" & code$nb_copy!=0,]$nb_copy)
GTDrift_list_species = read.delim("data/GTDrift_list_species.tab")
rownames(GTDrift_list_species) = GTDrift_list_species$species
all_data = data.frame()
for (species in GTDrift_list_species$species){
dt = data.frame(nb_copy=tapply(code$anticodon,code$aa_name,function(x) sum(tRNA_abundance[species,x])))
dt$aa_name = rownames(dt)
dt$species = species
all_data = rbind(all_data,dt)
}
data16 = cbind(all_data[all_data$species == "Caenorhabditis_elegans", ],all_data[all_data$species == "Hydra_vulgaris", ])
colnames(data16) = c("nb_copy_Caenorhabditis_elegans" ,"aa_name_Caenorhabditis_elegans", "species", "nb_copy_Hydra_vulgaris" ,"aa_name_Hydra_vulgaris" ,"species")
write.table(data16,"data/data_16.tab",quote=F,row.names = F,sep="\t")
all_cor = data.frame()
species1 = "Hydra_vulgaris"
for (species2 in GTDrift_list_species$species){
spearman_method_aa = cor.test( all_data[all_data$species == species1, ]$nb_copy, all_data[all_data$species == species2, ]$nb_copy,method="spearman",exact=F)
all_cor = rbind(all_cor,data.frame(
species1,
species2,
rho = spearman_method_aa$estimate,
pval = spearman_method_aa$p.value
))
}
write.table(all_cor,"data/data_15.tab",quote=F,row.names = F,sep="\t")
# Generate Figure 2
source("figure/figure_supp_generator/library_path.R")
# Pannel 2 A
dataX = read.delim("data/data_16.tab")
dt_graph = dataX
spearman_method_aa = cor.test( dt_graph$nb_copy_Caenorhabditis_elegans, dt_graph$nb_copy_Hydra_vulgaris,method="spearman",exact=F)
pA = ggplot(dt_graph,aes(x= nb_copy_Caenorhabditis_elegans,y=nb_copy_Hydra_vulgaris,label=aa_name_Caenorhabditis_elegans)) +
# geom_smooth(formula = y ~ x, method="lm", size=1 , col=set_color[1],se=F,linetype='dashed') +
geom_point(pch=21,size=4,fill=set_color[2]) +
geom_text(nudge_x = .35,size=5,family="economica") + theme_bw() +  theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=22, family="economica"),
axis.text.x =  element_text(color="black", size=22, family="economica"),
title =  element_text(color="black", size=18, family="economica"),
legend.text =  element_text(color="black", size=16, family="economica"),
strip.text = element_text(size=15),
plot.caption = element_text(hjust = 0.55, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
) +  ylab("tRNA gene copy number (Hydra vulgaris)") + xlab("tRNA gene copy number (Caenorhabditis elegans)") +
labs(
caption = substitute(paste("rho = ",rho_aa_fpkm,", p-value = ",pval_aa_fpkm), list(
rho_aa_fpkm = round(spearman_method_aa$estimate, 2),
pval_aa_fpkm = formatC(spearman_method_aa$p.value, format = "e", digits = 0)))
)
pA
jpeg(paste(path_pannel,"pS2A.jpg",sep=""), width = 4000/1, height = 4000/1,res=700/1)
print(pA)
dev.off()
# Pannel 2 B
data15 = read.delim("data/data_15.tab")
data15$clade_group = GTDrift_list_species[data15$species2,]$clade_group
data1 = read.delim("data/data1_supp.tab")
data1 = data1[ data1$nb_genes_filtered >= 5000 ,]
dt_graph = data15[data15$species2 %in% data1$species,]
pB = ggplot(dt_graph,aes(y=rho,fill=clade_group,x=clade_group))  +
geom_hline(size=1,linetype="dashed",col="red", yintercept = min(dt_graph[dt_graph$rho & dt_graph$pval < 0.05,]$rho) ) +
geom_text (label="p-value < 0.05", y=.4,x="Lepido Diptera",size=5,family="economica",col="red") + geom_boxplot(alpha=.1) +
geom_point(aes(fill=clade_group),size=3,pch=21,alpha=0.7) + theme_bw() + theme(
axis.title.x = element_text(color="black",angle = 50, size=25,family="economica"),
axis.title.y = element_text(color="black", size=22, family="economica"),
axis.text.y =  element_text(color="black", size=20, family="economica"),
axis.text.x =  element_text(color="black",vjust=1,hjust=1, size=22,angle = 30, family="economica"),
title =  element_text(color="black", size=0, family="economica"),
legend.text =  element_text(color="black", size=20, family="economica")
) + theme(legend.position='none') + scale_fill_manual(values=Clade_color) + ylab("Spearmann rho")  + xlab("") + ylim(0,1)
pB = ggMarginal(pB, type="histogram",fill=set_color[1])
pB
jpeg(paste(path_pannel,"p2B.jpg",sep=""), width = 4000/1, height = 2500/1,res=400/1)
print(pB)
dev.off()
# Figure 2
imgA = load.image(paste(path_pannel,"pS2A.jpg",sep="") )
imgB = load.image(paste(path_pannel,"p2B.jpg",sep="") )
{
pdf(file= paste(path_figure,"Figure13_supp.pdf",sep=""), width=11, height=4)
m=matrix(rep(NA,10*100), nrow=10)
for(i in 1:10){
m[i,]=c(rep(1,35),rep(2,65))
}
m
layout(m)
par(mar=c(0, 2, 2, 1))
plot(imgA, axes=FALSE)
mtext("A", adj=0, side=2,at=-200, line=1, font=2, cex=2.2,las=2)
par(mar=c(0, 0, 0, 0))
plot(imgB, axes=FALSE)
mtext("B",adj=-1, side=2,at=150, line=1, font=2, cex=2.2,las=2)
dev.off()
}
