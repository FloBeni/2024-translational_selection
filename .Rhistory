dt_graph[dt_graph$trinucl2 == names(count_dinucl[1]),]$trinucl = paste(dt_graph[dt_graph$trinucl2 == names(count_dinucl[1]),]$trinucl,"1",sep="")
vector = unique(paste(dt_graph$codon))
names( vector ) = unique(paste(dt_graph$trinucl))
names(set_color) = c("G1","C1","A1","T1","G","C","A","T")
dt_graph$trinucl = factor(dt_graph$trinucl,levels = c("G1","A1","T1","C1"))
pA = ggplot(dt_graph,aes(x=fpkm,y=rscu,fill=trinucl,col=trinucl)) +geom_line(size=1.5) +
# geom_point(size=3,col="black",pch=21)  +
theme_bw() + theme(
axis.title.x = element_text(color="black", size=30,family="economica",vjust=0),
axis.title.y = element_text(color="black", size=30, family="economica",vjust=1.7),
axis.text.y =  element_text(color="black", size=25, family="economica"),
axis.text.x =  element_text(color="black", size=25, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=30, family="economica",margin = margin(t = 5)),
strip.text = element_text(size=15,face="italic")
)+ xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(
breaks=c(0.01,0.1,1,10,100,1000,10000,50000),
labels=c(0.01,0.1,1,10,100,1000,10000,50000),limits=c(0.005,1000))+
scale_alpha_manual("Codons",values=c("CDS"=1,"intronic control"=.5)) +
scale_fill_manual("Codons",values=set_color,label=vector)  +
scale_color_manual("Valine\nsynonymous\ncodons",values=set_color,label=vector) +
scale_shape_manual("Codons",values=c("intronic control"=24,"CDS"=21)) +
annotation_logticks(sides = "b")+   facet_wrap(~species) + ylab("RSCU")+labs(fill='Codons',color='Codons',shape='',linetype='')+
guides(fill = guide_legend(order = 1),
color = guide_legend(order = 1,override.aes = list(lwd=3)),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)
pA
jpeg(paste(path_pannel,"pS11A.jpg",sep=""),  width = 10500/2*0.8,  5400/2,res=600/1.8)
print(pA)
dev.off()
# Figure 4
imgA = load.image(paste(path_pannel,"pS11A.jpg",sep="") )
{
pdf(file= paste(path_figure,"Figure11_supp.pdf",sep=""), width=9*0.8, height=5)
m = matrix(rep(NA,100*100), nrow=100)
m
par(mar=c(1, 1, 2, 0))
plot(imgA, axes=FALSE)
dev.off()
}
# Generate Data 12
options(stringsAsFactors = F, scipen = 999)
library(stringr)
library(stringi)
GTDrift_list_species = read.delim("data/GTDrift_list_species.tab")
rownames(GTDrift_list_species) = GTDrift_list_species$species
### tRNA abundance
tRNA_abundance = data.frame()
for (species in GTDrift_list_species$species){
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
tRNA_optimal = read.delim(paste(path,"/decoding_table.tab.gz",sep=""))
dt = t(tRNA_optimal[,c("anticodon","nb_tRNA_copies")])
dt = data.frame(dt)
colnames(dt) = dt[1,]
dt = dt[2,]
rownames(dt) = species
tRNA_abundance = rbind(tRNA_abundance,dt)
}
tRNA_abundance <- data.frame(sapply( tRNA_abundance, as.numeric ))
rownames(tRNA_abundance) = GTDrift_list_species$species
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[data1$clade_group %in% c("Diptera","Lepidoptera") & data1$species != "Eumeta_japonica" & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 & data1$nb_codon_not_decoded == 0,]
# Generate Figure 7
source("figure/figure_main_generator/library_path.R")
resolution=2
lynch_dt = read.table("data/Lynch2023_embr202357561-sup-0002-metazoa.csv",header=T,sep="\t",dec=",")
lynch_dt$species = str_replace_all(lynch_dt$Species," ","_")
lynch_dt$species = sapply(lynch_dt$species ,function(x) paste(str_split_1(x,"_")[1],str_split_1(x,"_")[2],sep="_"))
lynch_dt$genus = sapply(lynch_dt$species ,function(x) str_split_1(x,"_")[1])
rownames(lynch_dt) = lynch_dt$species
lynch_dt$mass = as.numeric(lynch_dt$Dry.Mass.at.Maturity...Âµg.)/1e9
Ne_genus = tapply(lynch_dt$Ne,lynch_dt$genus,mean)
mass_genus = tapply(lynch_dt$mass,lynch_dt$genus,function(x) mean(x,na.rm=T))
data1 = read.delim("data/data1_supp.tab")
data1$Ne = lynch_dt[data1$species,]$Ne
data1$Ne_estimate = "from genus"
data1[!is.na(data1$Ne),]$Ne_estimate = "from species"
data1[is.na(data1$Ne),]$Ne = Ne_genus[sapply(data1[is.na(data1$Ne),]$species ,function(x) str_split_1(x,"_")[1])]
data1[is.na(data1$Ne),]$Ne_estimate = ""
data1$Mass_Lynch = lynch_dt[data1$species,]$mass
data1$Mass_Lynch_estimate = "from genus"
data1[!is.na(data1$Mass_Lynch),]$Mass_Lynch_estimate = "from species"
data1[is.na(data1$Mass_Lynch),]$Mass_Lynch = mass_genus[sapply(data1[is.na(data1$Mass_Lynch),]$species ,function(x) str_split_1(x,"_")[1])]
data1[is.na(data1$Mass_Lynch),]$Mass_Lynch_estimate = ""
table(data1$Ne_estimate)
18+27
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
table(data1$Ne_estimate)
17+24
source("figure/figure_main_generator/library_path.R")
data1 = read.delim("data/data1_supp.tab")
rownames(data1) = data1$species
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
code = code[code$aa_name != "Ter",]
##  Non-adaptive processes are the primary drivers of codon usage variations among metazoans
print("Non-adaptive processes are the primary drivers of codon usage variations among metazoans")
print(paste("position between ",nrow(data1)," metazoan species",sep=""))
print(paste("gene expression data (N=",sum(data1$nb_genes_filtered<5000)," species with less than 5,000 genes",sep=""))
print(paste("CU across ",sum(data1$nb_genes_filtered>=5000)," metazoan species",sep=""))
data1 = data1[data1$nb_genes_filtered>=5000,]
print(paste(sum(data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods","Teleostei"))," vertebrates, ",
sum(data1$clade_group %in% c("Diptera","Lepidoptera","Coleoptera","Hymenoptera","Other Insects")),
" insects and ",sum(data1$clade_group %in%c("Other Metazoans","Nematoda"))," other metazoan clades",sep=""))
print(paste("constrained and spans from ",round(min(data1$gc3),2)," to ",round(max(data1$gc3),2),sep=""))
print(paste(" dipterans (N=",sum(data1$clade_group %in% c("Diptera")),") exhibit",sep=""))
print(paste("GC3 variations (from ",round(min(data1[data1$clade_group %in% c("Diptera"),]$gc3),2)," to ",round(max(data1[data1$clade_group %in% c("Diptera"),]$gc3),2),")",sep=""))
print(paste("GC3 and GCi are highly correlated (rho=",round(data1["Homo_sapiens",]$rho_gc3_gci,2),")",sep=""))
print(paste("pronounced in Caenorhabditis elegans (rho=",round(data1["Caenorhabditis_elegans",]$rho_gc3_gci,2),",",sep=""))
dt_graph = data1
ylabel = "var_gc3"
xlabel = "var_gci"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
dt_graph[,c(ylabel,xlabel)] = sqrt(dt_graph[,c(ylabel,xlabel)])
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
print(paste("were higly correlated (R^2=",model_to_use$r2,")",sep=""))
print(paste(" gene GCi and GC3 (SD_{GCi} > ",
round(min(sqrt(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods","Hymenoptera"),]$var_gci)),3),
", SD_{GC3} > ",
round(min(sqrt(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods","Hymenoptera"),]$var_gc3)),3),sep=""))
##  tRNA abundance matches proteome requirements
print("tRNA abundance matches proteome requirements")
tRNA_abundance = read.delim("/home/fbenitiere/2024-translational_selection/data/tRNA_abundance.tab")
tRNA_abundance = tRNA_abundance[,code$anticodon]
tRNA_abundance$clade_group = GTDrift_list_species[rownames(tRNA_abundance),]$clade_group
print(paste("ranging from an average of ",
round(mean(rowSums(tRNA_abundance[tRNA_abundance$clade_group == 'Hymenoptera',code$anticodon])),0),
" tRNA gene copies per genome in hymenopterans to ",
format(round(mean(rowSums(tRNA_abundance[tRNA_abundance$clade_group == 'Teleostei',code$anticodon])),0),big.mark=",",scientific=F)
," copies in teleost fish",sep=""))
data7 = read.delim("data/data7_supp.tab")
dt_graph = data7[data7$species == "Drosophila_melanogaster",]
spearman_method_aa = cor.test( dt_graph$prop_abundance_average, dt_graph$prop_transcriptome_count,method="spearman",exact=F)
print(paste("direct measures of tRNA abundance (rho = ",
round(spearman_method_aa$estimate,2),sep=""))
dt_graph = data7[data7$species == "Homo_sapiens",]
spearman_method_aa_human = cor.test( dt_graph$gene_copies, dt_graph$prop_transcriptome_count,method="spearman",exact=F)
dt_graph = data7[data7$species == "Drosophila_melanogaster",]
spearman_method_aa_droso = cor.test( dt_graph$gene_copies, dt_graph$prop_transcriptome_count,method="spearman",exact=F)
print(paste(" with their tRNA gene copy numbers (rho=",round(spearman_method_aa_droso$estimate,2)," and ",round(spearman_method_aa_human$estimate,2)," respectively",sep=""))
print(paste(" tRNA gene copy number also correlates with the amino acid demand in Caenorhabditis elegans (rho=",
round(data1['Caenorhabditis_elegans',]$rho_aa_fpkm,2),sep=""))
print(paste(" same analysis conducted across ",nrow(data1)," animal species ",sep=""))
print(paste("in ",round(sum(data1$pval_aa_fpkm<=0.05)/nrow(data1),2)*100,"% of the species ",sep=""))
print(paste("correlates with amino acid usage (N=",sum(data1$pval_aa_fpkm<=0.05)," species)",sep=""))
data1 = data1[data1$pval_aa_fpkm<=0.05,]
print(paste("also excluded ",sum(data1$nb_codon_not_decoded!=0)," species ",sep=""))
data1 = data1[data1$nb_codon_not_decoded == 0,]
##  Definition of putative-optimal codons based on tRNA abundance and wobble-pairing rules
print("Definition of putative-optimal codons based on tRNA abundance and wobble-pairing rules")
print(paste(nrow(code)," codons to their cognate tRNA",sep=""))
tRNA_abundance = tRNA_abundance[rownames(tRNA_abundance)%in%data1$species,]
print(paste("ranges from ",min(rowSums(tRNA_abundance[,code$anticodon] != 0)),
" to ",max(rowSums(tRNA_abundance[,code$anticodon] != 0)),
" per species (average=",round(mean(rowSums(tRNA_abundance[,code$anticodon] != 0)),0),
").",sep=""))
print(paste("This implies that ",61-max(rowSums(tRNA_abundance[,code$anticodon] != 0)),
" to ",61-min(rowSums(tRNA_abundance[,code$anticodon] != 0)),sep=""))
species = "Homo_sapiens"
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
stop_codon = rownames(code[code$aa_name == "Ter",])
codon_usage = read.delim( paste(path,"/codon_usage_gene_fpkm.tab.gz",sep="") )
codon_usage$intern_stop_codon = rowSums(codon_usage[,stop_codon]) - grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon)
codon_usage = codon_usage[codon_usage$intern_stop_codon == 0 & codon_usage$start_codon == "ATG" & codon_usage$length_cds %% 3 == 0,]
codon_usage = codon_usage[grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon),]
codon_usage = codon_usage[order(codon_usage$length_cds,decreasing = T),]
codon_usage = codon_usage[!duplicated(codon_usage$gene_id),]
codon_usage = codon_usage[!is.na(codon_usage$median_fpkm) ,]
codon_usage = codon_usage[codon_usage$median_fpkm != 0 ,]
observation = colSums( codon_usage[3:70] , na.rm = T )
AAC = observation["AAC"]
AAT = observation["AAT"]
print(paste("AAT accounts for ",round(AAT/(AAC+AAT)*100),"% of asparagine codons, highlighting the significance of wobble pairing",sep=""))
print(paste("There are ",length(unique(code[code$nb_syn>1 & code$aa_name != "Ter",]$aa_name))," amino acids that",sep=""))
data12 = read.delim("data/data12_supp.tab")
data12 = data12[data12$species %in% data1$species,]
list_species = c()
list_exaequo = c()
for(species in unique(data12$species)){
aa_present = table(data12[data12$species == species & data12$nb_syn != 1 & data12$abundance != 0 ,]$amino_acid)
aa_present = names(aa_present[aa_present >= 2 ])
if (any(!(aa_present %in% unique(data12[data12$species == species & data12$amino_acid %in% aa_present & data12$POC1, ]$amino_acid)))){
list_species=append(list_species,species)
list_exaequo=append(list_exaequo,aa_present[!(aa_present %in% unique(data12[data12$species == species & data12$amino_acid %in% aa_present & data12$POC1, ]$amino_acid))])
}
}
print(paste(length(list_exaequo)," ex Ã¦quo cases in total, in ",length(list_species)," species",sep=""))
print(paste("In the case of human we are able to identify POC1 for ",length(unique(data12[data12$species == "Homo_sapiens" & data12$POC1,]$amino_acid)),
" amino acid and POC2 for ",length(unique(data12[data12$species == "Homo_sapiens" & data12$POC2,]$amino_acid))," codons.",sep=""))
print(paste("For the human genome, POC1 have been defined for ",length(unique(data12[data12$species == "Homo_sapiens" & data12$POC1,]$amino_acid)),
" amino acids and POC2 for ",length(unique(data12[data12$species == "Homo_sapiens" & data12$POC2,]$amino_acid)),
" amino acids",sep=""))
print(paste("In contrast, for Caenorhabditis elegans, POC1 and POC2 are defined for ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC1,]$amino_acid)),
" and ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC2,]$amino_acid)),
" amino acids",sep=""))
print(paste("On average among the ",nrow(data1),
" species, POC1 are defined for ", round(mean(data1$nb_aa_POC1),1),
" amino acids per species (ranging from ",min(data1$nb_aa_POC1)," to ",max(data1$nb_aa_POC1),
") and POC2 for ", round(mean(data1$nb_aa_POC2),1),
" amino acids (ranging from ",min(data1$nb_aa_POC2)," to ",max(data1[data1$species!="Tyto alba",]$nb_aa_POC2)-1,
", except Tyto alba with ",data1["Tyto_alba",]$nb_aa_POC2," including Ile)",sep=""))
##  Highly expressed genes are enriched in optimal codons
print("Highly expressed genes are enriched in optimal codons")
data5 = read.delim("data/data5_supp.tab")
dt_graph = data5[ data5$species == "Caenorhabditis_elegans",]
print(paste("both for POC1 (from ",
round(min(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
grepl("codon",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq),2)*100,"% to ",
round(dt_graph[grepl("codon",dt_graph$categorie) &
dt_graph$fpkm == max(dt_graph$fpkm) &
grepl("POC1",dt_graph$set) , ]$freq,2)*100,"%) and for POC2 (from ",
round(min(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
grepl("codon",dt_graph$categorie) &
grepl("POC2",dt_graph$set),]$freq),2)*100,"% to ",
round(dt_graph[grepl("codon",dt_graph$categorie) &
dt_graph$fpkm == max(dt_graph$fpkm) &
grepl("POC2",dt_graph$set) , ]$freq,2)*100,"% )",sep=""))
species = "Caenorhabditis_elegans"
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
stop_codon = rownames(code[code$aa_name == "Ter",])
codon_usage = read.delim( paste(path,"/codon_usage_gene_fpkm.tab.gz",sep="") )
codon_usage$intern_stop_codon = rowSums(codon_usage[,stop_codon]) - grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon)
codon_usage = codon_usage[codon_usage$intern_stop_codon == 0 & codon_usage$start_codon == "ATG" & codon_usage$length_cds %% 3 == 0,]
codon_usage = codon_usage[grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon),]
codon_usage = codon_usage[order(codon_usage$length_cds,decreasing = T),]
codon_usage = codon_usage[!duplicated(codon_usage$gene_id),]
codon_usage = codon_usage[!is.na(codon_usage$median_fpkm) ,]
codon_usage = codon_usage[codon_usage$median_fpkm != 0 ,]
print(paste("which represent ",round(sum(codon_usage$median_fpkm <= 50)/nrow(codon_usage),2)*100,"% of genes in \textit{C. elegans}",sep=""))
print(paste("the studied species (N=",nrow(data1)," species)",sep=""))
summ_lm = summary(lm(data1$expressed_overused_background_POC1~data1$expressed_overused_background_POC2))
print(paste("are strongly correlated (R2=",round(summ_lm$r.squared,2)*100,"% , p-value<",
format(summ_lm$coefficients[2,4],scientific = T),sep=""))
print(paste(" For ",sum(data1$expressed_overused_background_POC1 >=0,na.rm = T )," species (",
round(sum(data1$expressed_overused_background_POC1 >=0,na.rm = T )/nrow(data1),2)*100,"%),",sep=""))
print(paste("are around +",round(mean(data1[data1$clade_group == "Diptera",]$expressed_overused_background_POCs)),
"% in Diptera compared to +",
round(mean(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods","Teleostei"),]$expressed_overused_background_POCs)),
"% in vertebrates",sep=""))
##  Highly constrained amino acids are enriched in optimals codons
print("Highly constrained amino acids are enriched in optimals codons")
data6 = read.delim("data/data6_supp.tab")
dt_analysis = data6[data6$species == "Caenorhabditis_elegans",]
print(paste("most constrained sites within proteins (from ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Unconstrained",]$freq,na.rm=T)*100,1),"% on average to average ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Highly constrained",]$freq,na.rm=T)*100,1),"%),",sep=""))
print(paste("Overall, Delta POCcons is positive in ",round(sum(data1$constraint_overused_POCs>0)/nrow(data1)*100,),
"% of species ",sep=""))
##  Selection favors optimal codons in highly expressed genes of Drosophila melanogaster
print("Selection favors optimal codons in highly expressed genes of Drosophila melanogaster")
data_11 = read.delim("data/data11_supp.tab")
print(paste(format(sum(data_11$sum_subst_density_nonoptimal_to_optimal_codon),big.mark=",",scientific=T),
" nPO$>$PO synonymous SNPs and ",
format(sum(data_11$sum_subst_density_optimal_to_nonoptimal_codon),big.mark=",",scientific=T)," PO$>$nPO synonymous SNPs",sep=""))
data_10 = read.delim("data/data10_supp.tab")
print(paste(format(sum(data_10$sum_subst_density_nonoptimal_to_optimal_codon),big.mark=",",scientific=T),
" nPO$>$PO synonymous substitutions and ",
format(sum(data_10$sum_subst_density_optimal_to_nonoptimal_codon),big.mark=",",scientific=T)," PO$>$nPO synonymous substitutions",sep=""))
print(paste("In introns, we observed ",
format(sum(data_11$sum_subst_density_nonoptimal_to_optimal_intron),big.mark=",",scientific=T)," nPO$>$PO SNPs and ",
format(sum(data_11$sum_subst_density_optimal_to_nonoptimal_intron),big.mark=",",scientific=T)," PO$>$nPO SNPs, ",
format(sum(data_10$sum_subst_density_nonoptimal_to_optimal_intron),big.mark=",",scientific=T)," nPO$>$PO substitutions and ",
format(sum(data_10$sum_subst_density_optimal_to_nonoptimal_intron),big.mark=",",scientific=T)," PO$>$nPO substitutions. ",sep=""))
##  Weak relationship between the strength of translational selection and the effective population size
print("Weak relationship between the strength of translational selection and the effective population size")
lynch_dt = read.table("data/Lynch2023_embr202357561-sup-0002-metazoa.csv",header=T,sep="\t",dec=",")
lynch_dt$species = str_replace_all(lynch_dt$Species," ","_")
lynch_dt$species = sapply(lynch_dt$species ,function(x) paste(str_split_1(x,"_")[1],str_split_1(x,"_")[2],sep="_"))
lynch_dt$genus = sapply(lynch_dt$species ,function(x) str_split_1(x,"_")[1])
rownames(lynch_dt) = lynch_dt$species
Ne_genus = tapply(lynch_dt$Ne,lynch_dt$genus,mean)
data1$Ne = lynch_dt[data1$species,]$Ne
data1$Ne_estimate = "from genus"
data1[!is.na(data1$Ne),]$Ne_estimate = "from species"
data1[is.na(data1$Ne),]$Ne = Ne_genus[sapply(data1[is.na(data1$Ne),]$species ,function(x) str_split_1(x,"_")[1])]
data1[is.na(data1$Ne),]$Ne_estimate = ""
print(paste("This list included ",sum(lynch_dt$species %in% data1$species),
" species of our data set, and in addition allowed us to get a proxy of Ne for ",
sum(!is.na(data1$Ne))," species",sep=""))
data1$Ne_estimate == "from genus"
sum(data1$Ne_estimate == "from genus")
print(paste("This list included ",sum(data1$Ne_estimate == "from species"),
" species of our data set, and in addition allowed us to get a proxy of Ne for ",
sum(data1$Ne_estimate == "from genus")," species",sep=""))
17+24
# Generate Figure 7
source("figure/figure_main_generator/library_path.R")
resolution=2
lynch_dt = read.table("data/Lynch2023_embr202357561-sup-0002-metazoa.csv",header=T,sep="\t",dec=",")
lynch_dt$species = str_replace_all(lynch_dt$Species," ","_")
lynch_dt$species = sapply(lynch_dt$species ,function(x) paste(str_split_1(x,"_")[1],str_split_1(x,"_")[2],sep="_"))
lynch_dt$genus = sapply(lynch_dt$species ,function(x) str_split_1(x,"_")[1])
rownames(lynch_dt) = lynch_dt$species
lynch_dt$mass = as.numeric(lynch_dt$Dry.Mass.at.Maturity...Âµg.)/1e9
Ne_genus = tapply(lynch_dt$Ne,lynch_dt$genus,mean)
mass_genus = tapply(lynch_dt$mass,lynch_dt$genus,function(x) mean(x,na.rm=T))
data1 = read.delim("data/data1_supp.tab")
data1$Ne = lynch_dt[data1$species,]$Ne
data1$Ne_estimate = "from genus"
data1[!is.na(data1$Ne),]$Ne_estimate = "from species"
data1[is.na(data1$Ne),]$Ne = Ne_genus[sapply(data1[is.na(data1$Ne),]$species ,function(x) str_split_1(x,"_")[1])]
data1[is.na(data1$Ne),]$Ne_estimate = ""
table(data1$Ne_estimate)
18+27
# Generate Supplementary Figure 10
source("figure/figure_supp_generator/library_path.R")
resolution=2
lynch_dt = read.table("data/Lynch2023_embr202357561-sup-0002-metazoa.csv",header=T,sep="\t",dec=",")
lynch_dt$species = str_replace_all(lynch_dt$Species," ","_")
lynch_dt$species = sapply(lynch_dt$species ,function(x) paste(str_split_1(x,"_")[1],str_split_1(x,"_")[2],sep="_"))
lynch_dt$genus = sapply(lynch_dt$species ,function(x) str_split_1(x,"_")[1])
rownames(lynch_dt) = lynch_dt$species
lynch_dt$mass = as.numeric(lynch_dt$Dry.Mass.at.Maturity...kg.)
Ne_genus = tapply(lynch_dt$Ne,lynch_dt$genus,mean)
mass_genus = tapply(lynch_dt$mass,lynch_dt$genus,function(x) mean(x,na.rm=T))
data1 = read.delim("data/data1_supp.tab")
data1$Ne = lynch_dt[data1$species,]$Ne
data1$Ne_estimate = "from genus"
data1[!is.na(data1$Ne),]$Ne_estimate = "from species"
data1[is.na(data1$Ne),]$Ne = Ne_genus[sapply(data1[is.na(data1$Ne),]$species ,function(x) str_split_1(x,"_")[1])]
data1[is.na(data1$Ne),]$Ne_estimate = ""
data1$Mass_Lynch = lynch_dt[data1$species,]$mass
data1$Mass_Lynch_estimate = "from genus"
data1[!is.na(data1$Mass_Lynch),]$Mass_Lynch_estimate = "from species"
data1[is.na(data1$Mass_Lynch),]$Mass_Lynch = mass_genus[sapply(data1[is.na(data1$Mass_Lynch),]$species ,function(x) str_split_1(x,"_")[1])]
data1[is.na(data1$Mass_Lynch),]$Mass_Lynch_estimate = ""
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
# data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1[,c("lifespan_days","length_cm","weight_kg")] = GTDrift_list_species[data1$species,c("lifespan_days","length_cm","weight_kg")]
dnds = read.delim("data/GTDrift_Metazoa_dNdS.tab")
rownames(dnds) = dnds$species
data1[,c("dNdS")] = dnds[data1$species,c("dNdS")]
# Pannel 7 A
dt_graph = data1
ylabel = "Ne"
xlabel = "lifespan_days"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=log10(dt_graph[,xlabel]),y=log10(dt_graph[,ylabel]),
label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
pA =  ggplot(dt_graph,aes_string(y=ylabel,x=xlabel,shape="Ne_estimate"))  +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept) +
geom_point(aes(fill=clade_group),size=4,alpha=.7) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=28,family="economica"),
axis.title.y = element_text(color="black", size=28, family="economica"),
axis.text.y =  element_text(color="black", size=26, family="economica"),
axis.text.x =  element_text(color="black", size=26, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=22, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.35, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
)+ guides(fill = guide_legend(override.aes = list(size=5))) +
labs(
caption = substitute(paste(model,lambda," :",aic," R"^2,"= ",r2,", p-value ",pvalue,model_non_opti,
"; LM"," : R"^2,"= ",LMr2,", p-value = ",LMpval), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
)+ scale_fill_manual("Clades",values=Clade_color) + scale_shape_manual(expression(paste(italic("N"[e])," estimates")),values=c(24,21)) +
ylab(expression(paste(italic("N"[e])))) +
scale_x_log10(breaks=c(0.05,0.1,0.5,1,5,10,100,1000,10000),labels=c(0.05,0.1,0.5,1,5,10,100,1000,10000)) +
xlab("Longevity (days, log scale)")+
guides(fill = guide_legend(byrow = TRUE,override.aes = list(size=5,pch=21)),
shape = guide_legend(byrow = TRUE,override.aes = list(fill="black")))  +
theme(legend.spacing.y = unit(-.1, 'cm'))  +
scale_y_log10(labels=label_log(digits = 2))  +annotation_logticks(sides="lb")
pA
table(dt_graph$Ne_estimate)
# Pannel 7 A
dt_graph = data1
table(dt_graph$Ne_estimate)
dt_graph = data1
ylabel = "Ne"
xlabel = "length_cm"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=log10(dt_graph[,xlabel]),y=log10(dt_graph[,ylabel]),label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
pB = ggplot(dt_graph,aes_string(y=ylabel,x=xlabel,shape="Ne_estimate"))    +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
geom_point(aes(fill=clade_group),size=4,alpha=.7) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=24, family="economica"),
axis.text.x =  element_text(color="black", size=24, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.6, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
)+ guides(fill = guide_legend(override.aes = list(size=5))) + theme(legend.position="none")+
labs(
caption = substitute(paste(model,lambda," :",aic," R"^2,"= ",r2,", p-value ",pvalue,model_non_opti,
"; LM"," : R"^2,"= ",LMr2,", p-value = ",LMpval), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
) + scale_fill_manual(values=Clade_color) + scale_shape_manual(expression(paste(italic("N"[e])," estimates")),values=c(24,21)) +
ylab(expression(paste(italic("N"[e])))) +
scale_x_log10(breaks=c(0.01,0.1,1,10,100,1000,5000),labels=c(0.01,0.1,1,10,100,1000,5000)) + xlab("Body length (cm, log scale)")+
annotation_logticks(sides="lb")  + scale_y_log10() + guides(fill = guide_legend(override.aes = list(size=5,pch=21)),
shape = guide_legend(override.aes = list(fill="black"))) +
scale_y_log10(labels=label_log(digits = 2))
pB
dt_graph = data1
ylabel = "Ne"
xlabel = "Mass_Lynch"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=log10(dt_graph[,xlabel]),y=log10(dt_graph[,ylabel]),label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
pC =  ggplot(dt_graph,aes_string(y=ylabel,x=xlabel,shape="Mass_Lynch_estimate"))   +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
geom_point(aes(fill=clade_group),size=4,alpha=.7) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=24, family="economica"),
axis.text.x =  element_text(color="black", size=24, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.5, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
)+ guides(fill = guide_legend(override.aes = list(size=5))) +
labs(
caption = substitute(paste(model,lambda," :",aic," R"^2,"= ",r2,", p-value ",pvalue,model_non_opti,
"; LM"," : R"^2,"= ",LMr2,", p-value = ",LMpval), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
) + scale_fill_manual("Clades",values=Clade_color) + scale_shape_manual(expression(paste(italic("N"[e])," estimates")),values=c(24,21)) +
ylab(expression(paste(italic("N"[e])))) +   theme(legend.position="none")+ xlab("Body mass (kg, log scale)")+
scale_x_log10(breaks=c(10^-12,10^-8,10^-4,10^0,10^4,10^6),labels=label_log(digits = 2),limits = c(0.00000000001,10000)) +
annotation_logticks(sides="lb")  + scale_y_log10() + guides(fill = guide_legend(override.aes = list(size=5,pch=21)),
shape = guide_legend(override.aes = list(fill="black"))) +
scale_y_log10(labels=label_log(digits = 2))
pC
dt_graph = data1
ylabel = "Ne"
xlabel = "dNdS"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=log10(dt_graph[,xlabel]),y=log10(dt_graph[,ylabel]),label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
pD = ggplot(dt_graph,aes_string(y=ylabel,x=xlabel,shape="Ne_estimate"))   +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
geom_point(aes(fill=clade_group),size=4,alpha=.7) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=24, family="economica"),
axis.text.x =  element_text(color="black", size=24, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.6, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
)+ guides(fill = guide_legend(override.aes = list(size=5))) + theme(legend.position="none")+
labs(
caption = substitute(paste(model,lambda," :",aic," R"^2,"= ",r2,", p-value ",pvalue,model_non_opti,
"; LM"," : R"^2,"= ",LMr2,", p-value = ",LMpval), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
) + scale_fill_manual(values=Clade_color) + scale_shape_manual(expression(paste(italic("N"[e])," estimates")),values=c(24,21)) +
ylab(expression(paste(italic("N"[e])))) + xlab("dN/dS (log scale)") + scale_x_log10()+ annotation_logticks(sides="lb")  +
scale_y_log10() + guides(fill = guide_legend(override.aes = list(size=5,pch=21)),
shape = guide_legend(override.aes = list(fill="black"))) +
scale_y_log10(labels=label_log(digits = 2))
pD
# Generate Supplementary Figure 10
source("figure/figure_supp_generator/library_path.R")
resolution=2
lynch_dt = read.table("data/Lynch2023_embr202357561-sup-0002-metazoa.csv",header=T,sep="\t",dec=",")
lynch_dt$species = str_replace_all(lynch_dt$Species," ","_")
lynch_dt$species = sapply(lynch_dt$species ,function(x) paste(str_split_1(x,"_")[1],str_split_1(x,"_")[2],sep="_"))
lynch_dt$genus = sapply(lynch_dt$species ,function(x) str_split_1(x,"_")[1])
rownames(lynch_dt) = lynch_dt$species
lynch_dt$mass = as.numeric(lynch_dt$Dry.Mass.at.Maturity...kg.)
Ne_genus = tapply(lynch_dt$Ne,lynch_dt$genus,mean)
mass_genus = tapply(lynch_dt$mass,lynch_dt$genus,function(x) mean(x,na.rm=T))
data1 = read.delim("data/data1_supp.tab")
data1$Ne = lynch_dt[data1$species,]$Ne
data1$Ne_estimate = "from genus"
data1[!is.na(data1$Ne),]$Ne_estimate = "from species"
data1[is.na(data1$Ne),]$Ne = Ne_genus[sapply(data1[is.na(data1$Ne),]$species ,function(x) str_split_1(x,"_")[1])]
data1[is.na(data1$Ne),]$Ne_estimate = ""
data1$Mass_Lynch = lynch_dt[data1$species,]$mass
data1$Mass_Lynch_estimate = "from genus"
data1[!is.na(data1$Mass_Lynch),]$Mass_Lynch_estimate = "from species"
data1[is.na(data1$Mass_Lynch),]$Mass_Lynch = mass_genus[sapply(data1[is.na(data1$Mass_Lynch),]$species ,function(x) str_split_1(x,"_")[1])]
data1[is.na(data1$Mass_Lynch),]$Mass_Lynch_estimate = ""
table(data1$Mass_Lynch_estimate)
# Generate Figure 7
source("figure/figure_main_generator/library_path.R")
resolution=2
lynch_dt = read.table("data/Lynch2023_embr202357561-sup-0002-metazoa.csv",header=T,sep="\t",dec=",")
lynch_dt$species = str_replace_all(lynch_dt$Species," ","_")
lynch_dt$species = sapply(lynch_dt$species ,function(x) paste(str_split_1(x,"_")[1],str_split_1(x,"_")[2],sep="_"))
lynch_dt$genus = sapply(lynch_dt$species ,function(x) str_split_1(x,"_")[1])
rownames(lynch_dt) = lynch_dt$species
lynch_dt$mass = as.numeric(lynch_dt$Dry.Mass.at.Maturity...Âµg.)/1e9
Ne_genus = tapply(lynch_dt$Ne,lynch_dt$genus,mean)
mass_genus = tapply(lynch_dt$mass,lynch_dt$genus,function(x) mean(x,na.rm=T))
data1 = read.delim("data/data1_supp.tab")
data1$Ne = lynch_dt[data1$species,]$Ne
data1$Ne_estimate = "from genus"
data1[!is.na(data1$Ne),]$Ne_estimate = "from species"
data1[is.na(data1$Ne),]$Ne = Ne_genus[sapply(data1[is.na(data1$Ne),]$species ,function(x) str_split_1(x,"_")[1])]
data1[is.na(data1$Ne),]$Ne_estimate = ""
View(data1)
