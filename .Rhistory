data5[data5$categorie == "Putative optimal codons (POC)",]$categorie = ""
dt_graph = data5[ data5$species == "Homo_sapiens" & data5$set != "POCs",]
pA = ggplot(dt_graph ,
aes(x=fpkm ,y=freq*100,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
scale_fill_manual(values=set_color[c(2,1,4,3)]) +
scale_color_manual(values=set_color[c(2,1,4,3)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","dashed","solid","dashed"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica"),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
) + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,2000))+ ylim(0.2*100,0.8*100) +
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) + annotation_logticks(sides = "b")+   guides(fill="none",color="none",linetype="none",shape="none")
pA
jpeg(paste(path_pannel,"p4A.jpg",sep=""),  width = 8500/2,  5400/2,res=1000/1.8)
print(pA)
dev.off()
# Pannel 4 B
dt_graph = data5[ data5$species == "Caenorhabditis_elegans" & data5$set != "POCs",]
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=freq*100,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
scale_fill_manual(values=set_color[c(2,1,4,3)]) +
scale_color_manual(values=set_color[c(2,1,4,3)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","dashed","solid","dashed"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
) + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,2000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
jpeg(paste(path_pannel,"p4B.jpg",sep=""),  width = 11000/2,  5500/2,res=1000/1.8)
print(pB)
dev.off()
# Pannel 4 C
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
dt_graph = data1
ylabel = "expressed_overused_background_POC2"
xlabel = "expressed_overused_background_POC1"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
pC =  ggplot(dt_graph,aes_string(y=ylabel,x=xlabel,fill="clade_group",label="species"))  +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
geom_abline(linetype="dashed") +
geom_point(aes(fill=clade_group),size=3,pch=21,alpha=.8) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=25, family="economica"),
axis.text.x =  element_text(color="black", size=25, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=20, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.4, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot",
legend.title =  element_text(color="black", size=25, family="economica"),
)+ guides(fill = guide_legend(override.aes = list(size=5))) +
labs(
caption = substitute(paste(model," :",aic," R"^2,"= ",r2,", p-value = ",pvalue,model_non_opti), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
)  + scale_fill_manual("Clades",values=Clade_color) +
xlab("POC1 frequency variations with expression (%)")  +
ylab("POC2 frequency variations with expression (%)") + scale_y_continuous(breaks = seq(-10,25,5))
# + theme(legend.position='none')
pC
jpeg(paste(path_pannel,"p4C.jpg",sep=""),width = 5200/2, height = 4000/2,res=600/2)
print(pC)
dev.off()
# Pannel 4 D
dt_graph = data.frame(
species = c(data1$species,data1$species),
clade_group = c(data1$clade_group,data1$clade_group),
category = c(rep("POC1",nrow(data1)), rep("POC2",nrow(data1))),
value = c(data1$expressed_overused_background_POC1,data1$expressed_overused_background_POC2))
dt_graph$clade_group_facet = str_replace_all(dt_graph$clade_group," ","\n")
dt_graph$clade_group_facet = factor(dt_graph$clade_group_facet, levels = str_replace_all(names(Clade_color)," ","\n"))
pD = ggplot(dt_graph,aes(y=value,x=category,label=species,fill=clade_group))  +
geom_hline(size=1,linetype="dashed",col="red", yintercept = 0 ) +geom_point(size=2,pch=21,alpha=.8)+
geom_boxplot(alpha=.1)  + facet_wrap(~clade_group_facet,scales="free_x",ncol=11)+ theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=17, family="economica"),
legend.text =  element_text(color="black", size=20, family="economica"),
strip.text = element_text(size=15, family="economica",face="bold"),
title =  element_text(size=30, family="economica"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)
# strip.background = element_rect(color = "grey", size = 1)
) + ylab("POC frequency variations with expression (%)") +
theme(legend.position='none') + scale_fill_manual(values=Clade_color) + xlab("")
pD
# Difference in proportion of POC between\nthe top 5% and bottom 50% expressed (%)
jpeg(paste(path_pannel,"p4D.jpg",sep=""), width = 5500/1, height = 3000/1,res=460/1)
print(pD)
dev.off()
# Figure 4
imgA = load.image(paste(path_pannel,"p4A.jpg",sep="") )
imgB = load.image(paste(path_pannel,"p4B.jpg",sep="") )
imgC = load.image(paste(path_pannel,"p4C.jpg",sep="") )
imgD = load.image(paste(path_pannel,"p4D.jpg",sep="") )
human<-readPNG(paste(path_require,"human.png",sep=""))
Caenorhabditis_elegans = readPNG(paste(path_require,"Caenorhabditis_elegans.png",sep=""))
# Drosophila_melanogaster = readPNG(paste(path_require,"Drosophila_melanogaster.png",sep=""))
# clade_png<-readPNG(paste(path_require,"clade.png",sep=""))
{
pdf(file= paste(path_figure,"Figure4.pdf",sep=""), width=9, height=5.6)
m = matrix(rep(NA,100*100), nrow=100)
for(i in 1:50){
m[i,]=c(rep(1,48),rep(2,100-48))
}
for(i in 50:100){
m[i,]=c(rep(3,40),rep(4,60))
}
layout(m)
m
par(mar=c(1, 1, 2, 0))
plot(imgA, axes=FALSE)
mtext("A",at=50,adj=-1, side=2, line=1, font=2, cex=1.7,las=2)
xhuman = 470
yhuman = -350
rasterImage(human,xleft=0+xhuman, ybottom=450/.9-yhuman, xright=190/.9+xhuman, ytop=0-yhuman)
par(mar=c(0, 0, 1, 0))
plot(imgB, axes=FALSE)
mtext("B",at=0,adj=0.5, side=2, line=1, font=2, cex=1.7,las=2)
xcel=500
ycel=-350
rasterImage(Caenorhabditis_elegans,xleft=0+xcel, ybottom=350/1.5-ycel, xright=1000/1.5+xcel, ytop=0-ycel)
par(mar=c(0,2, 2, 0))
plot(imgC, axes=FALSE)
mtext("C",at=-100,adj=0, side=2, line=1, font=2, cex=1.7,las=2)
par(mar=c(0,1, 1, 0))
plot(imgD, axes=FALSE)
mtext("D",at=100,adj=0, side=2, line=1, font=2, cex=1.7,las=2)
dev.off()
}
# Generate Data 2, 3, 5 and 6
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
stop_codon = rownames(code[code$aa_name == "Ter",])
data_conservation = read.delim(paste("data/compilation_prop_gap_pergene_25_50_75.tab.gz",sep=""))
data_conservation_rmfirst1000bp = read.delim(paste("data/compilation_prop_gap_pergene_25_50_75_rmfirst1000bp.tab.gz",sep=""))
GTDrift_list_species = read.delim("data/GTDrift_list_species.tab")
rownames(GTDrift_list_species) = GTDrift_list_species$species
species_list = c( "Caenorhabditis_elegans" , "Drosophila_melanogaster" , "Homo_sapiens" , "Musca_domestica" )
data2 = data.frame()
data3 = data.frame()
data5 = data.frame()
data6 = data.frame()
for (species in species_list){
print(species)
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
codon_usage = read.delim( paste(path,"/codon_usage_gene_fpkm.tab.gz",sep="") )
codon_usage$intern_stop_codon = rowSums(codon_usage[,stop_codon]) - grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon)
codon_usage = codon_usage[codon_usage$intern_stop_codon == 0 & codon_usage$start_codon == "ATG" & codon_usage$length_cds %% 3 == 0,]
if (quantile(grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon),0.75) != 0){  # if annotated seq have a stop codon for the majority then remove those that dont
codon_usage = codon_usage[grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon),] } else { print(species)}
codon_usage = codon_usage[order(codon_usage$length_cds,decreasing = T),]
codon_usage = codon_usage[!duplicated(codon_usage$gene_id),]
codon_usage = codon_usage[!is.na(codon_usage$median_fpkm) ,]
codon_usage = codon_usage[codon_usage$median_fpkm != 0 ,]
## GCi vs GC3
GC3_obs = rowSums(codon_usage[c("C3","G3")],na.rm = T)
ATGC3_neg_obs = rowSums(codon_usage[c("A3","T3","C3","G3")],na.rm = T)
GCi_obs = rowSums(codon_usage[c("Ci","Gi")],na.rm = T)
ATGCi_neg_obs = rowSums(codon_usage[c("Ai","Ti","Ci","Gi")],na.rm = T)
GC3 = GC3_obs / ATGC3_neg_obs
GCi = GCi_obs / ATGCi_neg_obs
data2 = rbind(data2,data.frame(
species,
GCi,
GC3,
gene_expression = codon_usage$median_fpkm
))
##### AA frequency
observation = colSums( codon_usage[3:70] * codon_usage$median_fpkm , na.rm = T )
tRNA_optimal = read.delim(paste(path,"/decoding_table.tab.gz",sep=""))
rownames(tRNA_optimal) = tRNA_optimal$codon
tRNA_optimal = tRNA_optimal[tRNA_optimal$aa_name != "Ter",]
nb_codon_not_decoded = sum(!tRNA_optimal$decoded)
aa_data = data.frame()
for (amino_acid in unique(code$aa_name)){
codon_used = rownames(code[code$aa_name == amino_acid,])
aa_data = rbind(aa_data,
data.frame(
species,
amino_acid ,
letter_aa = unique(code[code$aa_name == amino_acid,]$aa) ,
tRNASE_copies= sum(tRNA_optimal[codon_used,]$nb_tRNA_copies,na.rm = T),
obs_codon = sum(observation[codon_used])
))
}
aa_data = aa_data[!grepl("Ter",aa_data$amino_acid) ,]
data3 = rbind(data3,aa_data)
##### Over-used of pOC in expressed genes
xaxis = codon_usage$median_fpkm
proportion = 5/100
quantile = unique( quantile(xaxis, probs = seq(0, 1,proportion),na.rm=T ))
intervalle_FPKM = cut(xaxis, quantile,include.lowest = T,include.higher=T)
FPKM_bins = tapply(xaxis, intervalle_FPKM, median)
for ( type_aa in c( "POC1","POC2","POCs")){
if (type_aa == "POC1" ){
subset_selected = tRNA_optimal[tRNA_optimal$POC1,]
list_POC = subset_selected$codon
list_aa = subset_selected$aa_name
list_codon = tRNA_optimal[tRNA_optimal$aa_name %in% list_aa,]$codon
} else if  (type_aa == "POC2" ){
subset_selected = tRNA_optimal[tRNA_optimal$POC2,]
list_POC = subset_selected$codon
list_aa = subset_selected$aa_name
list_codon = tRNA_optimal[tRNA_optimal$aa_name %in% list_aa,]$codon
} else if  (type_aa == "POCs" ){
subset_selected = tRNA_optimal[tRNA_optimal$POC2 | tRNA_optimal$POC1,]
list_POC = subset_selected$codon
list_aa = subset_selected$aa_name
list_codon = tRNA_optimal[tRNA_optimal$aa_name %in% list_aa,]$codon
}
print(list_POC)
print(list_codon)
POC_obs = rowSums(codon_usage[ list_POC ],na.rm = T)
POC_codon = rowSums(codon_usage[ list_codon ],na.rm = T)
POC_obs_intronic = rowSums(codon_usage[paste(list_POC,'_intronic',sep = "")],na.rm = T)
POC_codon_intronic = rowSums(codon_usage[paste(list_codon,'_intronic',sep = "")],na.rm = T)
data5 = rbind(data5,data.frame(
species,
set = type_aa,
nb_genes = as.numeric(table(intervalle_FPKM)),
freq =  tapply( POC_obs / POC_codon  , intervalle_FPKM , function(x) mean(x,na.rm=T)),
fpkm = FPKM_bins,
categorie = "Putative optimal codons (POC)",
type_aa=paste(type_aa," codons, Nb aa = ",length(list_aa),sep=""),
gene_set = paste("N = " , sum(ATGC3_neg_obs != 0),sep=""),
nb_poc =  length(list_POC) ,
nb_aa = length(list_aa),
list=paste(list_POC,collapse =";")
))
data5 = rbind(data5,data.frame(
species,
set = type_aa,
nb_genes = as.numeric(table(intervalle_FPKM)),
freq =   tapply( POC_obs_intronic / POC_codon_intronic  , intervalle_FPKM , function(x) mean(x,na.rm=T)),
fpkm = FPKM_bins,
categorie = "POC-matching triplets (POCMT)",
type_aa=paste(type_aa," codons, Nb aa = ",length(list_aa),sep=""),
gene_set=paste("N = " , sum(ATGCi_neg_obs != 0),sep=""),
nb_poc =  length(list_POC),
nb_aa = length(list_aa),
list=paste(list_POC,collapse=";")
))
## Over-used of POC in constraint sites
if (GTDrift_list_species[species,]$clade_group %in% c("Mammalia","Aves","Other Tetrapods")){
data_conservation_sub = data_conservation_rmfirst1000bp[data_conservation_rmfirst1000bp$species == species & data_conservation_rmfirst1000bp$protein %in% codon_usage$protein_id,]
} else {
data_conservation_sub = data_conservation[data_conservation$species == species & data_conservation$protein %in% codon_usage$protein_id,]
}
table_constrain = data.frame(busco_id = data_conservation_sub$busco_id)
for (constrain in c("_highconst","_modconst","_sligconst","_unconst")){
table_constrain[,paste("POC",constrain,sep="")] = rowSums(data_conservation_sub[paste(list_POC,constrain,sep = "")],na.rm = T)
table_constrain[,paste("POC_codon",constrain,sep="")] = rowSums(data_conservation_sub[paste(list_codon,constrain,sep = "")],na.rm = T)
}
data6 = rbind(data6, data.frame(
species,
type_aa,
busco_id=table_constrain$busco_id,
freq = table_constrain$POC_highconst / table_constrain$POC_codon_highconst ,
nb_site = sum(data_conservation_sub$len_high_const_seq),
nb_genes = nrow(data_conservation_sub),
categorie = "Highly constrained"
))
data6 = rbind(data6, data.frame(
species,
type_aa,
busco_id=table_constrain$busco_id,
freq = table_constrain$POC_modconst / table_constrain$POC_codon_modconst ,
nb_site = sum(data_conservation_sub$len_mod_const_seq),
nb_genes = nrow(data_conservation_sub),
categorie = "Moderately constrained"
))
data6 = rbind(data6, data.frame(
species,
type_aa,
busco_id=table_constrain$busco_id,
freq = table_constrain$POC_sligconst / table_constrain$POC_codon_sligconst ,
nb_site = sum(data_conservation_sub$len_slight_const_seq),
nb_genes = nrow(data_conservation_sub),
categorie = "Slighlty constrained"
))
data6 = rbind(data6, data.frame(
species,
type_aa,
busco_id=table_constrain$busco_id,
freq = table_constrain$POC_unconst / table_constrain$POC_codon_unconst ,
nb_site = sum(data_conservation_sub$len_unconst_seq),
nb_genes = nrow(data_conservation_sub),
categorie = "Unconstrained"
))
}
}
write.table(data2 , "data/data2_supp.tab",quote=F,row.names = F,sep="\t")
write.table(data3 , "data/data3_supp.tab",quote=F,row.names = F,sep="\t")
write.table(data5 , "data/data5_supp.tab",quote=F,row.names = F,sep="\t")
write.table(data6 , "data/data6_supp.tab",quote=F,row.names = F,sep="\t")
# Generate Figure 4
source("figure/figure_main_generator/library_path.R")
# Pannel 4 A
data5 = read.delim("data/data5_supp.tab")
data5$gene_set = str_replace_all(data5$gene_set,"all,","genes,")
data5[data5$categorie == "POC-matching triplets (POCMT)",]$categorie = "control"
data5[data5$categorie == "Putative optimal codons (POC)",]$categorie = ""
dt_graph = data5[ data5$species == "Homo_sapiens" & data5$set != "POCs",]
pA = ggplot(dt_graph ,
aes(x=fpkm ,y=freq*100,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=4)+
scale_fill_manual(values=set_color[c(2,1,4,3)]) +
scale_color_manual(values=set_color[c(2,1,4,3)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","dashed","solid","dashed"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica"),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
) + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.01,350)) +  ylim(0.2*100,0.7*100) +
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) + annotation_logticks(sides = "b")+   guides(fill="none",color="none",linetype="none",shape="none")
pA
jpeg(paste(path_pannel,"p4A.jpg",sep=""),  width = 8500/2,  5400/2,res=1000/1.8)
print(pA)
dev.off()
# Pannel 4 B
dt_graph = data5[ data5$species == "Caenorhabditis_elegans" & data5$set != "POCs",]
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=freq*100,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=4)+
scale_fill_manual(values=set_color[c(2,1,4,3)]) +
scale_color_manual(values=set_color[c(2,1,4,3)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","dashed","solid","dashed"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
) + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.01,350))+ ylim(0.2*100,0.7*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
jpeg(paste(path_pannel,"p4B.jpg",sep=""),  width = 11000/2,  5500/2,res=1000/1.8)
print(pB)
dev.off()
# Pannel 4 C
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
dt_graph = data1
ylabel = "expressed_overused_background_POC2"
xlabel = "expressed_overused_background_POC1"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
pC =  ggplot(dt_graph,aes_string(y=ylabel,x=xlabel,fill="clade_group",label="species"))  +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
geom_abline(linetype="dashed") +
geom_point(aes(fill=clade_group),size=3,pch=21,alpha=.8) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=25, family="economica"),
axis.text.x =  element_text(color="black", size=25, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=20, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.4, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot",
legend.title =  element_text(color="black", size=25, family="economica"),
)+ guides(fill = guide_legend(override.aes = list(size=5))) +
labs(
caption = substitute(paste(model," :",aic," R"^2,"= ",r2,", p-value = ",pvalue,model_non_opti), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
)  + scale_fill_manual("Clades",values=Clade_color) +
xlab("POC1 frequency variations with expression (%)")  +
ylab("POC2 frequency variations with expression (%)") + scale_y_continuous(breaks = seq(-10,25,5))
# + theme(legend.position='none')
pC
jpeg(paste(path_pannel,"p4C.jpg",sep=""),width = 5200/2, height = 4000/2,res=600/2)
print(pC)
dev.off()
# Pannel 4 D
dt_graph = data.frame(
species = c(data1$species,data1$species),
clade_group = c(data1$clade_group,data1$clade_group),
category = c(rep("POC1",nrow(data1)), rep("POC2",nrow(data1))),
value = c(data1$expressed_overused_background_POC1,data1$expressed_overused_background_POC2))
dt_graph$clade_group_facet = str_replace_all(dt_graph$clade_group," ","\n")
dt_graph$clade_group_facet = factor(dt_graph$clade_group_facet, levels = str_replace_all(names(Clade_color)," ","\n"))
pD = ggplot(dt_graph,aes(y=value,x=category,label=species,fill=clade_group))  +
geom_hline(size=1,linetype="dashed",col="red", yintercept = 0 ) +geom_point(size=2,pch=21,alpha=.8)+
geom_boxplot(alpha=.1)  + facet_wrap(~clade_group_facet,scales="free_x",ncol=11)+ theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=17, family="economica"),
legend.text =  element_text(color="black", size=20, family="economica"),
strip.text = element_text(size=15, family="economica",face="bold"),
title =  element_text(size=30, family="economica"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)
# strip.background = element_rect(color = "grey", size = 1)
) + ylab("POC frequency variations with expression (%)") +
theme(legend.position='none') + scale_fill_manual(values=Clade_color) + xlab("")
pD
# Difference in proportion of POC between\nthe top 5% and bottom 50% expressed (%)
jpeg(paste(path_pannel,"p4D.jpg",sep=""), width = 5500/1, height = 3000/1,res=460/1)
print(pD)
dev.off()
# Figure 4
imgA = load.image(paste(path_pannel,"p4A.jpg",sep="") )
imgB = load.image(paste(path_pannel,"p4B.jpg",sep="") )
imgC = load.image(paste(path_pannel,"p4C.jpg",sep="") )
imgD = load.image(paste(path_pannel,"p4D.jpg",sep="") )
human<-readPNG(paste(path_require,"human.png",sep=""))
Caenorhabditis_elegans = readPNG(paste(path_require,"Caenorhabditis_elegans.png",sep=""))
# Drosophila_melanogaster = readPNG(paste(path_require,"Drosophila_melanogaster.png",sep=""))
# clade_png<-readPNG(paste(path_require,"clade.png",sep=""))
{
pdf(file= paste(path_figure,"Figure4.pdf",sep=""), width=9, height=5.6)
m = matrix(rep(NA,100*100), nrow=100)
for(i in 1:50){
m[i,]=c(rep(1,48),rep(2,100-48))
}
for(i in 50:100){
m[i,]=c(rep(3,40),rep(4,60))
}
layout(m)
m
par(mar=c(1, 1, 2, 0))
plot(imgA, axes=FALSE)
mtext("A",at=50,adj=-1, side=2, line=1, font=2, cex=1.7,las=2)
xhuman = 470
yhuman = -350
rasterImage(human,xleft=0+xhuman, ybottom=450/.9-yhuman, xright=190/.9+xhuman, ytop=0-yhuman)
par(mar=c(0, 0, 1, 0))
plot(imgB, axes=FALSE)
mtext("B",at=0,adj=0.5, side=2, line=1, font=2, cex=1.7,las=2)
xcel=500
ycel=-350
rasterImage(Caenorhabditis_elegans,xleft=0+xcel, ybottom=350/1.5-ycel, xright=1000/1.5+xcel, ytop=0-ycel)
par(mar=c(0,2, 2, 0))
plot(imgC, axes=FALSE)
mtext("C",at=-100,adj=0, side=2, line=1, font=2, cex=1.7,las=2)
par(mar=c(0,1, 1, 0))
plot(imgD, axes=FALSE)
mtext("D",at=100,adj=0, side=2, line=1, font=2, cex=1.7,las=2)
dev.off()
}
