View(data14)
# Generate Figure 3
source("figure/figure_supp_generator/library_path.R")
# Pannel 3 B
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
data14 = read.delim("data/data14_supp.tab")
# Generate Data 12
options(stringsAsFactors = F, scipen = 999)
library(stringr)
library(stringi)
GTDrift_list_species = read.delim("data/GTDrift_list_species.tab")
rownames(GTDrift_list_species) = GTDrift_list_species$species
### tRNA abundance
tRNA_abundance = data.frame()
for (species in GTDrift_list_species$species){
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
tRNA_optimal = read.delim(paste(path,"/decoding_table.tab.gz",sep=""))
dt = t(tRNA_optimal[,c("anticodon","nb_tRNA_copies")])
dt = data.frame(dt)
colnames(dt) = dt[1,]
dt = dt[2,]
rownames(dt) = species
tRNA_abundance = rbind(tRNA_abundance,dt)
}
tRNA_abundance <- data.frame(sapply( tRNA_abundance, as.numeric ))
rownames(tRNA_abundance) = GTDrift_list_species$species
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[data1$clade_group %in% c("Diptera","Lepidoptera") & data1$species != "Eumeta_japonica" & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 & data1$nb_codon_not_decoded == 0,]
tRNA_abundance = tRNA_abundance[rownames(tRNA_abundance) %in% data1$species,]
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
code = code[!code$aa_name %in% c("Ter"),]
rownames(code) = code$anticodon
data14 = data.frame()
for (anticodon in code$anticodon){
dt = data.frame(abundance = tRNA_abundance[,anticodon])
dt$species = rownames(tRNA_abundance)
dt$nb_syn = code[anticodon,]$nb_syn
dt$amino_acid = code[anticodon,]$aa
dt$anticodon = anticodon
dt$codon = code[anticodon,]$codon
data14 = rbind(data14,dt)
}
for (species in GTDrift_list_species$species){
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
tRNA_optimal = read.delim(paste(path,"/decoding_table.tab.gz",sep=""))
rownames(tRNA_optimal) = tRNA_optimal$codon
data14[data14$species == species,c("POC1","POC2")] = tRNA_optimal[ data14[data14$species == species,]$codon,c("POC1","POC2")]
}
data14$color = sapply(data14$codon,function(x)substr(x,3,3))
data14$amino_acid = factor(data14$amino_acid,levels = unique(code[order(code$nb_syn,code$anticodon),]$aa))
data14$anticodon = str_replace_all(data14$anticodon,'T','U')
data14$codon = str_replace_all(data14$codon,'T','U')
vect_debut = c("AT","GT","AC","GC","GG","CC","TC","AG","CG","CT","TT","AA","GA","CA","TG","TA")
vect_debut = str_replace_all(vect_debut,"T","U")
data14$title = paste(data14$anticodon,"(",data14$codon,")",sep="")
data14$codon = factor(data14$codon,levels =  unlist(lapply(vect_debut,function(x) paste(x,c("C","U","A","G"),sep=""))) )
data14$title = factor(data14$title,levels= tapply(data14$title, as.integer(data14$codon),unique))
nb_sp = length(unique(data14$species))
data14$nb_species_0 = tapply(data14$abundance == 0,data14$codon,sum)[data14$codon]
data14$nb_species_0 = round(data14$nb_species_0 / nb_sp*100)
data14$y_axis_0 = tapply(data14$abundance ,data14$codon,function(x) quantile(x,0.9))[data14$codon]
data14[duplicated(data14$codon) ,]$nb_species_0 = NA
data14[!is.na(data14$nb_species_0),]$nb_species_0 = paste(data14[!is.na(data14$nb_species_0),]$nb_species_0 ,"%")
write.table(data14,"data/data14_supp.tab",quote=F,row.names = F,sep="\t")
# Generate Figure 3
source("figure/figure_supp_generator/library_path.R")
# Pannel 3 B
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
data14 = read.delim("data/data14_supp.tab")
# Generate Figure 3
source("figure/figure_supp_generator/library_path.R")
# Pannel 3 B
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
data14 = read.delim("data/data14_supp.tab")
data14[data14$nb_species_0 == "0 %" & !is.na(data14$nb_species_0) ,]$nb_species_0 = NA
data14$amino_acid = factor(data14$amino_acid,levels = unique(code[order(code$nb_syn,code$anticodon),]$aa))
vect_debut = c("AT","GT","AC","GC","GG","CC","TC","AG","CG","CT","TT","AA","GA","CA","TG","TA")
vect_debut = str_replace_all(vect_debut,"T","U")
data14$title = paste(data14$anticodon,"\n(",data14$codon,")",sep="")
data14[data14$title == "CAU\n(AUG)",]$title = "anticodon     CAU   \n(codon)      (AUG)"
data14$codon = factor(data14$codon,levels =  unlist(lapply(vect_debut,function(x) paste(x,c("C","U","A","G"),sep=""))) )
data14$title = factor(data14$title,levels= tapply(data14$title, as.integer(data14$codon),unique))
set_color = c(A="#B2DF8A",T="#33A02C",C="#1F78B4",G="#A6CEE3")
pA = ggplot(data14,aes(x=title,y=abundance,label=nb_species_0)) + geom_boxplot(aes(fill=color),outlier.shape=NA) +
scale_fill_manual("",values = set_color) + facet_wrap(~amino_acid,scales = "free")+ geom_text(family="economica",size=7,aes(y = y_axis_0 + 3 ),vjust=0.1) +
theme_bw() + theme(
title =  element_text(size=30, family="economica"),
legend.text =  element_text(size=10, family="economica"),
strip.text = element_text(size=25, family="economica",face="bold"),
legend.spacing.x = unit(1, 'cm'),
legend.position="top",
legend.box.spacing = unit(2, "cm"),
axis.text.x =  element_text( size=20, family="economica"),
axis.text.y =  element_text( size=25, family="economica"),
plot.title = element_text(hjust = 0.5,margin = margin(0,0,20,0))
) + theme(legend.position='none') + ylab("tRNA gene copy number") + xlab("")+
facetted_pos_scales(
x = list(
NULL
),
y = list(
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 35)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 40)),
scale_y_continuous(limits = c(0, 40)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 25))
)
)
pA
jpeg(paste(path_pannel,"pS12A.jpg",sep=""), width = 2000/1,  1200/1,res=100/1)
print(pA)
dev.off()
# Figure 3
imgA = load.image(paste(path_require,"wobble_pairing.png",sep="") )
imgB = load.image(paste(path_pannel,"pS12A.jpg",sep="") )
{
pdf(file= paste(path_figure,"Figure12_supp.pdf",sep=""), width=7, height=4.8)
m=matrix(rep(NA,10*10), nrow=10)
for(i in 1:10){
m[,i]=c(rep(1,2),rep(2,8))
}
layout(m)
m
par(mar=c(0, 0, 0, 0))
plot(imgA, axes=FALSE)
mtext("A",at=60,adj=-6, side=2, line=1, font=2, cex=1.4,las=2)
par(mar=c(0, 0, 0.2, 0))
plot(imgB, axes=FALSE)
par(mar=c(0, 1, 1, 0))
mtext("B",at=30,adj=-1, side=2, line=1, font=2, cex=1.4,las=2)
dev.off()
}
# Generate Figure 8
source("figure/figure_main_generator/library_path.R")
# Pannel 8 A
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1 = data1[data1$clade_group %in% c("Diptera","Lepidoptera"),]
data1 = data1[data1$species != "Eumeta_japonica",]
dt_graph = data1
ylabel = "g_abond_ag"
xlabel = "gci"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
pA =  ggplot(dt_graph,aes_string(y=ylabel,x=xlabel))  +
geom_abline(linetype="dashed") +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
geom_point(aes(fill=clade_group),size=4,pch=21,alpha=.8) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=20, family="economica"),
axis.text.x =  element_text(color="black", size=20, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
plot.caption = element_text(hjust = 0.59, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
)+ guides(fill = guide_legend(override.aes = list(size=5))) + theme(legend.position="none")+
labs(
caption = substitute(paste(model,lambda," :",aic," R"^2,"= ",r2,", p-value ",pvalue,model_non_opti), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
)  + theme(legend.position='none') + scale_fill_manual(values=Clade_color) +
ylab("Average CNN of preferred isodecoder tRNAs\n(UNN/CNN)") +
xlab("GCi")
pA
jpeg(paste(path_pannel,"p8A.jpg",sep=""),width = 5200/2, height = 4000/2,res=700/2)
print(pA)
dev.off()
# Pannel 7 B
dt_graph = data1
ylabel = "c_duc_ic"
xlabel = "gci"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
average_data = data.frame(x=tapply(dt_graph[,xlabel],dt_graph[,ylabel],mean),
y=tapply(dt_graph[,ylabel],dt_graph[,ylabel],mean),
sdx=tapply(dt_graph[,xlabel],dt_graph[,ylabel],sd),
sdy=tapply(dt_graph[,ylabel],dt_graph[,ylabel],sd)
)
dt_graph[,"group"] = tapply(dt_graph[,xlabel],dt_graph[,xlabel]<=median(dt_graph[,xlabel]) , mean)[as.character(dt_graph[,xlabel]<=median(dt_graph[,xlabel]))]
x=dt_graph[dt_graph$group == unique(dt_graph$group)[1],][,ylabel]
y=dt_graph[dt_graph$group == unique(dt_graph$group)[2],][,ylabel]
wilcox.test(x,y)
t.test(x,y)
t.test(x, y, var.equal = FALSE)
pB =  ggplot(dt_graph,aes_string(y=ylabel,x=xlabel))  +
# geom_boxplot(data=dt_graph , aes_string(x="group", y= ylabel,group="group"),outlier.shape = NA ,pch=21,fill=set_color[5],size=1)+
# geom_point(data=average_data , aes(x=x, y= y, group="moyenne"  ),pch=21,fill=set_color[7],size=8)+
# geom_errorbarh(data=average_data ,aes( xmin=x-sdx,xmax=x+sdx,x=x,y=y,group="moyenne"),height=0.02, size=1,col=set_color[7])+
geom_point(aes(fill=clade_group),size=4,pch=21,alpha=.8) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica"),
axis.text.y =  element_text(color="black", size=20, family="economica"),
axis.text.x =  element_text(color="black", size=20, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=20, family="economica",vjust = 1,margin = margin(t = 5)),
legend.title = element_text(color="black", size=20, family="economica"),
plot.caption = element_text(hjust = 0.59, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
)+ guides(fill = guide_legend(override.aes = list(size=5))) +
labs(
caption = substitute(paste(model,lambda," :",aic," R"^2,"= ",r2,", p-value ",pvalue,model_non_opti), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
) + theme(legend.position='none') + scale_fill_manual("Clades",values=Clade_color) +
ylab("Average NNC of preferred codons\n(NNT/NNC)") +
xlab("GCi") +   theme(legend.position = c(0.87, 0.15),
legend.background = element_rect(fill="NA"),
legend.spacing.x = unit(0.1, 'cm'),
legend.spacing.y = unit(0.1, 'cm'),
legend.box.background = element_rect(colour = "black")
)
pB
jpeg(paste(path_pannel,"p8B.jpg",sep=""),width = 5200/2, height = 4000/2,res=700/2)
print(pB)
dev.off()
# Figure 7
imgA = load.image(paste(path_pannel,"p8A.jpg",sep="") )
imgB = load.image(paste(path_pannel,"p8B.jpg",sep="") )
imgC = load.image(paste(path_require,"hypothesis.png",sep=""))
fly<-readPNG(paste(path_require,"fly.png",sep=""))
{
pdf(file= paste(path_figure,"Figure8.pdf",sep=""), width=10, height=8*2/2)
m = matrix(rep(NA,2*2), nrow=2)
m[1,]=c(1,2)
m[2,]=c(3,3)
layout(m)
par(mar=c(0,2, 2, 0))
plot(imgA, axes=FALSE)
mtext("A",at=-100,adj=0, side=2, line=1, font=2, cex=2,las=2)
xaxis=2230
yaxis=150
rasterImage(fly,xleft=0+xaxis, ybottom=0+yaxis, xright=1200/5+xaxis, ytop=-900/5+yaxis)
plot(imgB, axes=FALSE)
mtext("B",at=-100,adj=0, side=2, line=1, font=2, cex=2,las=2)
xaxis=2230
yaxis=150
rasterImage(fly,xleft=0+xaxis, ybottom=0+yaxis, xright=1200/5+xaxis, ytop=-900/5+yaxis)
par(mar=c(0, 1, 0, 1))
plot(imgC, axes=FALSE)
mtext("C",at=100,adj=-1, side=2, line=1, font=2, cex=2,las=2)
dev.off()
}
# Generate Supplementary Figure 3
source("figure/figure_supp_generator/library_path.R")
# Supplementary Pannel 3 A
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0 & data1$pval_aa_fpkm < 0.05  & data1$nb_genes_filtered > 5000,]
dt_graph = data1
ylabel = "expressed_overused_background_POCs"
xlabel = "expressed_overused_POCs"
dt_graph = dt_graph[!is.na(dt_graph[,xlabel]) & !is.na(dt_graph[,ylabel]) & dt_graph$species %in% arbrePhylo$tip.label,]
model_to_use = fitted_model(x=dt_graph[,xlabel],y=dt_graph[,ylabel],label=dt_graph$species,tree=arbrePhylo,display_other=F,pagels_obliged=T)
pA =  ggplot(dt_graph,aes_string(y=ylabel,x=xlabel))  +
geom_abline(linetype="dashed") +
geom_hline(size=1,linetype="dashed",col="red", yintercept = 0 ) +
geom_vline(size=1,linetype="dashed",col="red", xintercept = 0 ) +
geom_abline(lwd=1,slope = model_to_use$slope, intercept = model_to_use$intercept)+
geom_point(aes(fill=clade_group),size=4,pch=21,alpha=.7) + theme_bw() + theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=26, family="economica",margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text.y =  element_text(color="black", size=24, family="economica"),
axis.text.x =  element_text(color="black", size=24, family="economica"),
title =  element_text(color="black", size=20, family="economica"),
text =  element_text(color="black", size=31, family="economica"),
legend.text =  element_text(color="black", size=24, family="economica",vjust = 1.5,margin = margin(t = 10)),
legend.title =  element_text(color="black", size=25, family="economica"),
plot.caption = element_text(hjust = 0.4, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
)+ guides(fill = guide_legend(override.aes = list(size=5)))+
labs(
caption = substitute(paste(model," :",aic," R"^2,"= ",r2,", p-value ",pvalue,model_non_opti), model_to_use),
title = paste("N = ",nrow(dt_graph)," species",sep="")
) + scale_fill_manual("Clades",values=Clade_color) + xlab(substitute(paste(Delta," POC"^"exp",", not accounting for intron control")))  + ylab(substitute(paste(Delta," POC"^"exp")))
pA
# Generate Supplementary Figure 5
source("figure/figure_supp_generator/library_path.R")
data3_supp = read.delim(paste("data/data9_supp.tab",sep="") , header=T )
View(data3_supp)
# Generate Figure 4
source("figure/figure_supp_generator/library_path.R")
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1 = data1[data1$clade_group %in% c("Diptera","Lepidoptera"),]
data1 = data1[data1$species != "Eumeta_japonica",]
data1$species = paste(str_replace_all(data1$species,"_"," "),sep="")
data13 = read.delim("data/data13_supp.tab")
data13$species = paste(str_replace_all(data13$species,"_"," "),sep="")
# Pannel 4 A
data13$species = factor(data13$species,levels=data1[order(data1$gci),]$species)
dt_graph = data13[data13$aa_name == "Val",]
count_dinucl = table(dt_graph$trinucl2)
count_dinucl = count_dinucl[order(count_dinucl,decreasing = T)]
dt_graph[dt_graph$trinucl2 == names(count_dinucl[1]),]$trinucl = paste(dt_graph[dt_graph$trinucl2 == names(count_dinucl[1]),]$trinucl,"1",sep="")
vector = unique(paste(dt_graph$codon))
names( vector ) = unique(paste(dt_graph$trinucl))
names(set_color) = c("G1","C1","A1","T1","G","C","A","T")
dt_graph$trinucl = factor(dt_graph$trinucl,levels = c("G1","A1","T1","C1"))
pA = ggplot(dt_graph,aes(x=fpkm,y=rscu,fill=trinucl,col=trinucl)) +geom_line(size=1.5) +
# geom_point(size=3,col="black",pch=21)  +
theme_bw() + theme(
axis.title.x = element_text(color="black", size=30,family="economica",vjust=0),
axis.title.y = element_text(color="black", size=30, family="economica",vjust=1.7),
axis.text.y =  element_text(color="black", size=25, family="economica"),
axis.text.x =  element_text(color="black", size=25, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=30, family="economica",margin = margin(t = 5)),
strip.text = element_text(size=15,face="italic")
)+ xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(
breaks=c(0.01,0.1,1,10,100,1000,10000,50000),
labels=c(0.01,0.1,1,10,100,1000,10000,50000),limits=c(0.005,1000))+
scale_alpha_manual("Codons",values=c("CDS"=1,"intronic control"=.5)) +
scale_fill_manual("Codons",values=set_color,label=vector)  +
scale_color_manual("Valine\nsynonymous\ncodons",values=set_color,label=vector) +
scale_shape_manual("Codons",values=c("intronic control"=24,"CDS"=21)) +
annotation_logticks(sides = "b")+   facet_wrap(~species) + ylab("RSCU")+labs(fill='Codons',color='Codons',shape='',linetype='')+
guides(fill = guide_legend(order = 1),
color = guide_legend(order = 1,override.aes = list(lwd=3)),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)
pA
data13$species
data13 = read.delim("data/data13_supp.tab")
data1[data13$species,]$gci
data1 = read.delim("data/data1_supp.tab")
rownames(data1) = data1$species
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1 = data1[data1$clade_group %in% c("Diptera","Lepidoptera"),]
data1 = data1[data1$species != "Eumeta_japonica",]
data1$species = paste(str_replace_all(data1$species,"_"," "),sep="")
data13 = read.delim("data/data13_supp.tab")
data1[data13$species,]$gci
round(data1[data13$species,]$gci,2)
data13 = read.delim("data/data13_supp.tab")
data13$species = paste(str_replace_all(data13$species,"_"," "),"GCi=",round(data1[data13$species,]$gci,2),sep="")
data13$species
data13$species = paste(str_replace_all(data13$species,"_"," ")," GCi=",round(data1[data13$species,]$gci,2),sep="")
data13$species
# Generate Figure 4
source("figure/figure_supp_generator/library_path.R")
data1 = read.delim("data/data1_supp.tab")
rownames(data1) = data1$species
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1 = data1[data1$clade_group %in% c("Diptera","Lepidoptera"),]
data1 = data1[data1$species != "Eumeta_japonica",]
data1$species = paste(str_replace_all(data1$species,"_"," "),sep="")
data13 = read.delim("data/data13_supp.tab")
data13$species = paste(str_replace_all(data13$species,"_"," ")," GCi=",round(data1[data13$species,]$gci,2),sep="")
data13$species
# Pannel 4 A
data13$species = factor(data13$species,levels=paste(data1[order(data1$gci),]$species,", GCi=",round(data1[order(data1$gci),]$$gci,2),sep=""))
# Generate Figure 4
source("figure/figure_supp_generator/library_path.R")
data1 = read.delim("data/data1_supp.tab")
rownames(data1) = data1$species
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1 = data1[data1$clade_group %in% c("Diptera","Lepidoptera"),]
data1 = data1[data1$species != "Eumeta_japonica",]
data1$species = paste(str_replace_all(data1$species,"_"," "),sep="")
data13 = read.delim("data/data13_supp.tab")
data13$species = paste(str_replace_all(data13$species,"_"," "),", GCi=",round(data1[data13$species,]$gci,2),sep="")
# Pannel 4 A
data13$species = factor(data13$species,levels=paste(data1[order(data1$gci),]$species,", GCi=",round(data1[order(data1$gci),]$gci,2),sep=""))
dt_graph = data13[data13$aa_name == "Val",]
count_dinucl = table(dt_graph$trinucl2)
count_dinucl = count_dinucl[order(count_dinucl,decreasing = T)]
dt_graph[dt_graph$trinucl2 == names(count_dinucl[1]),]$trinucl = paste(dt_graph[dt_graph$trinucl2 == names(count_dinucl[1]),]$trinucl,"1",sep="")
vector = unique(paste(dt_graph$codon))
names( vector ) = unique(paste(dt_graph$trinucl))
names(set_color) = c("G1","C1","A1","T1","G","C","A","T")
dt_graph$trinucl = factor(dt_graph$trinucl,levels = c("G1","A1","T1","C1"))
pA = ggplot(dt_graph,aes(x=fpkm,y=rscu,fill=trinucl,col=trinucl)) +geom_line(size=1.5) +
# geom_point(size=3,col="black",pch=21)  +
theme_bw() + theme(
axis.title.x = element_text(color="black", size=30,family="economica",vjust=0),
axis.title.y = element_text(color="black", size=30, family="economica",vjust=1.7),
axis.text.y =  element_text(color="black", size=25, family="economica"),
axis.text.x =  element_text(color="black", size=25, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=30, family="economica",margin = margin(t = 5)),
strip.text = element_text(size=15,face="italic")
)+ xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(
breaks=c(0.01,0.1,1,10,100,1000,10000,50000),
labels=c(0.01,0.1,1,10,100,1000,10000,50000),limits=c(0.005,1000))+
scale_alpha_manual("Codons",values=c("CDS"=1,"intronic control"=.5)) +
scale_fill_manual("Codons",values=set_color,label=vector)  +
scale_color_manual("Valine\nsynonymous\ncodons",values=set_color,label=vector) +
scale_shape_manual("Codons",values=c("intronic control"=24,"CDS"=21)) +
annotation_logticks(sides = "b")+   facet_wrap(~species) + ylab("RSCU")+labs(fill='Codons',color='Codons',shape='',linetype='')+
guides(fill = guide_legend(order = 1),
color = guide_legend(order = 1,override.aes = list(lwd=3)),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)
pA
# Generate Figure 4
source("figure/figure_supp_generator/library_path.R")
data1 = read.delim("data/data1_supp.tab")
rownames(data1) = data1$species
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
data1 = data1[data1$clade_group %in% c("Diptera","Lepidoptera"),]
data1 = data1[data1$species != "Eumeta_japonica",]
data1$species = paste(str_replace_all(data1$species,"_"," "),sep="")
data13 = read.delim("data/data13_supp.tab")
data13$species = paste(str_replace_all(data13$species,"_"," "),", GCi=",round(data1[data13$species,]$gci,2),sep="")
# Pannel 4 A
data13$species = factor(data13$species,levels=paste(data1[order(data1$gci),]$species,", GCi=",round(data1[order(data1$gci),]$gci,2),sep=""))
dt_graph = data13[data13$aa_name == "Val",]
count_dinucl = table(dt_graph$trinucl2)
count_dinucl = count_dinucl[order(count_dinucl,decreasing = T)]
dt_graph[dt_graph$trinucl2 == names(count_dinucl[1]),]$trinucl = paste(dt_graph[dt_graph$trinucl2 == names(count_dinucl[1]),]$trinucl,"1",sep="")
vector = unique(paste(dt_graph$codon))
names( vector ) = unique(paste(dt_graph$trinucl))
names(set_color) = c("G1","C1","A1","T1","G","C","A","T")
dt_graph$trinucl = factor(dt_graph$trinucl,levels = c("G1","A1","T1","C1"))
pA = ggplot(dt_graph,aes(x=fpkm,y=rscu,fill=trinucl,col=trinucl)) +geom_line(size=1.5) +
# geom_point(size=3,col="black",pch=21)  +
theme_bw() + theme(
axis.title.x = element_text(color="black", size=30,family="economica",vjust=0),
axis.title.y = element_text(color="black", size=30, family="economica",vjust=1.7),
axis.text.y =  element_text(color="black", size=25, family="economica"),
axis.text.x =  element_text(color="black", size=25, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=30, family="economica",margin = margin(t = 5)),
strip.text = element_text(size=15,face="italic")
)+ xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(
breaks=c(0.01,0.1,1,10,100,1000,10000,50000),
labels=c(0.01,0.1,1,10,100,1000,10000,50000),limits=c(0.005,1000))+
scale_alpha_manual("Codons",values=c("CDS"=1,"intronic control"=.5)) +
scale_fill_manual("Codons",values=set_color,label=vector)  +
scale_color_manual("Valine\nsynonymous\ncodons",values=set_color,label=vector) +
scale_shape_manual("Codons",values=c("intronic control"=24,"CDS"=21)) +
annotation_logticks(sides = "b")+   facet_wrap(~species) + ylab("RSCU")+labs(fill='Codons',color='Codons',shape='',linetype='')+
guides(fill = guide_legend(order = 1),
color = guide_legend(order = 1,override.aes = list(lwd=3)),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)
pA
jpeg(paste(path_pannel,"pS11A.jpg",sep=""),  width = 10500/2*0.8,  5400/2,res=600/1.8)
print(pA)
dev.off()
# Figure 4
imgA = load.image(paste(path_pannel,"pS11A.jpg",sep="") )
{
pdf(file= paste(path_figure,"Figure11_supp.pdf",sep=""), width=9*0.8, height=5)
m = matrix(rep(NA,100*100), nrow=100)
m
par(mar=c(1, 1, 2, 0))
plot(imgA, axes=FALSE)
dev.off()
}
# Generate Data 12
options(stringsAsFactors = F, scipen = 999)
library(stringr)
library(stringi)
GTDrift_list_species = read.delim("data/GTDrift_list_species.tab")
rownames(GTDrift_list_species) = GTDrift_list_species$species
### tRNA abundance
tRNA_abundance = data.frame()
for (species in GTDrift_list_species$species){
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
tRNA_optimal = read.delim(paste(path,"/decoding_table.tab.gz",sep=""))
dt = t(tRNA_optimal[,c("anticodon","nb_tRNA_copies")])
dt = data.frame(dt)
colnames(dt) = dt[1,]
dt = dt[2,]
rownames(dt) = species
tRNA_abundance = rbind(tRNA_abundance,dt)
}
tRNA_abundance <- data.frame(sapply( tRNA_abundance, as.numeric ))
rownames(tRNA_abundance) = GTDrift_list_species$species
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[data1$clade_group %in% c("Diptera","Lepidoptera") & data1$species != "Eumeta_japonica" & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 & data1$nb_codon_not_decoded == 0,]
