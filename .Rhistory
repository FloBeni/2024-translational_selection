)
)
pA
jpeg(paste(path_pannel,"pS12A.jpg",sep=""), width = 2000/1,  1200/1,res=100/1)
print(pA)
dev.off()
# Figure 3
imgA = load.image(paste(path_require,"wobble_pairing.png",sep="") )
imgB = load.image(paste(path_pannel,"pS12A.jpg",sep="") )
{
pdf(file= paste(path_figure,"Figure12_supp.pdf",sep=""), width=7, height=4.8)
m=matrix(rep(NA,10*10), nrow=10)
for(i in 1:10){
m[,i]=c(rep(1,2),rep(2,8))
}
layout(m)
m
par(mar=c(0, 0, 0, 0))
plot(imgA, axes=FALSE)
mtext("A",at=60,adj=-6, side=2, line=1, font=2, cex=1.4,las=2)
par(mar=c(0, 0, 0.2, 0))
plot(imgB, axes=FALSE)
par(mar=c(0, 1, 1, 0))
mtext("B",at=30,adj=-1, side=2, line=1, font=2, cex=1.4,las=2)
dev.off()
}
# Generate Data 12
options(stringsAsFactors = F, scipen = 999)
library(stringr)
library(stringi)
GTDrift_list_species = read.delim("data/GTDrift_list_species.tab")
rownames(GTDrift_list_species) = GTDrift_list_species$species
### tRNA abundance
tRNA_abundance = data.frame()
for (species in GTDrift_list_species$species){
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
tRNA_optimal = read.delim(paste(path,"/decoding_table.tab.gz",sep=""))
dt = t(tRNA_optimal[,c("anticodon","nb_tRNA_copies")])
dt = data.frame(dt)
colnames(dt) = dt[1,]
dt = dt[2,]
rownames(dt) = species
tRNA_abundance = rbind(tRNA_abundance,dt)
}
tRNA_abundance <- data.frame(sapply( tRNA_abundance, as.numeric ))
rownames(tRNA_abundance) = GTDrift_list_species$species
data1 = read.delim("data/data1_supp.tab")
data1 = data1[data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 & data1$nb_codon_not_decoded == 0,]
tRNA_abundance = tRNA_abundance[rownames(tRNA_abundance) %in% data1$species,]
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
code = code[!code$aa_name %in% c("Ter"),]
rownames(code) = code$anticodon
data12 = data.frame()
for (anticodon in code$anticodon){
dt = data.frame(abundance = tRNA_abundance[,anticodon])
dt$species = rownames(tRNA_abundance)
dt$nb_syn = code[anticodon,]$nb_syn
dt$amino_acid = code[anticodon,]$aa
dt$anticodon = anticodon
dt$codon = code[anticodon,]$codon
data12 = rbind(data12,dt)
}
for (species in GTDrift_list_species$species){
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
tRNA_optimal = read.delim(paste(path,"/decoding_table.tab.gz",sep=""))
rownames(tRNA_optimal) = tRNA_optimal$codon
data12[data12$species == species,c("POC1","POC2")] = tRNA_optimal[ data12[data12$species == species,]$codon,c("POC1","POC2")]
}
data12$color = sapply(data12$codon,function(x)substr(x,3,3))
data12$amino_acid = factor(data12$amino_acid,levels = unique(code[order(code$nb_syn,code$anticodon),]$aa))
data12$anticodon = str_replace_all(data12$anticodon,'T','U')
data12$codon = str_replace_all(data12$codon,'T','U')
vect_debut = c("AT","GT","AC","GC","GG","CC","TC","AG","CG","CT","TT","AA","GA","CA","TG","TA")
vect_debut = str_replace_all(vect_debut,"T","U")
data12$title = paste(data12$anticodon,"(",data12$codon,")",sep="")
data12$codon = factor(data12$codon,levels =  unlist(lapply(vect_debut,function(x) paste(x,c("C","U","A","G"),sep=""))) )
data12$title = factor(data12$title,levels= tapply(data12$title, as.integer(data12$codon),unique))
nb_sp = length(unique(data12$species))
data12$nb_species_0 = tapply(data12$abundance == 0,data12$codon,sum)[data12$codon]
data12$nb_species_0 = round(data12$nb_species_0 / nb_sp*100)
data12$y_axis_0 = tapply(data12$abundance ,data12$codon,function(x) quantile(x,0.9))[data12$codon]
# data12[duplicated(data12$codon) | data12$nb_species_0 < 50,]$nb_species_0 = NA
data12[duplicated(data12$codon) ,]$nb_species_0 = NA
data12[!is.na(data12$nb_species_0),]$nb_species_0 = paste(data12[!is.na(data12$nb_species_0),]$nb_species_0 ,"%")
write.table(data12,"data/data12_supp.tab",quote=F,row.names = F,sep="\t")
# Generate Figure 3
source("figure/figure_main_generator/library_path.R")
# Pannel 3 B
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
data12 = read.delim("data/data12_supp.tab")
data12[data12$nb_species_0 == "0 %" & !is.na(data12$nb_species_0) ,]$nb_species_0 = NA
data12$amino_acid = factor(data12$amino_acid,levels = unique(code[order(code$nb_syn,code$anticodon),]$aa))
vect_debut = c("AT","GT","AC","GC","GG","CC","TC","AG","CG","CT","TT","AA","GA","CA","TG","TA")
vect_debut = str_replace_all(vect_debut,"T","U")
data12$title = paste(data12$anticodon,"\n(",data12$codon,")",sep="")
data12[data12$title == "CAU\n(AUG)",]$title = "anticodon     CAU   \n(codon)      (AUG)"
data12$codon = factor(data12$codon,levels =  unlist(lapply(vect_debut,function(x) paste(x,c("C","U","A","G"),sep=""))) )
data12$title = factor(data12$title,levels= tapply(data12$title, as.integer(data12$codon),unique))
set_color = c(A="#B2DF8A",T="#33A02C",C="#1F78B4",G="#A6CEE3")
pA = ggplot(data12,aes(x=title,y=abundance,label=nb_species_0)) + geom_boxplot(aes(fill=color),outlier.shape=NA) +
scale_fill_manual("",values = set_color) + facet_wrap(~amino_acid,scales = "free")+ geom_text(family="economica",size=7,aes(y = y_axis_0 + 3 ),vjust=0.1) +
theme_bw() + theme(
title =  element_text(size=30, family="economica"),
legend.text =  element_text(size=10, family="economica"),
strip.text = element_text(size=25, family="economica",face="bold"),
legend.spacing.x = unit(1, 'cm'),
legend.position="top",
legend.box.spacing = unit(2, "cm"),
axis.text.x =  element_text( size=20, family="economica"),
axis.text.y =  element_text( size=25, family="economica"),
plot.title = element_text(hjust = 0.5,margin = margin(0,0,20,0))
) + theme(legend.position='none') + ylab("tRNA gene copy number") + xlab("")+
facetted_pos_scales(
x = list(
NULL
),
y = list(
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 35)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 40)),
scale_y_continuous(limits = c(0, 40)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 25))
)
)
pA
jpeg(paste(path_pannel,"p3A.jpg",sep=""), width = 2000/1,  1200/1,res=100/1)
print(pA)
dev.off()
# Figure 3
imgA = load.image(paste(path_require,"wobble_pairing.png",sep="") )
imgB = load.image(paste(path_pannel,"p3A.jpg",sep="") )
{
pdf(file= paste(path_figure,"Figure3.pdf",sep=""), width=7, height=4.8)
m=matrix(rep(NA,10*10), nrow=10)
for(i in 1:10){
m[,i]=c(rep(1,2),rep(2,8))
}
layout(m)
m
par(mar=c(0, 0, 0, 0))
plot(imgA, axes=FALSE)
mtext("A",at=60,adj=-6, side=2, line=1, font=2, cex=1.4,las=2)
par(mar=c(0, 0, 0.2, 0))
plot(imgB, axes=FALSE)
par(mar=c(0, 1, 1, 0))
mtext("B",at=30,adj=-1, side=2, line=1, font=2, cex=1.4,las=2)
dev.off()
}
# Generate Figure 3
source("figure/figure_main_generator/library_path.R")
# Pannel 3 B
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
data12 = read.delim("data/data12_supp.tab")
data12[data12$nb_species_0 == "0 %" & !is.na(data12$nb_species_0) ,]$nb_species_0 = NA
data12$y_axis_0 = 0
data12$amino_acid = factor(data12$amino_acid,levels = unique(code[order(code$nb_syn,code$anticodon),]$aa))
vect_debut = c("AT","GT","AC","GC","GG","CC","TC","AG","CG","CT","TT","AA","GA","CA","TG","TA")
vect_debut = str_replace_all(vect_debut,"T","U")
data12$title = paste(data12$anticodon,"\n(",data12$codon,")",sep="")
data12[data12$title == "CAU\n(AUG)",]$title = "anticodon     CAU   \n(codon)      (AUG)"
data12$codon = factor(data12$codon,levels =  unlist(lapply(vect_debut,function(x) paste(x,c("C","U","A","G"),sep=""))) )
data12$title = factor(data12$title,levels= tapply(data12$title, as.integer(data12$codon),unique))
set_color = c(A="#B2DF8A",T="#33A02C",C="#1F78B4",G="#A6CEE3")
pA = ggplot(data12,aes(x=title,y=abundance,label=nb_species_0)) + geom_boxplot(aes(fill=color),outlier.shape=NA) +
scale_fill_manual("",values = set_color) + facet_wrap(~amino_acid,scales = "free")+ geom_text(family="economica",size=7,aes(y = y_axis_0 + 3 ),vjust=0.1) +
theme_bw() + theme(
title =  element_text(size=30, family="economica"),
legend.text =  element_text(size=10, family="economica"),
strip.text = element_text(size=25, family="economica",face="bold"),
legend.spacing.x = unit(1, 'cm'),
legend.position="top",
legend.box.spacing = unit(2, "cm"),
axis.text.x =  element_text( size=20, family="economica"),
axis.text.y =  element_text( size=25, family="economica"),
plot.title = element_text(hjust = 0.5,margin = margin(0,0,20,0))
) + theme(legend.position='none') + ylab("tRNA gene copy number") + xlab("")+
facetted_pos_scales(
x = list(
NULL
),
y = list(
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 35)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 40)),
scale_y_continuous(limits = c(0, 40)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 25))
)
)
pA
jpeg(paste(path_pannel,"p3A.jpg",sep=""), width = 2000/1,  1200/1,res=100/1)
print(pA)
dev.off()
# Figure 3
imgA = load.image(paste(path_require,"wobble_pairing.png",sep="") )
imgB = load.image(paste(path_pannel,"p3A.jpg",sep="") )
{
pdf(file= paste(path_figure,"Figure3.pdf",sep=""), width=7, height=4.8)
m=matrix(rep(NA,10*10), nrow=10)
for(i in 1:10){
m[,i]=c(rep(1,2),rep(2,8))
}
layout(m)
m
par(mar=c(0, 0, 0, 0))
plot(imgA, axes=FALSE)
mtext("A",at=60,adj=-6, side=2, line=1, font=2, cex=1.4,las=2)
par(mar=c(0, 0, 0.2, 0))
plot(imgB, axes=FALSE)
par(mar=c(0, 1, 1, 0))
mtext("B",at=30,adj=-1, side=2, line=1, font=2, cex=1.4,las=2)
dev.off()
}
# Generate Figure 3
source("figure/figure_main_generator/library_path.R")
# Pannel 3 B
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
data12 = read.delim("data/data12_supp.tab")
data12[data12$nb_species_0 == "0 %" & !is.na(data12$nb_species_0) ,]$nb_species_0 = NA
data12$amino_acid = factor(data12$amino_acid,levels = unique(code[order(code$nb_syn,code$anticodon),]$aa))
vect_debut = c("AT","GT","AC","GC","GG","CC","TC","AG","CG","CT","TT","AA","GA","CA","TG","TA")
vect_debut = str_replace_all(vect_debut,"T","U")
data12$title = paste(data12$anticodon,"\n(",data12$codon,")",sep="")
data12[data12$title == "CAU\n(AUG)",]$title = "anticodon     CAU   \n(codon)      (AUG)"
data12$codon = factor(data12$codon,levels =  unlist(lapply(vect_debut,function(x) paste(x,c("C","U","A","G"),sep=""))) )
data12$title = factor(data12$title,levels= tapply(data12$title, as.integer(data12$codon),unique))
set_color = c(A="#B2DF8A",T="#33A02C",C="#1F78B4",G="#A6CEE3")
pA = ggplot(data12,aes(x=title,y=abundance,label=nb_species_0)) + geom_boxplot(aes(fill=color),outlier.shape=NA) +
scale_fill_manual("",values = set_color) + facet_wrap(~amino_acid,scales = "free")+ geom_text(family="economica",size=7,aes(y = y_axis_0 + 3 ),vjust=0.1) +
theme_bw() + theme(
title =  element_text(size=30, family="economica"),
legend.text =  element_text(size=10, family="economica"),
strip.text = element_text(size=25, family="economica",face="bold"),
legend.spacing.x = unit(1, 'cm'),
legend.position="top",
legend.box.spacing = unit(2, "cm"),
axis.text.x =  element_text( size=20, family="economica"),
axis.text.y =  element_text( size=25, family="economica"),
plot.title = element_text(hjust = 0.5,margin = margin(0,0,20,0))
) + theme(legend.position='none') + ylab("tRNA gene copy number") + xlab("")+
facetted_pos_scales(
x = list(
NULL
),
y = list(
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 35)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 55)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 40)),
scale_y_continuous(limits = c(0, 40)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 30)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 20)),
scale_y_continuous(limits = c(0, 25))
)
)
pA
jpeg(paste(path_pannel,"p3A.jpg",sep=""), width = 2000/1,  1200/1,res=100/1)
print(pA)
dev.off()
# Figure 3
imgA = load.image(paste(path_require,"wobble_pairing.png",sep="") )
imgB = load.image(paste(path_pannel,"p3A.jpg",sep="") )
{
pdf(file= paste(path_figure,"Figure3.pdf",sep=""), width=7, height=4.8)
m=matrix(rep(NA,10*10), nrow=10)
for(i in 1:10){
m[,i]=c(rep(1,2),rep(2,8))
}
layout(m)
m
par(mar=c(0, 0, 0, 0))
plot(imgA, axes=FALSE)
mtext("A",at=60,adj=-6, side=2, line=1, font=2, cex=1.4,las=2)
par(mar=c(0, 0, 0.2, 0))
plot(imgB, axes=FALSE)
par(mar=c(0, 1, 1, 0))
mtext("B",at=30,adj=-1, side=2, line=1, font=2, cex=1.4,las=2)
dev.off()
}
# Generate Figure 2
source("figure/figure_main_generator/library_path.R")
# Pannel 2 A
data3 = read.delim("data/data3_supp.tab")
dt_graph = data3[data3$species == "Caenorhabditis_elegans", ]
spearman_method_aa = cor.test( dt_graph$tRNASE_copies, dt_graph$obs_codon,method="spearman",exact=F)
pA = ggplot(dt_graph,aes(x= obs_codon / sum(obs_codon) * 100,y=tRNASE_copies,label=amino_acid)) +
# geom_smooth(formula = y ~ x, method="lm", size=1 , col=set_color[1],se=F,linetype='dashed') +
geom_point(pch=21,size=4,fill=set_color[2]) +
geom_text(nudge_x = .35,size=5,family="economica") + theme_bw() +  theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=22, family="economica"),
axis.text.x =  element_text(color="black", size=22, family="economica"),
title =  element_text(color="black", size=18, family="economica"),
legend.text =  element_text(color="black", size=16, family="economica"),
strip.text = element_text(size=15),
plot.caption = element_text(hjust = 0.55, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
) + xlab(paste("Amino-acid frequency (%)")) + ylab("tRNA gene copy number") +
labs(
caption = substitute(paste("rho = ",rho_aa_fpkm,", p-value = ",pval_aa_fpkm), list(
rho_aa_fpkm = round(spearman_method_aa$estimate, 2),
pval_aa_fpkm = formatC(spearman_method_aa$p.value, format = "e", digits = 0)))
)
pA
jpeg(paste(path_pannel,"p2A.jpg",sep=""), width = 4000/1, height = 4000/1,res=700/1)
print(pA)
dev.off()
# Pannel 2 B
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_genes_filtered >= 5000,]
dt_graph = data1
pB = ggplot(dt_graph,aes(y=rho_aa_fpkm,fill=clade_group,x=clade_group))  +
geom_hline(size=1,linetype="dashed",col="red", yintercept = min(dt_graph[dt_graph$rho_aa_fpkm & dt_graph$pval_aa_fpkm < 0.05,]$rho_aa_fpkm) ) +
geom_text (label="p-value < 0.05", y=.4,x="Lepido Diptera",size=5,family="economica",col="red") + geom_boxplot(alpha=.1) +
geom_point(aes(fill=clade_group),size=3,pch=21,alpha=0.7) + theme_bw() + theme(
axis.title.x = element_text(color="black",angle = 50, size=25,family="economica"),
axis.title.y = element_text(color="black", size=22, family="economica"),
axis.text.y =  element_text(color="black", size=20, family="economica"),
axis.text.x =  element_text(color="black",vjust=1,hjust=1, size=22,angle = 30, family="economica"),
title =  element_text(color="black", size=0, family="economica"),
legend.text =  element_text(color="black", size=20, family="economica")
) + theme(legend.position='none') + scale_fill_manual(values=Clade_color) + ylab("Spearmann rho")  + xlab("") + ylim(0,1)
pB = ggMarginal(pB, type="histogram",fill=set_color[1])
pB
jpeg(paste(path_pannel,"p2B.jpg",sep=""), width = 4000/1, height = 2500/1,res=400/1)
print(pB)
dev.off()
# Figure 2
imgA = load.image(paste(path_pannel,"p2A.jpg",sep="") )
imgB = load.image(paste(path_pannel,"p2B.jpg",sep="") )
Caenorhabditis_elegans = readPNG(paste(path_require,"Caenorhabditis_elegans.png",sep=""))
{
pdf(file= paste(path_figure,"Figure2.pdf",sep=""), width=11, height=4)
m=matrix(rep(NA,10*100), nrow=10)
for(i in 1:10){
m[i,]=c(rep(1,35),rep(2,65))
}
m
layout(m)
par(mar=c(0, 2, 2, 1))
plot(imgA, axes=FALSE)
mtext("A", adj=0, side=2,at=-200, line=1, font=2, cex=2.2,las=2)
xcel=540
ycel=-140
rasterImage(Caenorhabditis_elegans,xleft=0+xcel, ybottom=350/1.5-ycel, xright=1000/1.4+xcel, ytop=0-ycel)
par(mar=c(0, 0, 0, 0))
plot(imgB, axes=FALSE)
mtext("B",adj=-1, side=2,at=150, line=1, font=2, cex=2.2,las=2)
dev.off()
}
{
pdf(file= paste(path_figure,"Figure2.pdf",sep=""), width=11, height=4)
m=matrix(rep(NA,10*100), nrow=10)
for(i in 1:10){
m[i,]=c(rep(1,35),rep(2,65))
}
m
layout(m)
par(mar=c(0, 2, 2, 1))
plot(imgA, axes=FALSE)
mtext("A", adj=0, side=2,at=-200, line=1, font=2, cex=2.2,las=2)
xcel=570
ycel=-140
rasterImage(Caenorhabditis_elegans,xleft=0+xcel, ybottom=350/1.5-ycel, xright=1000/1.4+xcel, ytop=0-ycel)
par(mar=c(0, 0, 0, 0))
plot(imgB, axes=FALSE)
mtext("B",adj=-1, side=2,at=150, line=1, font=2, cex=2.2,las=2)
dev.off()
}
{
pdf(file= paste(path_figure,"Figure2.pdf",sep=""), width=11, height=4)
m=matrix(rep(NA,10*100), nrow=10)
for(i in 1:10){
m[i,]=c(rep(1,35),rep(2,65))
}
m
layout(m)
par(mar=c(0, 2, 2, 1))
plot(imgA, axes=FALSE)
mtext("A", adj=0, side=2,at=-200, line=1, font=2, cex=2.2,las=2)
xcel=630
ycel=-140
rasterImage(Caenorhabditis_elegans,xleft=0+xcel, ybottom=350/1.5-ycel, xright=1000/1.4+xcel, ytop=0-ycel)
par(mar=c(0, 0, 0, 0))
plot(imgB, axes=FALSE)
mtext("B",adj=-1, side=2,at=150, line=1, font=2, cex=2.2,las=2)
dev.off()
}
# Generate Figure 2
source("figure/figure_main_generator/library_path.R")
# Pannel 2 A
data3 = read.delim("data/data3_supp.tab")
dt_graph = data3[data3$species == "Caenorhabditis_elegans", ]
spearman_method_aa = cor.test( dt_graph$tRNASE_copies, dt_graph$obs_codon,method="spearman",exact=F)
pA = ggplot(dt_graph,aes(x= obs_codon / sum(obs_codon) * 100,y=tRNASE_copies,label=amino_acid)) +
# geom_smooth(formula = y ~ x, method="lm", size=1 , col=set_color[1],se=F,linetype='dashed') +
geom_point(pch=21,size=4,fill=set_color[2]) +
geom_text(nudge_x = .35,size=5,family="economica") + theme_bw() +  theme(
axis.title.x = element_text(color="black", size=26,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=22, family="economica"),
axis.text.x =  element_text(color="black", size=22, family="economica"),
title =  element_text(color="black", size=18, family="economica"),
legend.text =  element_text(color="black", size=16, family="economica"),
strip.text = element_text(size=15),
plot.caption = element_text(hjust = 0.55, face= "italic", size=20, family="economica"),
plot.caption.position =  "plot"
) + xlab(paste("Amino-acid frequency (%)")) + ylab("tRNA gene copy number") +
labs(
caption = substitute(paste("rho = ",rho_aa_fpkm,", p-value = ",pval_aa_fpkm), list(
rho_aa_fpkm = round(spearman_method_aa$estimate, 2),
pval_aa_fpkm = formatC(spearman_method_aa$p.value, format = "e", digits = 0)))
)
pA
jpeg(paste(path_pannel,"p2A.jpg",sep=""), width = 4000/1, height = 4000/1,res=700/1)
print(pA)
dev.off()
# Pannel 2 B
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_genes_filtered >= 5000,]
dt_graph = data1
pB = ggplot(dt_graph,aes(y=rho_aa_fpkm,fill=clade_group,x=clade_group))  +
geom_hline(size=1,linetype="dashed",col="red", yintercept = min(dt_graph[dt_graph$rho_aa_fpkm & dt_graph$pval_aa_fpkm < 0.05,]$rho_aa_fpkm) ) +
geom_text (label="p-value < 0.05", y=.4,x="Lepido Diptera",size=5,family="economica",col="red") + geom_boxplot(alpha=.1) +
geom_point(aes(fill=clade_group),size=3,pch=21,alpha=0.7) + theme_bw() + theme(
axis.title.x = element_text(color="black",angle = 50, size=25,family="economica"),
axis.title.y = element_text(color="black", size=22, family="economica"),
axis.text.y =  element_text(color="black", size=20, family="economica"),
axis.text.x =  element_text(color="black",vjust=1,hjust=1, size=22,angle = 30, family="economica"),
title =  element_text(color="black", size=0, family="economica"),
legend.text =  element_text(color="black", size=20, family="economica")
) + theme(legend.position='none') + scale_fill_manual(values=Clade_color) + ylab("Spearmann rho")  + xlab("") + ylim(0,1)
pB = ggMarginal(pB, type="histogram",fill=set_color[1])
pB
jpeg(paste(path_pannel,"p2B.jpg",sep=""), width = 4000/1, height = 2500/1,res=400/1)
print(pB)
dev.off()
# Figure 2
imgA = load.image(paste(path_pannel,"p2A.jpg",sep="") )
imgB = load.image(paste(path_pannel,"p2B.jpg",sep="") )
Caenorhabditis_elegans = readPNG(paste(path_require,"Caenorhabditis_elegans.png",sep=""))
{
pdf(file= paste(path_figure,"Figure2.pdf",sep=""), width=11, height=4)
m=matrix(rep(NA,10*100), nrow=10)
for(i in 1:10){
m[i,]=c(rep(1,35),rep(2,65))
}
m
layout(m)
par(mar=c(0, 2, 2, 1))
plot(imgA, axes=FALSE)
mtext("A", adj=0, side=2,at=-200, line=1, font=2, cex=2.2,las=2)
xcel=630
ycel=-140
rasterImage(Caenorhabditis_elegans,xleft=0+xcel, ybottom=350/1.5-ycel, xright=1000/1.4+xcel, ytop=0-ycel)
par(mar=c(0, 0, 0, 0))
plot(imgB, axes=FALSE)
mtext("B",adj=-1, side=2,at=150, line=1, font=2, cex=2.2,las=2)
dev.off()
}
