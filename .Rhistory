h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FF7F00",col="black") +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# "#A6CEE3" "#1F78B4" "#B2DF8A" "#33A02C" "#FB9A99" "#E31A1C" "#FDBF6F" "#FF7F00" "#fdfd99" "#e2cc1a"
#make hist
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none") + geom_tiplab(align=TRUE, linetype='dashed', linesize=.3)
pA = ggtree(arbrePhylotips)
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none") + geom_tiplab(align=TRUE, linetype='dashed', linesize=.3)
pA
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none") + geom_tiplab(align=TRUE, linetype='dashed', linesize=.3,size=0)
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none") + geom_tiplab(align=TRUE, linetype='dashed', linesize=.3,size=NA)
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none") + geom_tiplab(align=TRUE, linetype='dashed', linesize=.3,size=1)
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none") + geom_tiplab(align=TRUE, linetype='dashed', linesize=.3)
pA = ggtree(arbrePhylotips)
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none") + geom_tiplab(align=TRUE, linetype='dashed', linesize=.3,size=1)
pA
pA = ggtree(arbrePhylotips)
pA <- pA %<+% node_metadata  + aes(color=color) +
scale_color_manual("Clade",values=Clade_color[unique(edge_clade)]) + theme(
panel.background = element_rect(fill = "white", linetype = "dashed")
) + theme(legend.position = "none") + geom_tiplab(align=TRUE, linetype='dashed', linesize=.3,size=0)
pA
# tidy the data
tRNA_long <-
tRNA %>% rownames_to_column(var='sp') %>%
pivot_longer(cols=!sp,
names_to = 'tRNA',
values_to = "count")
tRNA_long$aa_name = code[tRNA_long$tRNA,]$aa_name
tRNA_long$amino_acid = code[tRNA_long$tRNA,]$aa
tRNA_long$anticodon = code[tRNA_long$tRNA,]$anticodon
tRNA_long$codon = code[tRNA_long$tRNA,]$codon
tRNA_long$amino_acid = factor(tRNA_long$amino_acid,levels = unique(code[order(code$nb_syn,code$anticodon),]$aa))
tRNA_long$anticodon = str_replace_all(tRNA_long$anticodon,'T','U')
tRNA_long$codon = str_replace_all(tRNA_long$codon,'T','U')
vect_debut = c("AT","GT","AC","GC","GG","CC","TC","AG","CG","CT","TT","AA","GA","CA","TG","TA")
vect_debut = str_replace_all(vect_debut,"T","U")
tRNA_long$title = paste(tRNA_long$anticodon,sep="")
tRNA_long$codon = factor(tRNA_long$codon,levels =  unlist(lapply(vect_debut,function(x) paste(x,c("C","U","A","G"),sep=""))) )
tRNA_long$title = factor(tRNA_long$title,levels= tapply(tRNA_long$title, as.integer(tRNA_long$codon),unique))
tRNA_long$color = sapply(tRNA_long$codon,function(x)substr(x,3,3))
set_color = c(A="#B2DF8A",U="#33A02C",C="#1F78B4",G="#A6CEE3")
# %>% filter(count == 0)  # #NOT WORKNG, don't know why,
# will use a ifelse in the size argument (beurk)
# found a better solution with stroke
# Plot it
b <- ggplot(tRNA_long[!tRNA_long$aa_name %in% c("Ter"),], aes(x=title, y=sp,color=color)) +
#geom_point(aes(size= ifelse(count==0, NA, count))) +  #not good to introduce NAs
geom_point(aes(size=count), stroke = 0) + # stroke=0 so that we don't see the 0, but they are still here
#scale_size(range=c(0, 10)) +
scale_size_area() +                       # better eye rendering than radius
theme_bw() +
theme(
axis.text.x = element_text(size=5, angle=90),
axis.text.y=element_text(size=3),
panel.grid.major = element_line(color = "grey",
size = 0.1,
linetype = 2),
panel.grid.major.x = element_blank() ,
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)) +
xlab(NULL) + ylab(NULL)+scale_color_manual("",values = set_color) + facet_wrap(~amino_acid,ncol=length(unique(tRNA_long$amino_acid)),scales="free_x")
b
# ggMarginal(b, type="histogram")    DOES NOT WORK ;(
#p + geom_facet(panel='tRNA',    #NOT WRKING
#               data=tRNA_long,
#               geom=geom_point,
#               mapping=aes(x=tRNA, y=sp, size=count))
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FF7F00",col="black") +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# "#A6CEE3" "#1F78B4" "#B2DF8A" "#33A02C" "#FB9A99" "#E31A1C" "#FDBF6F" "#FF7F00" "#fdfd99" "#e2cc1a"
#make hist
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
# tidy the data
tRNA_long <-
tRNA %>% rownames_to_column(var='sp') %>%
pivot_longer(cols=!sp,
names_to = 'tRNA',
values_to = "count")
tRNA_long$aa_name = code[tRNA_long$tRNA,]$aa_name
tRNA_long$amino_acid = code[tRNA_long$tRNA,]$aa
tRNA_long$anticodon = code[tRNA_long$tRNA,]$anticodon
tRNA_long$codon = code[tRNA_long$tRNA,]$codon
tRNA_long$aa_name = factor(tRNA_long$aa_name,levels = unique(code[order(code$nb_syn,code$anticodon),]$aa_name))
tRNA_long$anticodon = str_replace_all(tRNA_long$anticodon,'T','U')
tRNA_long$codon = str_replace_all(tRNA_long$codon,'T','U')
vect_debut = c("AT","GT","AC","GC","GG","CC","TC","AG","CG","CT","TT","AA","GA","CA","TG","TA")
vect_debut = str_replace_all(vect_debut,"T","U")
tRNA_long$title = paste(tRNA_long$anticodon,sep="")
tRNA_long$codon = factor(tRNA_long$codon,levels =  unlist(lapply(vect_debut,function(x) paste(x,c("C","U","A","G"),sep=""))) )
tRNA_long$title = factor(tRNA_long$title,levels= tapply(tRNA_long$title, as.integer(tRNA_long$codon),unique))
tRNA_long$color = sapply(tRNA_long$codon,function(x)substr(x,3,3))
set_color = c(A="#B2DF8A",U="#33A02C",C="#1F78B4",G="#A6CEE3")
# %>% filter(count == 0)  # #NOT WORKNG, don't know why,
# will use a ifelse in the size argument (beurk)
# found a better solution with stroke
# Plot it
b <- ggplot(tRNA_long[!tRNA_long$aa_name %in% c("Ter"),], aes(x=title, y=sp,color=color)) +
#geom_point(aes(size= ifelse(count==0, NA, count))) +  #not good to introduce NAs
geom_point(aes(size=count), stroke = 0) + # stroke=0 so that we don't see the 0, but they are still here
#scale_size(range=c(0, 10)) +
scale_size_area() +                       # better eye rendering than radius
theme_bw() +
theme(
axis.text.x = element_text(size=5, angle=90),
axis.text.y=element_text(size=3),
panel.grid.major = element_line(color = "grey",
size = 0.1,
linetype = 2),
panel.grid.major.x = element_blank() ,
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)) +
xlab(NULL) + ylab(NULL)+scale_color_manual("",values = set_color) + facet_wrap(~amino_acid,ncol=length(unique(tRNA_long$amino_acid)),scales="free_x")
b
# ggMarginal(b, type="histogram")    DOES NOT WORK ;(
#p + geom_facet(panel='tRNA',    #NOT WRKING
#               data=tRNA_long,
#               geom=geom_point,
#               mapping=aes(x=tRNA, y=sp, size=count))
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FF7F00",col="black") +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# "#A6CEE3" "#1F78B4" "#B2DF8A" "#33A02C" "#FB9A99" "#E31A1C" "#FDBF6F" "#FF7F00" "#fdfd99" "#e2cc1a"
#make hist
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
tRNA_long$aa_name = code[tRNA_long$tRNA,]$aa_name
tRNA_long$amino_acid = code[tRNA_long$tRNA,]$aa_name
tRNA_long$anticodon = code[tRNA_long$tRNA,]$anticodon
tRNA_long$codon = code[tRNA_long$tRNA,]$codon
tRNA_long$amino_acid = factor(tRNA_long$aa_name,levels = unique(code[order(code$nb_syn,code$anticodon),]$aa_name))
tRNA_long$anticodon = str_replace_all(tRNA_long$anticodon,'T','U')
tRNA_long$codon = str_replace_all(tRNA_long$codon,'T','U')
vect_debut = c("AT","GT","AC","GC","GG","CC","TC","AG","CG","CT","TT","AA","GA","CA","TG","TA")
vect_debut = str_replace_all(vect_debut,"T","U")
tRNA_long$title = paste(tRNA_long$anticodon,sep="")
tRNA_long$codon = factor(tRNA_long$codon,levels =  unlist(lapply(vect_debut,function(x) paste(x,c("C","U","A","G"),sep=""))) )
tRNA_long$title = factor(tRNA_long$title,levels= tapply(tRNA_long$title, as.integer(tRNA_long$codon),unique))
tRNA_long$color = sapply(tRNA_long$codon,function(x)substr(x,3,3))
set_color = c(A="#B2DF8A",U="#33A02C",C="#1F78B4",G="#A6CEE3")
# %>% filter(count == 0)  # #NOT WORKNG, don't know why,
# will use a ifelse in the size argument (beurk)
# found a better solution with stroke
# Plot it
b <- ggplot(tRNA_long[!tRNA_long$aa_name %in% c("Ter"),], aes(x=title, y=sp,color=color)) +
#geom_point(aes(size= ifelse(count==0, NA, count))) +  #not good to introduce NAs
geom_point(aes(size=count), stroke = 0) + # stroke=0 so that we don't see the 0, but they are still here
#scale_size(range=c(0, 10)) +
scale_size_area() +                       # better eye rendering than radius
theme_bw() +
theme(
axis.text.x = element_text(size=5, angle=90),
axis.text.y=element_text(size=3),
panel.grid.major = element_line(color = "grey",
size = 0.1,
linetype = 2),
panel.grid.major.x = element_blank() ,
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)) +
xlab(NULL) + ylab(NULL)+scale_color_manual("",values = set_color) + facet_wrap(~amino_acid,ncol=length(unique(tRNA_long$amino_acid)),scales="free_x")
b
# ggMarginal(b, type="histogram")    DOES NOT WORK ;(
#p + geom_facet(panel='tRNA',    #NOT WRKING
#               data=tRNA_long,
#               geom=geom_point,
#               mapping=aes(x=tRNA, y=sp, size=count))
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FF7F00",col="black") +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# "#A6CEE3" "#1F78B4" "#B2DF8A" "#33A02C" "#FB9A99" "#E31A1C" "#FDBF6F" "#FF7F00" "#fdfd99" "#e2cc1a"
#make hist
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FF7F00",col="black") +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)+ guides(colour = guide_legend(override.aes = list(size=10)))
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
print(pD)
b <- ggplot(tRNA_long[!tRNA_long$aa_name %in% c("Ter"),], aes(x=title, y=sp,color=color)) +
#geom_point(aes(size= ifelse(count==0, NA, count))) +  #not good to introduce NAs
geom_point(aes(size=count), stroke = 0) + # stroke=0 so that we don't see the 0, but they are still here
#scale_size(range=c(0, 10)) +
scale_size_area() +                       # better eye rendering than radius
theme_bw() +
theme(
axis.text.x = element_text(size=5, angle=90),
axis.text.y=element_text(size=3),
panel.grid.major = element_line(color = "grey",
size = 0.1,
linetype = 2),
panel.grid.major.x = element_blank() ,
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)) +
xlab(NULL) + ylab(NULL)+scale_color_manual("",values = set_color) + facet_wrap(~amino_acid,ncol=length(unique(tRNA_long$amino_acid)),scales="free_x")+
guides(colour = guide_legend(override.aes = list(size=10)))
b
b <- ggplot(tRNA_long[!tRNA_long$aa_name %in% c("Ter"),], aes(x=title, y=sp,color=color)) +
#geom_point(aes(size= ifelse(count==0, NA, count))) +  #not good to introduce NAs
geom_point(aes(size=count), stroke = 0) + # stroke=0 so that we don't see the 0, but they are still here
#scale_size(range=c(0, 10)) +
scale_size_area() +                       # better eye rendering than radius
theme_bw() +
theme(
axis.text.x = element_text(size=5, angle=90),
axis.text.y=element_text(size=3),
panel.grid.major = element_line(color = "grey",
size = 0.1,
linetype = 2),
panel.grid.major.x = element_blank() ,
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)) +
xlab(NULL) + ylab(NULL)+scale_color_manual("",values = set_color) + facet_wrap(~amino_acid,ncol=length(unique(tRNA_long$amino_acid)),scales="free_x")+
guides(colour = guide_legend(override.aes = list(size=2)))
b
b <- ggplot(tRNA_long[!tRNA_long$aa_name %in% c("Ter"),], aes(x=title, y=sp,color=color)) +
#geom_point(aes(size= ifelse(count==0, NA, count))) +  #not good to introduce NAs
geom_point(aes(size=count), stroke = 0) + # stroke=0 so that we don't see the 0, but they are still here
#scale_size(range=c(0, 10)) +
scale_size_area() +                       # better eye rendering than radius
theme_bw() +
theme(
axis.text.x = element_text(size=5, angle=90),
axis.text.y=element_text(size=3),
panel.grid.major = element_line(color = "grey",
size = 0.1,
linetype = 2),
panel.grid.major.x = element_blank() ,
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)) +
xlab(NULL) + ylab(NULL)+scale_color_manual("",values = set_color) + facet_wrap(~amino_acid,ncol=length(unique(tRNA_long$amino_acid)),scales="free_x")+
guides(colour = guide_legend(override.aes = list(size=5)))
b
# ggMarginal(b, type="histogram")    DOES NOT WORK ;(
#p + geom_facet(panel='tRNA',    #NOT WRKING
#               data=tRNA_long,
#               geom=geom_point,
#               mapping=aes(x=tRNA, y=sp, size=count))
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FF7F00",col="black") +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# "#A6CEE3" "#1F78B4" "#B2DF8A" "#33A02C" "#FB9A99" "#E31A1C" "#FDBF6F" "#FF7F00" "#fdfd99" "#e2cc1a"
#make hist
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FDBF6F",col="black") +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
dev.off()
dev.off()
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FDBF6F",col="grey") +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# "#A6CEE3" "#1F78B4" "#B2DF8A" "#33A02C" "#FB9A99" "#E31A1C" "#FDBF6F" "#FF7F00" "#fdfd99" "#e2cc1a"
#make hist
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FDBF6F",col="grey",stroke=0.1) +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FDBF6F",col="grey",width=0.1) +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
b <- ggplot(tRNA_long[!tRNA_long$aa_name %in% c("Ter"),], aes(x=title, y=sp,color=color)) +
#geom_point(aes(size= ifelse(count==0, NA, count))) +  #not good to introduce NAs
geom_point(aes(size=count), stroke = 0) + # stroke=0 so that we don't see the 0, but they are still here
#scale_size(range=c(0, 10)) +
scale_size_area() +                       # better eye rendering than radius
theme_bw() +
theme(
axis.text.x = element_text(size=5, angle=90),
axis.text.y=element_text(size=3),
panel.grid.major = element_line(color = "grey",
size = 0.1,
linetype = 2),
panel.grid.major.x = element_blank() ,
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)) +
xlab(NULL) + ylab(NULL)+scale_color_manual("",values = set_color) + facet_wrap(~amino_acid,ncol=length(unique(tRNA_long$amino_acid)),scales="free_x")+
guides(colour = guide_legend(override.aes = list(size=5)))
b
# ggMarginal(b, type="histogram")    DOES NOT WORK ;(
#p + geom_facet(panel='tRNA',    #NOT WRKING
#               data=tRNA_long,
#               geom=geom_point,
#               mapping=aes(x=tRNA, y=sp, size=count))
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FDBF6F",col="grey",width=0.1) +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# "#A6CEE3" "#1F78B4" "#B2DF8A" "#33A02C" "#FB9A99" "#E31A1C" "#FDBF6F" "#FF7F00" "#fdfd99" "#e2cc1a"
#make hist
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
pD
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FDBF6F",col="grey",size=0.1) +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# "#A6CEE3" "#1F78B4" "#B2DF8A" "#33A02C" "#FB9A99" "#E31A1C" "#FDBF6F" "#FF7F00" "#fdfd99" "#e2cc1a"
#make hist
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
b <- ggplot(tRNA_long[!tRNA_long$aa_name %in% c("Ter"),], aes(x=title, y=sp,color=color)) +
#geom_point(aes(size= ifelse(count==0, NA, count))) +  #not good to introduce NAs
geom_point(aes(size=count), stroke = 0) + # stroke=0 so that we don't see the 0, but they are still here
#scale_size(range=c(0, 10)) +
scale_size_area() +                       # better eye rendering than radius
theme_bw() +
theme(
axis.text.x = element_text(size=5, angle=90),
axis.text.y=element_text(size=3),
panel.grid.major = element_line(color = "grey",
size = 0.1,
linetype = 2),
panel.grid.major.x = element_blank() ,
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)) +
xlab(NULL) + ylab(NULL)+scale_color_manual("",values = set_color) + facet_wrap(~amino_acid,ncol=length(unique(tRNA_long$amino_acid)),scales="free_x")+
guides(colour = guide_legend(override.aes = list(size=5)))
b
# ggMarginal(b, type="histogram")    DOES NOT WORK ;(
#p + geom_facet(panel='tRNA',    #NOT WRKING
#               data=tRNA_long,
#               geom=geom_point,
#               mapping=aes(x=tRNA, y=sp, size=count))
# histogram of the total number of tRNA loci per species
h <- tRNA_long %>% group_by(sp) %>%
summarize(tRNAlociCount = sum(count)) %>%
ggplot(aes(y=sp, x=tRNAlociCount)) +
geom_col(fill="#FDBF6F",col="black",size=0.1) +
theme_bw() +
theme(
axis.text.x = element_text(size=7),
panel.grid.major = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
xlab(NULL) + ylab(NULL)
# "#A6CEE3" "#1F78B4" "#B2DF8A" "#33A02C" "#FB9A99" "#E31A1C" "#FDBF6F" "#FF7F00" "#fdfd99" "#e2cc1a"
#make hist
pD = b %>% insert_left(pA, width=0.7) %>% insert_right(h, width=0.4 )
jpeg(paste(path_pannel,"ptRNA_count.jpg",sep=""), width = 2000/.2,  1200/.2,res=100/.2)
print(pD)
dev.off()
b <- ggplot(tRNA_long[!tRNA_long$aa_name %in% c("Ter"),], aes(x=title, y=sp,color=color)) +
#geom_point(aes(size= ifelse(count==0, NA, count))) +  #not good to introduce NAs
geom_point(aes(size=count), stroke = 0) + # stroke=0 so that we don't see the 0, but they are still here
#scale_size(range=c(0, 10)) +
scale_size_area() +                       # better eye rendering than radius
theme_bw() +
theme(
axis.text.x = element_text(size=5, angle=90),
axis.text.y=element_text(size=3),
panel.grid.major = element_line(color = "grey",
size = 0.1,
linetype = 2),
panel.grid.major.x = element_blank() ,
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)) +
xlab(NULL) + ylab(NULL)+scale_color_manual("",values = set_color) + facet_wrap(~amino_acid,ncol=length(unique(tRNA_long$amino_acid)),scales="free_x")+
guides(colour = guide_legend(override.aes = list(size=5)))
b
