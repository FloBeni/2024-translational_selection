# rownames(busco_tab) = busco_tab$species
data_conservation = read.delim(paste("data/compilation_prop_gap_pergene_25_50_75.tab.gz",sep=""))
data_conservation_rmfirst1000bp = read.delim(paste("data/compilation_prop_gap_pergene_25_50_75_rmfirst1000bp.tab.gz",sep=""))
stderror <- function(x) sd(x , na.rm = T)/sqrt(length(x[!is.na(x)] ))
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
stop_codon = rownames(code[code$aa_name == "Ter",])
wobble_pairing = c("C"="IC","T"="GU","G"="UG","A"="IA")
wobble_associat_wc = list("T"="C",
"A"="A",
"G"="A",
"C"="T")
GTDrift_list_species = read.delim("data/GTDrift_list_species.tab")
rownames(GTDrift_list_species) = GTDrift_list_species$species
data1 = data.frame()
for (species in GTDrift_list_species$species){
dt_species = data.frame()
print(species)
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
if (
file.exists(paste(path,"/tRNA_from_GFF.tab.gz",sep="")) &
file.size(paste(path,"/tRNA_from_GFF.tab.gz",sep="")) != 38 ){ # if non empty
tRNA_GFF = T
} else if (
file.exists(paste(path,"/tRNAscan_SE.tab.gz",sep="")) &
file.size(paste(path,"/tRNAscan_SE.tab.gz",sep="")) != 36  ){ # if non empty
tRNA_GFF = F
}
codon_usage = read.delim( paste(path,"/codon_usage_gene_fpkm.tab.gz",sep="") )
nb_genes = length(unique(codon_usage$gene_id))
codon_usage$length = rowSums(codon_usage[ , 3:66]) * 3
codon_usage$intern_stop_codon = rowSums(codon_usage[,stop_codon]) - grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon)
codon_usage = codon_usage[codon_usage$intern_stop_codon == 0 & codon_usage$start_codon == "ATG" & codon_usage$length_cds %% 3 == 0,]
if (quantile(grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon),0.75) != 0){  # if annotated seq have a stop codon for the majority then remove those that dont
codon_usage = codon_usage[grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon),] } else { print(species)}
codon_usage = codon_usage[order(codon_usage$length_cds,decreasing = T),]
codon_usage = codon_usage[!duplicated(codon_usage$gene_id),]
codon_usage = codon_usage[!is.na(codon_usage$median_fpkm) ,]
prop_cds_expressed = nrow(codon_usage[codon_usage$median_fpkm != 0 ,]) / nrow(codon_usage)
codon_usage = codon_usage[codon_usage$median_fpkm != 0 ,]
observation = colSums( codon_usage[3:70] * codon_usage$median_fpkm , na.rm = T )
tRNA_optimal = read.delim(paste(path,"/decoding_table.tab.gz",sep=""))
rownames(tRNA_optimal) = tRNA_optimal$codon
tRNA_optimal = tRNA_optimal[tRNA_optimal$aa_name != "Ter",]
nb_codon_not_decoded = sum(!tRNA_optimal$decoded)
aa_data = data.frame()
for (amino_acid in unique(code$aa_name)){
codon_used = rownames(code[code$aa_name == amino_acid,])
aa_data = rbind(aa_data,
data.frame(
amino_acid ,
letter_aa = unique(code[code$aa_name == amino_acid,]$aa) ,
tRNASE_copies= sum(tRNA_optimal[codon_used,]$nb_tRNA_copies,na.rm = T),
obs_codon = sum(observation[codon_used])
))
}
aa_data = aa_data[!grepl("Ter",aa_data$amino_acid) ,]
spearman_method_aa = cor.test( aa_data$tRNASE_copies, aa_data$obs_codon,method="spearman",exact=F)
## Selectionner les tRNA + abondant pour les duet XXA-XXG
abond_AG = tRNA_optimal[!tRNA_optimal$aa_name %in% c("Met","Trp","Ile"),]
abond_AG = abond_AG[substr(abond_AG$codon,3,3) %in% c("A","G"),]
abond_AG = abond_AG[order(abond_AG$nb_tRNA_copies,decreasing = T),]
abond_AG = abond_AG[ !abond_AG$aa_name_scu %in% abond_AG[abond_AG$nb_tRNA_copies == 0,]$aa_name_scu,]
vector = (tapply(abond_AG$nb_tRNA_copies , abond_AG$aa_name_scu,function(x) sum(x == max(x))))
abond_AG = abond_AG[abond_AG$aa_name_scu %in% names(vector[vector != 2]),]
abond_AG = abond_AG[!duplicated(paste(abond_AG$aa_name_scu)),]$codon
GCi_obs = rowSums(codon_usage[c("Ci","Gi")],na.rm = T)
ATGCi_obs = rowSums(codon_usage[c("Ai","Ti","Ci","Gi")],na.rm = T)
GC3_obs = rowSums(codon_usage[c("C3","G3")],na.rm = T)
ATGC3_obs = rowSums(codon_usage[c("A3","T3","C3","G3")],na.rm = T)
gc3 = (GC3_obs / ATGC3_obs)
gci = (GCi_obs / ATGCi_obs)
model_lm = lm( gc3 ~  gci)
spearman_method_gc3gci = cor.test( gc3, gci,method = "spearman",exact=F)
xaxis = codon_usage$median_fpkm
proportion = 5/100
quantile = unique( quantile(xaxis, probs = seq(0, 1,proportion),na.rm=T ))
intervalle_FPKM = cut(xaxis, quantile,include.lowest = T,include.higher=T)
FPKM_bins = tapply(xaxis, intervalle_FPKM, median)
## Translational selection signal
data_optiplus = data.frame()
for ( amino_acid in unique(tRNA_optimal[ tRNA_optimal$nb_syn >= 2,]$aa_name)){
codon_used = rownames(tRNA_optimal[tRNA_optimal$aa_name == amino_acid,])
amino_acid_count = rowSums(codon_usage[codon_used],na.rm = T)
triplet_intronic = rowSums(codon_usage[paste(codon_used,'_intronic',sep = "")],na.rm = T)
for ( codon in codon_used ){
COA_obs =  unlist(codon_usage[codon])
COA_neg_obs = amino_acid_count
COA_obs_intronic =  unlist(codon_usage[paste(codon,'_intronic',sep = "")])
COA_neg_obs_intronic = triplet_intronic
data_optiplus = rbind(data_optiplus,data.frame(
species,
amino_acid,
codon,
aa_name_scu = tRNA_optimal[codon,]$aa_name_scu,
expressed_overused_background = (round(tapply( COA_obs / COA_neg_obs , intervalle_FPKM , function(x) mean(x,na.rm=T))[length(FPKM_bins)],5) -
round( mean( (COA_obs / COA_neg_obs)[codon_usage$median_fpkm <= median(codon_usage$median_fpkm )] , na.rm=T) , 5)) - (
round(tapply( COA_obs_intronic / COA_neg_obs_intronic   , intervalle_FPKM , function(x) mean(x,na.rm=T))[length(FPKM_bins)],5) -
round( mean( (COA_obs_intronic / COA_neg_obs_intronic)[codon_usage$median_fpkm <= median(codon_usage$median_fpkm )] , na.rm=T),5)
)
))
}
}
data_optiplus = data_optiplus[order(data_optiplus$expressed_overused_background,decreasing = T),]
data_optiplus = data_optiplus[order(data_optiplus$amino_acid,decreasing = F),]
data_optiplus$rank = unlist(tapply(data_optiplus$expressed_overused_background,data_optiplus$amino_acid , function(x) rev(rank(x))))
ic_decoded = tRNA_optimal[substr(tRNA_optimal$codon,3,3) %in% c("C","T") & tRNA_optimal$nb_syn != 2,]$codon
DUC_IC = data_optiplus[data_optiplus$codon %in% ic_decoded,]
DUC_IC = DUC_IC[!duplicated(DUC_IC$amino_acid),]$codon
dt_species = rbind(dt_species,data.frame(
species,
tRNA_GFF,
prop_cds_expressed,
nb_genes,
nb_genes_filtered = nrow(codon_usage),
nb_codon_not_decoded,
rho_aa_fpkm = spearman_method_aa$estimate,
pval_aa_fpkm = spearman_method_aa$p.value,
rho_gc3_gci = spearman_method_gc3gci$estimate,
pval_gc3_gci = spearman_method_gc3gci$p.value,
g_abond_ag = sum(substr(abond_AG,3,3) %in% c("G")) / length(abond_AG),
c_duc_ic = sum(substr(DUC_IC,3,3) %in% c("C")) / length(DUC_IC),
gc3 = mean(GC3_obs / ATGC3_obs,na.rm=T),
var_gc3 = var(GC3_obs / ATGC3_obs,na.rm=T),
gci = mean(GCi_obs / ATGCi_obs,na.rm=T),
std_gci = stderror(GCi_obs / ATGCi_obs),
var_gci = var(GCi_obs / ATGCi_obs,na.rm=T)
) )
### Translational selection intensity
for ( type_aa in c( "POC1","POC2","POCs")){
if (type_aa == "POC1" ){
subset_selected = tRNA_optimal[tRNA_optimal$POC1,]
list_POC = subset_selected$codon
list_aa = unique(subset_selected$aa_name)
list_codon = tRNA_optimal[tRNA_optimal$aa_name %in% list_aa,]$codon
} else if  (type_aa == "POC2" ){
subset_selected = tRNA_optimal[tRNA_optimal$POC2,]
list_POC = subset_selected$codon
list_aa = unique(subset_selected$aa_name)
list_codon = tRNA_optimal[tRNA_optimal$aa_name %in% list_aa,]$codon
} else if  (type_aa == "POCs" ){
subset_selected = tRNA_optimal[tRNA_optimal$POC2 | tRNA_optimal$POC1,]
list_POC = subset_selected$codon
list_aa = unique(subset_selected$aa_name)
list_codon = tRNA_optimal[tRNA_optimal$aa_name %in% list_aa,]$codon
}
print(list_POC)
print(list_codon)
if ( length(list_POC) != 0 ){
##### Over-used of POC in expressed genes
POC_obs = rowSums(codon_usage[ list_POC ],na.rm = T)
POC_codons_obs = rowSums(codon_usage[ list_codon ],na.rm = T)
POC_obs_intronic = rowSums(codon_usage[paste(list_POC,'_intronic',sep = "")],na.rm = T)
POC_codons_obs_intronic = rowSums(codon_usage[paste(list_codon,'_intronic',sep = "")],na.rm = T)
## Over-used of POC in constraint sites
if (GTDrift_list_species[species,]$clade_group %in% c("Mammalia","Aves","Other Tetrapods")){
data_conservation_sub = data_conservation_rmfirst1000bp[data_conservation_rmfirst1000bp$species == species & data_conservation_rmfirst1000bp$protein %in% codon_usage$protein_id,]
} else {
data_conservation_sub = data_conservation[data_conservation$species == species ,]
}
table_constrain = data.frame(busco_id = data_conservation_sub$busco_id)
for (constrain in c("_highconst","_modconst","_sligconst","_unconst")){
table_constrain[,paste("POC",constrain,sep="")] = rowSums(data_conservation_sub[paste(list_POC,constrain,sep = "")],na.rm = T)
table_constrain[,paste("POC_codon",constrain,sep="")] = rowSums(data_conservation_sub[paste(list_codon,constrain,sep = "")],na.rm = T)
}
dt_translational_selection = data.frame(
nb_aa = length(list_aa),
nb_busco = nrow(table_constrain),
expressed_overused = 100*(round(tapply( POC_obs / POC_codons_obs , intervalle_FPKM , function(x) mean(x,na.rm=T))[length(FPKM_bins)],5) -
round( mean( (POC_obs / POC_codons_obs)[codon_usage$median_fpkm <= median(codon_usage$median_fpkm )] , na.rm=T) , 5)) ,
expressed_overused_background = 100*((round(tapply( POC_obs / POC_codons_obs , intervalle_FPKM , function(x) mean(x,na.rm=T))[length(FPKM_bins)],5) -
round( mean( (POC_obs / POC_codons_obs)[codon_usage$median_fpkm <= median(codon_usage$median_fpkm )] , na.rm=T) , 5)) - (
round(tapply( POC_obs_intronic / POC_codons_obs_intronic   , intervalle_FPKM , function(x) mean(x,na.rm=T))[length(FPKM_bins)],5) -
round( mean( (POC_obs_intronic / POC_codons_obs_intronic)[codon_usage$median_fpkm <= median(codon_usage$median_fpkm )] , na.rm=T),5)
)),
# constraint_overused = 100*(mean(table_constrain$POC_highconst/table_constrain$POC_codon_highconst ,na.rm = T) - mean(table_constrain$POC_unconst/table_constrain$POC_codon_unconst,na.rm = T))
constraint_overused = 100 * mean(table_constrain$POC_highconst/table_constrain$POC_codon_highconst - table_constrain$POC_unconst/table_constrain$POC_codon_unconst,na.rm = T)
)
} else {
dt_translational_selection = data.frame(
nb_aa = 0,
nb_busco = NA,
expressed_overused = NA,
expressed_overused_background = NA,
constraint_overused = NA
)
}
colnames(dt_translational_selection) = paste(colnames(dt_translational_selection),type_aa,sep="_")
dt_species = cbind(dt_species,dt_translational_selection)
}
data1 = rbind(data1,dt_species)
}
write.table(data1,"data/data1_supp.tab",quote=F,row.names = F,sep="\t")
## Highly expressed genes are enriched in POC
print("Highly expressed genes are enriched in POC")
data1 = data1[ data1$nb_codon_not_decoded == 0 & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000,]
print(paste("5,000 protein-coding genes expressed (N=",nrow(data1)," species)",sep=""))
## Highly expressed genes are enriched in POC
print("Highly expressed genes are enriched in POC1 and POC2")
data1 = read.delim("data/data1_supp.tab")
rownames(data1) = data1$species
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
##  Non-adaptive processes shape codon usage variations across species
print("Non-adaptive processes are the primary drivers of codon usage variations among metazoans")
print(paste("position between ",nrow(data1[ data1$nb_genes_filtered >= 5000,])," metazoan species",sep=""))
print(paste("after removal of species lacking gene expression data (N=",nrow(data1[ data1$nb_genes_filtered < 5000,]),")",sep=""))
data1 = data1[ data1$nb_genes_filtered >= 5000,]
print(paste("clades (",sum(table(data1$clade_group)[c("Mammalia","Aves","Other Tetrapods","Teleostei")]),
" vertebrates, ",sum(table(data1$clade_group)[c("Diptera","Lepidoptera","Coleoptera","Hymenoptera","Other Insects")]),
" insects and ",sum(table(data1$clade_group)[c("Other Metazoans","Nematoda")]),
" other metazoans).",sep=""))
print(paste("GCi extends from ",round(min(data1$gci),2)," to ",round(max(data1$gci),2),sep=""))
print(paste("GC3 span from ",round(min(data1$gc3),2)," to ",round(max(data1$gc3),2),sep=""))
print(paste("Diptera clade (N=",sum(table(data1$clade_group)[c("Diptera")]),")",sep=""))
print(paste("the wider range of GC3 variations (from ",round(min(data1[data1$clade_group == "Diptera",]$gc3),2),"% to ",round(max(data1[data1$clade_group == "Diptera",]$gc3),2),"%).",sep=""))
print(paste("GC3 and GCi are highly correlated (rho=",round(data1["Homo_sapiens",]$rho_gc3_gci,2),")",sep=""))
print(paste("pronounced in Caenorhabditis elegans (rho=",round(data1["Caenorhabditis_elegans",]$rho_gc3_gci,2),",",sep=""))
##  tRNA abundance matches transcriptome requirements
print("tRNA abundance matches transcriptome requirements")
print(paste("but in some cases (",sum(!data1$tRNA_GFF)," species over ",nrow(data1),
") the tRNA are not annotated. We annotated the remaining ",sum(!data1$tRNA_GFF),sep=""))
data7 = read.delim("data/data7_supp.tab")
dt_graph = data7[data7$species == "Drosophila_melanogaster",]
spearman_method_aa = cor.test( dt_graph$prop_abundance_average, dt_graph$prop_transcriptome_count,method="spearman",exact=F)
print(paste(" (rho = ",round(spearman_method_aa$estimate,2),")",sep=""))
dt_graph = data7[data7$species == "Homo_sapiens",]
spearman_method_aa_human = cor.test( dt_graph$gene_copies, dt_graph$prop_transcriptome_count,method="spearman",exact=F)
dt_graph = data7[data7$species == "Drosophila_melanogaster",]
spearman_method_aa_droso = cor.test( dt_graph$gene_copies, dt_graph$prop_transcriptome_count,method="spearman",exact=F)
print(paste(" (rho = ",round(spearman_method_aa$estimate,2),") as well with the gene copy number, (rho = ",round(spearman_method_aa_droso$estimate,2)," and ",round(spearman_method_aa_human$estimate,2)," respectively)",sep=""))
print(paste(" This analysis was conducted across all studied species (N=",nrow(data1)," species )",sep=""))
print(paste("in ",round(sum(data1$pval_aa_fpkm < 0.05)/nrow(data1)*100),"% of the analyzed species",sep=""))
print(paste("with amino acid usage (N=",sum(data1$pval_aa_fpkm < 0.05)," species)",sep=""))
data1 = data1[data1$pval_aa_fpkm < 0.05,]
##  tRNA abundance defines putative-optimal codons
print("tRNA abundance defines putative-optimal codons")
species = "Homo_sapiens"
genome_assembly = GTDrift_list_species[species,]$assembly_accession
taxID = GTDrift_list_species[species,]$NCBI.taxid
path = paste("data/per_species/",species,"_NCBI.taxid",taxID,"/",genome_assembly,sep="")
code = read.delim(paste("data/standard_genetic_code.tab",sep=""))
rownames(code) = code$codon
stop_codon = rownames(code[code$aa_name == "Ter",])
codon_usage = read.delim( paste(path,"/codon_usage_gene_fpkm.tab.gz",sep="") )
codon_usage$intern_stop_codon = rowSums(codon_usage[,stop_codon]) - grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon)
codon_usage = codon_usage[codon_usage$intern_stop_codon == 0 & codon_usage$start_codon == "ATG" & codon_usage$length_cds %% 3 == 0,]
codon_usage = codon_usage[grepl(paste(stop_codon,collapse = "|"),codon_usage$end_codon),]
codon_usage = codon_usage[order(codon_usage$length_cds,decreasing = T),]
codon_usage = codon_usage[!duplicated(codon_usage$gene_id),]
codon_usage = codon_usage[!is.na(codon_usage$median_fpkm) ,]
codon_usage = codon_usage[codon_usage$median_fpkm != 0 ,]
observation = colSums( codon_usage[3:70] , na.rm = T )
AAC = observation["AAC"]
AAT = observation["AAT"]
print(paste("AAT accounting for ",round(AAT/(AAC+AAT)*100),"% of the occurrences, respectively.",sep=""))
print(paste("we excluded ",sum(data1$nb_codon_not_decoded != 0)," species in which certain",sep=""))
data12 = read.delim("data/data12_supp.tab")
data12 = data12[data12$species %in% data1[ data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 & data1$nb_codon_not_decoded == 0,]$species,]
list_species = c()
for(species in unique(data12$species)){
aa_present = table(data12[data12$species == species & data12$nb_syn != 1 & data12$abundance != 0 ,]$amino_acid)
aa_present = names(aa_present[aa_present >= 2 ])
if (any(!(aa_present %in% unique(data12[data12$species == species & data12$amino_acid %in% aa_present & data12$POC1, ]$amino_acid)))){
print(species)
list_species=append(list_species,species)
print(aa_present[!(aa_present %in% unique(data12[data12$species == species & data12$amino_acid %in% aa_present & data12$POC1, ]$amino_acid))])
}
}
print(paste(" gene copy number and decodes all synonymous codons (found in N=",length(list_species)," species)",sep=""))
print(paste(" Phe, Asn, Asp, His, Cys and Tyr ( ",100*round(1-1/sum(table(data12[data12$POC2 & data12$species%in%data1$species,]$amino_acid)),3) ,")%",sep=""))
print(paste("In the case of human we are able to identify POC1 for ",length(unique(data12[data12$species == "Homo_sapiens" & data12$POC1,]$amino_acid)),
" amino acid and POC2 for ",length(unique(data12[data12$species == "Homo_sapiens" & data12$POC2,]$amino_acid))," codons.",sep=""))
print(paste("we can define POC1 and POC2 for ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC1,]$amino_acid)),
" and ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC2,]$amino_acid))," amino acids",sep=""))
print(paste("we can define POC1 and POC2 for ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC1,]$amino_acid)),
" and ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC2,]$amino_acid))," amino acids",sep=""))
print(paste("POC1 are defined for ", round(mean(tapply(data12[data12$POC1,]$amino_acid,data12[data12$POC1,]$species,function(x) length(unique(x)))),1),
" amino acids and POC2 for ", round(mean(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))),1),
" amino acids.",sep=""))
mean(data1$nb_aa_POC1)
mean(tapply(data12[data12$POC1,]$amino_acid,data12[data12$POC1,]$species,function(x) length(unique(x))))
mean(data1$nb_aa_POC2)
mean(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x))))
unique(data12species)
unique(data12$species)
data12 = read.delim("data/data12_supp.tab")
data12 = data12[data12$species %in% data1[ data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 & data1$nb_codon_not_decoded == 0,]$species,]
list_species = c()
for(species in unique(data12$species)){
aa_present = table(data12[data12$species == species & data12$nb_syn != 1 & data12$abundance != 0 ,]$amino_acid)
aa_present = names(aa_present[aa_present >= 2 ])
if (any(!(aa_present %in% unique(data12[data12$species == species & data12$amino_acid %in% aa_present & data12$POC1, ]$amino_acid)))){
print(species)
list_species=append(list_species,species)
print(aa_present[!(aa_present %in% unique(data12[data12$species == species & data12$amino_acid %in% aa_present & data12$POC1, ]$amino_acid))])
}
}
print(paste(" gene copy number and decodes all synonymous codons (found in N=",length(list_species)," species)",sep=""))
data1 =   data1[ data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 & data1$nb_codon_not_decoded == 0,]
print(paste("we excluded ",sum(data1$nb_codon_not_decoded != 0)," species in which certain",sep=""))
data1 =   data1[ data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 & data1$nb_codon_not_decoded == 0,]
data12 = read.delim("data/data12_supp.tab")
data12 = data12[data12$species %in% data1$species,]
list_species = c()
for(species in unique(data12$species)){
aa_present = table(data12[data12$species == species & data12$nb_syn != 1 & data12$abundance != 0 ,]$amino_acid)
aa_present = names(aa_present[aa_present >= 2 ])
if (any(!(aa_present %in% unique(data12[data12$species == species & data12$amino_acid %in% aa_present & data12$POC1, ]$amino_acid)))){
print(species)
list_species=append(list_species,species)
print(aa_present[!(aa_present %in% unique(data12[data12$species == species & data12$amino_acid %in% aa_present & data12$POC1, ]$amino_acid))])
}
}
print(paste(" gene copy number and decodes all synonymous codons (found in N=",length(list_species)," species)",sep=""))
print(paste(" Phe, Asn, Asp, His, Cys and Tyr ( ",100*round(1-1/sum(table(data12[data12$POC2 & data12$species%in%data1$species,]$amino_acid)),3) ,")%",sep=""))
print(paste("In the case of human we are able to identify POC1 for ",length(unique(data12[data12$species == "Homo_sapiens" & data12$POC1,]$amino_acid)),
" amino acid and POC2 for ",length(unique(data12[data12$species == "Homo_sapiens" & data12$POC2,]$amino_acid))," codons.",sep=""))
print(paste("we can define POC1 and POC2 for ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC1,]$amino_acid)),
" and ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC2,]$amino_acid))," amino acids",sep=""))
print(paste("we can define POC1 and POC2 for ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC1,]$amino_acid)),
" and ",length(unique(data12[data12$species == "Caenorhabditis_elegans" & data12$POC2,]$amino_acid))," amino acids",sep=""))
print(paste("POC1 are defined for ", round(mean(tapply(data12[data12$POC1,]$amino_acid,data12[data12$POC1,]$species,function(x) length(unique(x)))),1),
" amino acids and POC2 for ", round(mean(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))),1),
" amino acids.",sep=""))
mean(data1$nb_aa_POC2)
unique(data12$species)
mean(data1$nb_aa_POC2)
mean(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x))))
unique(data12$species)
unique(data1$species)
mean(data1$nb_aa_POC1)
mean(tapply(data12[data12$POC1,]$amino_acid,data12[data12$POC1,]$species,function(x) length(unique(x))))
print(paste("POC1 are defined for ", round(mean(tapply(data12[data12$POC1,]$amino_acid,data12[data12$POC1,]$species,function(x) length(unique(x)))),1),
" amino acids and POC2 for ", round(mean(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))),1),
" amino acids.",sep=""))
mean(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x))))
mean(data1$nb_aa_POC2)
data1$nb_aa_POC2
tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))
data1$nb_aa_POC2
data1$nb_aa_POC2
data1$nb_aa_POC2 == (data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]
data1$nb_aa_POC2 == data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]
data1$nb_aa_POC2 == tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]
table(data1$nb_aa_POC2 == tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species])
data1$species
table(data1$nb_aa_POC2 == tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species])
is.na(data1$nb_aa_POC2)
table(is.na(data1$nb_aa_POC2))
tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]
table(is.na(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]))
(is.na(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]))[(is.na(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]))]
(is.na(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]))[(is.na(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]))]
((tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]))[(is.na(tapply(data12[data12$POC2,]$amino_acid,data12[data12$POC2,]$species,function(x) length(unique(x)))[data1$species]))]
data12[data12$POC2,]$species
print(paste("POC1 are defined for ", round(mean(data1$nb_aa_POC1),1),
" amino acids and POC2 for ", round(mean(data1$nb_aa_POC2),1),
" amino acids.",sep=""))
print(paste("The results depicted in Fig4C indicate that, for ",table(data1$expressed_overused_background_WB_WC_notambiguous > 0)["TRUE"],
" species (",round(table(data1$expressed_overused_background_WB_WC_notambiguous > 0)["TRUE"]/nrow(data1)*100),"%)",sep=""))
print(paste("we observed a rise in POC1 from 50\% to 70\% for highly expressed genes"))
data5 = read.delim("data/data5_supp.tab")
data5$gene_set = str_replace_all(data5$gene_set,"all,","genes,")
data5[data5$categorie == "POC-matching triplets (POCMT)",]$categorie = "control"
data5[data5$categorie == "Putative optimal codons (POC)",]$categorie = ""
dt_graph = data5[ data5$species == "Caenorhabditis_elegans" & data5$set != "POC1",]
dt_graph
dt_graph$freq
max(dt_graph$freq)
print(paste("we observed a rise in POC1 from 50% to ",round(max(dt_graph$freq),2)*100,"% for highly expressed genes"))
dt_graph = data5[ data5$species == "Caenorhabditis_elegans" & data5$set != "POC1",]
print(paste("we observed a rise in POC1 from ",round(mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100)*100,"% to ",round(max(dt_graph$freq),2)*100,"% for highly expressed genes"))
dt_graph$set
print(paste("we observed a rise in POC1 from ",round(mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq))*100,"% to ",round(max(dt_graph$freq),2)*100,"% for highly expressed genes"))
dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq)
dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq
dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq
dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq
data5 = read.delim("data/data5_supp.tab")
data5$gene_set = str_replace_all(data5$gene_set,"all,","genes,")
data5[data5$categorie == "POC-matching triplets (POCMT)",]$categorie = "control"
data5[data5$categorie == "Putative optimal codons (POC)",]$categorie = ""
dt_graph = data5[ data5$species == "Caenorhabditis_elegans" & data5$set != "POC1",]
print(paste("we observed a rise in POC1 from ",round(mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq))*100,"% to ",round(max(dt_graph$freq),2)*100,"% for highly expressed genes"))
dt_graph$fpkm
dt_graph$fpkm <= median(dt_graph$fpkm)
dt_graph$categorie
dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq
grepl("POC1",dt_graph$set)
dt_graph
dt_graph = data5[ data5$species == "Caenorhabditis_elegans" & data5$set == "POC1",]
print(paste("we observed a rise in POC1 from ",round(mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq))*100,"% to ",round(max(dt_graph$freq),2)*100,"% for highly expressed genes"))
dt_graph = data5[ data5$species == "Caenorhabditis_elegans",]
print(paste("we observed a rise in POC1 from ",round(mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq))*100,"% to ",round(max(dt_graph$freq),2)*100,"% for highly expressed genes"))
print(paste("we observed a rise in POC1 from ",round(mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq),2)*100,"% to ",round(max(dt_graph$freq),2)*100,"% for highly expressed genes"))
print(paste("we observed a rise in POC1 from ",round(mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq),2)*100,"% to ",
round(dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],2)*100,"% for highly expressed genes"))
print(paste("we observed a rise in POC1 from ",round(mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq),2)*100,"% to ",
round(dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ]$freq,2)*100,"% for highly expressed genes"))
print(paste("we observed a rise in POC1 from ",round(mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq),2)*100,"% to ",
round(dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ]$freq,2)*100,"% for highly expressed genes"))
print(paste("we observed a rise in POC1 from ",round(min(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) &
!grepl("control",dt_graph$categorie) &
grepl("POC1",dt_graph$set),]$freq),2)*100,"% to ",
round(dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ]$freq,2)*100,"% for highly expressed genes"))
print(paste("This analysis was performed for each of the studied species ( N=",nrow'data1',"species).",sep=""))
print(paste("This analysis was performed for each of the studied species ( N=",nrow(data1),"species).",sep=""))
print(paste("This analysis was performed for each of the studied species ( N=",nrow(data1)," species).",sep=""))
print(paste("This analysis was performed for each of the studied species (N=",nrow(data1)," species).",sep=""))
print(paste("For 206 species (",round(table(data1$expressed_overused_background_POC1 > 0)["TRUE"]/nrow(data1)*100),"%), the prevalence of POC1",sep=""))
print(paste("The strongest variation is observed in Caenorhabditis elegans (+",
round(data1[data1$species == "Caenorhabditis_elegans",]$expressed_overused_background_POC1),
"%).",sep=""))
print(paste("clades from +",round(mean(data1[data1$clade_group == "Diptera",]$expressed_overused_background_WB_WC_notambiguous)),
"\% on average in Diptera to and +2\% in vertebrates",sep=""))
print(paste("clades from +",round(mean(data1[data1$clade_group == "Diptera",]$expressed_overused_background_WB_WC_notambiguous)),
"% on average in Diptera to and +2% in vertebrates",sep=""))
print(paste("clades from +",round(mean(data1[data1$clade_group == "Diptera",]$expressed_overused_background_POC1)),
"% on average in Diptera to and +2% in vertebrates",sep=""))
print(paste("clades from +",round(mean(data1[data1$clade_group == "Diptera",]$expressed_overused_background_POC1)),
"% on average in Diptera to and +",
round(mean(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods","Teleostei"),]$expressed_overused_background_WB_WC_notambiguous)),
"% in vertebrates",sep=""))
print(paste("clades from +",round(mean(data1[data1$clade_group == "Diptera",]$expressed_overused_background_POC1)),
"% on average in Diptera to and +",
round(mean(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods","Teleostei"),]$expressed_overused_background_POC1)),
"% in vertebrates",sep=""))
print(paste("Not accounting for POCMT variations does not changed the results as it remains positive for ",table(data1$expressed_overused_POC1 > 0)["TRUE"]," species ",sep=""))
print(paste("Not accounting for POCMT variations does not changed the results as it remains positive for ",table(data1$expressed_overused_POC1 > 0)["TRUE"]," species ",sep=""))
View(data1)
print(paste("for most tetrapods (N=107 species)",sep=""))
print(paste("for most tetrapods (N=",nrow(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods","Teleostei"),])," species)",sep=""))
print(paste("for most tetrapods (N=",nrow(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods"),])," species)",sep=""))
67+31+17
28+36+19+9+28+22+67+31+17
data6 = read.delim("data/data6_supp.tab")
dt_analysis = data6[data6$species == "Caenorhabditis_elegans",]
print(paste("the most constrained sites displaying a higher proportion of POCs (on average ",
round(mean(dt_analysis[dt_analysis$categorie == "Highly constrained",]$freq,na.rm=T)*100,1),"% vs ",
round(mean(dt_analysis[dt_analysis$categorie == "Unconstrained",]$freq,na.rm=T)*100,1),"%;",sep=""))
dt_analysis$type_aa
print(paste("the most constrained sites displaying a higher proportion of POCs (on average ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Highly constrained",]$freq,na.rm=T)*100,1),"% vs ",
round(mean(dt_analysis[dt_analysis$categorie == "Unconstrained",]$freq,na.rm=T)*100,1),"%;",sep=""))
print(paste("the most constrained sites displaying a higher proportion of POCs (on average ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Highly constrained",]$freq,na.rm=T)*100,1),"% vs ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Unconstrained",]$freq,na.rm=T)*100,1),"%;",sep=""))
data6 = read.delim("data/data6_supp.tab")
dt_analysis = data6[data6$species == "Caenorhabditis_elegans",]
print(paste("the most constrained sites displaying a higher proportion of POCs (on average ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Highly constrained",]$freq,na.rm=T)*100,1),"% vs ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Unconstrained",]$freq,na.rm=T)*100,1),"%;",sep=""))
print(paste("the most constrained sites displaying a higher proportion of POCs (on average ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Highly constrained",]$freq,na.rm=T)*100,1),"% vs ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Unconstrained",]$freq,na.rm=T)*100,1),"%;",sep=""))
print(paste("In Mecopterida we observe a difference reaching ",round(max(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"% (with an average of ",round(mean(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"%).",sep=""))
print(paste("for most tetrapods (N=",nrow(data1[data1$clade_group %in% c("Mammalia","Aves","Other Tetrapods"),])," species)",sep=""))
data6 = read.delim("data/data6_supp.tab")
dt_analysis = data6[data6$species == "Caenorhabditis_elegans",]
print(paste("the most constrained sites displaying a higher proportion of POCs (on average ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Highly constrained",]$freq,na.rm=T)*100,1),"% vs ",
round(mean(dt_analysis[dt_analysis$type_aa == "POCs" & dt_analysis$categorie == "Unconstrained",]$freq,na.rm=T)*100,1),"%;",sep=""))
print(paste("In Mecopterida we observe a difference reaching ",round(max(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"% (with an average of ",round(mean(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"%).",sep=""))
print(paste("In Diptera we observed a difference reaching ",round(max(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"% (with an average of ",round(mean(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"%).",sep=""))
print(paste("Our findings indicate that a majority of the species (72\%) exhibit a positive shift in POC",sep=""))
print(paste("Our findings indicate that a majority of the species (",sum(data1$constraint_overused_POCs>0)),"%) exhibit a positive shift in POC",sep=""))
print(paste("Our findings indicate that a majority of the species (",sum(data1$constraint_overused_POCs>0),"%) exhibit a positive shift in POC",sep=""))
print(paste("Our findings indicate that a majority of the species (",sum(data1$constraint_overused_POCs>0)/nrow(data1),"%) exhibit a positive shift in POC",sep=""))
print(paste("Our findings indicate that a majority of the species (",sum(data1$constraint_overused_POCs>0)/nrow(data1)*100,"%) exhibit a positive shift in POC",sep=""))
print(paste("Our findings indicate that a majority of the species (",round(sum(data1$constraint_overused_POCs>0)/nrow(data1)*100,2),"%) exhibit a positive shift in POC",sep=""))
print(paste("Our findings indicate that a majority of the species (",round(sum(data1$constraint_overused_POCs>0)/nrow(data1)*100,),"%) exhibit a positive shift in POC",sep=""))
print(paste("In Diptera we observed a difference reaching ",round(max(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"% (with an average of ",round(mean(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"%).",sep=""))
print(paste("Our findings indicate that a majority of the species (",round(sum(data1$constraint_overused_POCs>0)/nrow(data1)*100,),"%) exhibit a positive shift in POC",sep=""))
print(paste("In Diptera we observed a difference reaching ",round(max(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"% (with an average of ",round(mean(data1[data1$clade_group == "Diptera",]$constraint_overused_POCs),1),
"%).",sep=""))
