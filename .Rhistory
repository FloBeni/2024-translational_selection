breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation")) +
scale_fill_manual(values=set_color[c(2,1,4,3)]) +
scale_color_manual(values=set_color[c(2,1,4,3)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation")) +
scale_fill_manual(values=set_color[c(2,1,4,3,5)]) +
scale_color_manual(values=set_color[c(2,1,4,3,5)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=4) +
scale_fill_manual(values=set_color[c(2,1,4,3,5)]) +
scale_color_manual(values=set_color[c(2,1,4,3,5)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=2) +
scale_fill_manual(values=set_color[c(2,1,4,3,5)]) +
scale_color_manual(values=set_color[c(2,1,4,3,5)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=2) +
scale_fill_manual(values=set_color[c(2,1,4,3,8)]) +
scale_color_manual(values=set_color[c(2,1,4,3,5)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=2) +
scale_fill_manual(values=set_color[c(2,1,4,3,8)]) +
scale_color_manual(values=set_color[c(2,1,4,3,8)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="Genet Pop",col="Genet Pop"),size=2) +
scale_fill_manual(values=set_color[c(2,1,4,3,8)]) +
scale_color_manual(values=set_color[c(2,1,4,3,8)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=2) +
scale_fill_manual(values=set_color[c(2,1,4,3,8)]) +
scale_color_manual(values=set_color[c(2,1,4,3,8)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b")
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
scale_fill_manual(values=set_color[c(2,1,4,3,8)]) +
scale_color_manual(values=set_color[c(2,1,4,3,8)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b") +
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=2)
pB
S_high_exp = data1[data1$species == "Caenorhabditis_elegans",]$S_POC2
Fpoc_low_exp = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC2",dt_graph$set),]$freq)
S_high_exp = data1[data1$species == "Caenorhabditis_elegans",]$S_POC2
Fpoc_low_exp = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC2",dt_graph$set),]$freq)
Fpkm_high_exp = dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC2",dt_graph$set) , ]$fpkm
lambda = exp(log(Fpoc_low_exp/(1-Fpoc_low_exp)))
k = S_high_exp/Fpkm_high_exp
S_function = function(fpkm){k * fpkm}
Fop_estimation = function(fpkm){
lambda/(lambda + (exp(-S_function(fpkm))-1)/(1-exp(S_function(fpkm))))
}
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
scale_fill_manual(values=set_color[c(2,1,4,3,8)]) +
scale_color_manual(values=set_color[c(2,1,4,3,8)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b") +
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=2)
pB
dt_graph$fpkm*k
S_high_exp = data1[data1$species == "Caenorhabditis_elegans",]$S_POC1
Fpoc_low_exp = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)
Fpkm_high_exp = dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ]$fpkm
lambda = exp(log(Fpoc_low_exp/(1-Fpoc_low_exp)))
k = S_high_exp/Fpkm_high_exp
S_function = function(fpkm){k * fpkm}
Fop_estimation = function(fpkm){
lambda/(lambda + (exp(-S_function(fpkm))-1)/(1-exp(S_function(fpkm))))
}
dt_graph$fpkm*k
S_high_exp = data1[data1$species == "Caenorhabditis_elegans",]$S_POCs
Fpoc_low_exp = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POCs",dt_graph$set),]$freq)
Fpkm_high_exp = dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POCs",dt_graph$set) , ]$fpkm
lambda = exp(log(Fpoc_low_exp/(1-Fpoc_low_exp)))
k = S_high_exp/Fpkm_high_exp
S_function = function(fpkm){k * fpkm}
Fop_estimation = function(fpkm){
lambda/(lambda + (exp(-S_function(fpkm))-1)/(1-exp(S_function(fpkm))))
}
dt_graph$fpkm*k
S_high_exp = data1[data1$species == "Caenorhabditis_elegans",]$S_POCs
Fpoc_low_exp = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POCs",dt_graph$set),]$freq)
Fpkm_high_exp = dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POCs",dt_graph$set) , ]$fpkm
lambda = exp(log(Fpoc_low_exp/(1-Fpoc_low_exp)))
k = S_high_exp/Fpkm_high_exp
S_function = function(fpkm){k * fpkm}
Fop_estimation = function(fpkm){
lambda/(lambda + (exp(-S_function(fpkm))-1)/(1-exp(S_function(fpkm))))
}
dt_graph$fpkm*k
k
S_high_exp
Fpkm_high_exp
Fpkm_high_exp = dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ]$fpkm
lambda = exp(log(Fpoc_low_exp/(1-Fpoc_low_exp)))
k = S_high_exp/Fpkm_high_exp
S_function = function(fpkm){k * fpkm}
Fop_estimation = function(fpkm){
lambda/(lambda + (exp(-S_function(fpkm))-1)/(1-exp(S_function(fpkm))))
}
dt_graph$fpkm*k
S_high_exp = data1[data1$species == "Caenorhabditis_elegans",]$S_POC1
Fpoc_low_exp = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)
Fpkm_high_exp = dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ]$fpkm
lambda = exp(log(Fpoc_low_exp/(1-Fpoc_low_exp)))
k = S_high_exp/Fpkm_high_exp
S_function = function(fpkm){k * fpkm}
Fop_estimation = function(fpkm){
lambda/(lambda + (exp(-S_function(fpkm))-1)/(1-exp(S_function(fpkm))))
}
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
scale_fill_manual(values=set_color[c(2,1,4,3,8)]) +
scale_color_manual(values=set_color[c(2,1,4,3,8)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b") +
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=2)
pB
set_color
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
scale_fill_manual(values=set_color[c(2,1,4,3,10)]) +
scale_color_manual(values=set_color[c(2,1,4,3,10)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b") +
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=2)
pB
pB = ggplot(dt_graph ,
aes(x=fpkm ,y=100*freq,fill=paste(set,categorie),col=paste(set,categorie)))  + geom_point(alpha=0)+
geom_line(data=dt_graph,size=2,aes(linetype=paste(set,categorie))) +
geom_point(data=dt_graph,pch=21,col="black",size=3)+
scale_fill_manual(values=set_color[c(2,1,4,3,8)]) +
scale_color_manual(values=set_color[c(2,1,4,3,8)]) +
scale_shape_manual(values=c(21,22,24,23,25,20))+
scale_linetype_manual(values=c("solid","solid","solid","solid"))+
xlab("Gene expression level (FPKM, log scale)") + ylab("Codon set frequency (%)") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=23, family="economica"),
title =  element_text(color="black", size=25, family="economica"),
legend.text =  element_text(color="black", size=25, family="economica",vjust = 1.5,margin = margin(t = 10)),
strip.text = element_text(size=15)
)+labs(fill='Categories',color='Categories',shape='',linetype='')+
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)  + scale_x_log10(
breaks=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),
labels=c(0.005,0.01,0.1,1,10,100,500,1000,10000,50000),limits=c(0.005,1000))+ ylim(0.2*100,0.8*100) +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & !grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#E31A1C") +
geom_hline(yintercept = mean(dt_graph[dt_graph$fpkm <= median(dt_graph$fpkm) & grepl("control",dt_graph$categorie) & grepl("POC1",dt_graph$set),]$freq)*100,size=1,linetype="dashed",col="#FB9A99") +
geom_point(data =  dt_graph[!grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set) , ],col="black",pch=21,fill="#E31A1C",size=6)+
geom_point(data = dt_graph[grepl("control",dt_graph$categorie) & dt_graph$fpkm == max(dt_graph$fpkm) & grepl("POC1",dt_graph$set), ],col="black",pch=21,fill="#FB9A99",size=6)+
ggtitle(paste(unique(dt_graph$gene_set)," genes",sep="")) +   guides(linetype="none",shape="none")+ annotation_logticks(sides = "b") +
geom_line(data = data.frame(Fop_estimate = Fop_estimation(dt_graph$fpkm),fpkm=dt_graph$fpkm),
aes(x=fpkm ,y=100*Fop_estimate,fill="simulation",col="simulation"),size=2)
pB
ggplot(data1,aes(x=S_POCs,y=expressed_overused_POCs)) + geom_point() + geom_abline()
# Pannel 4 D
dt_graph = data.frame(
species = c(data1$species,data1$species),
clade_group = c(data1$clade_group,data1$clade_group),
category = c(rep("POC1",nrow(data1)), rep("POC2",nrow(data1))),
value = c(data1$S_POC1,data1$S_POC2))
dt_graph$clade_group_facet = str_replace_all(dt_graph$clade_group," ","\n")
dt_graph$clade_group_facet = factor(dt_graph$clade_group_facet, levels = str_replace_all(names(Clade_color)," ","\n"))
pD = ggplot(dt_graph,aes(y=value,x=category,label=species,fill=clade_group))  +
geom_hline(size=1,linetype="dashed",col="red", yintercept = 0 ) +geom_point(size=2,pch=21,alpha=.8)+
geom_boxplot(alpha=.1)  + facet_wrap(~clade_group_facet,scales="free_x",ncol=11)+ theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="economica"),
axis.title.y = element_text(color="black", size=25, family="economica"),
axis.text.y =  element_text(color="black", size=23, family="economica"),
axis.text.x =  element_text(color="black", size=17, family="economica"),
legend.text =  element_text(color="black", size=20, family="economica"),
strip.text = element_text(size=15, family="economica",face="bold"),
title =  element_text(size=30, family="economica"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(color = "grey", fill = NA)
# strip.background = element_rect(color = "grey", size = 1)
) + ylab("POC frequency variations with expression (%)") +
theme(legend.position='none') + scale_fill_manual(values=Clade_color) + xlab("")
pD
