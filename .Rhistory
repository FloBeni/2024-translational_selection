theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
pD
jpeg(paste(path_pannel,"p5D_supptext.jpg",sep=""), width = 6000/1/resolution, height = 3000/1/resolution,res=600/1/resolution)
print(pD)
dev.off()
# Pannel E
data_10 = read.delim("data/data10_supp.tab")
dt_graph = data_10
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_intron),big.mark=",",scientific=T)," substitutions PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_intron),big.mark=",",scientific=T)," substitutions nPO>PO",sep=""))
pE = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="Intron",aes(x=0.015,y=0.048), family="ubuntu condensed", size=12)
pE = pE +
geom_line(aes(y=density_optimal_to_nonoptimal_intron,color="PO>nPO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_intron,fill="PO>nPO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_intron,
ymax=confint_high_density_optimal_to_nonoptimal_intron,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_intron,color="nPO>PO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_intron,fill="nPO>PO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_intron,
ymax=confint_high_density_nonoptimal_to_optimal_intron,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pE = pE + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0, size=25,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=27, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("Substitution rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F)  + ylim(0.005,0.05) +
theme(legend.position = c(0.7, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) +  guides(fill= guide_legend(override.aes = list(size=7,pch=21),byrow = TRUE,order = 2))+
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
pE
jpeg(paste(path_pannel,"p5E_supptext.jpg",sep=""), width = 6000/1/resolution, height = 3000/1/resolution,res=600/1/resolution)
print(pE)
dev.off()
# Supplementary Texts Figure 5
imgA = load.image(paste(path_require,"poly_subst.png",sep="") )
imgB = load.image(paste(path_pannel,"p5B_supptext.jpg",sep="") )
imgC = load.image(paste(path_pannel,"p5C_supptext.jpg",sep="") )
imgD = load.image(paste(path_pannel,"p5D_supptext.jpg",sep="") )
imgE = load.image(paste(path_pannel,"p5E_supptext.jpg",sep="") )
fly<-readPNG(paste(path_require,"Drosophila_melanogaster.png",sep=""))
{
pdf(file= paste(path_figure,"Figure5_supptext.pdf",sep=""), width=8, height=7)
m = matrix(rep(NA,10*120), nrow=120)
for(i in 1:6){
m[,i]=c(rep(1,50),rep(2,35),rep(3,35))
}
for(i in 6:10){
m[,i]=c(rep(1,50),rep(4,35),rep(5,35))
}
m
layout(m)
par(mar=c(0, 0, 0, 0))
plot(imgA, axes=FALSE)
mtext("A",at=100,adj=-4, side=2, line=1, font=2, cex=1.7,las=2)
xaxis=1300/1.1
yaxis=120/1.1
rasterImage(fly,xleft=0+xaxis, ybottom=0+yaxis, xright=1100/13+xaxis, ytop=-900/13+yaxis)
par(mar=c(0, 1, 1.5, 1))
plot(imgB, axes=FALSE)
mtext("B",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
par(mar=c(0.5, 1, 0, 1))
plot(imgD, axes=FALSE)
mtext("D",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
par(mar=c(0, 1, 1.5, 1))
plot(imgC, axes=FALSE)
mtext("C",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
par(mar=c(0.5, 1, 0, 1))
plot(imgE, axes=FALSE)
mtext("E",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
dev.off()
}
# Generate Supplementary Texts Figure 3
source("figure/figure_supptext_generator/library_path.R")
set_color_class = c("#E31A1C","#33A02C")
names(set_color_class) = c( "PO>nPO","nPO>PO")
set_shape_class = c(CDS=21,intron=24)
set_linetype_class = c(CDS="solid",intron="dashed")
set_alpha_class = c(CDS=1,intron=0.5)
resolution = 4
# Pannel B
data_11 = read.delim("data/data11_supp.tab")
dt_graph = data_11
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_codon),big.mark=",",scientific=T)," SNPs PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_codon),big.mark=",",scientific=T)," SNPs nPO>PO",sep=""))
pB = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="CDS",aes(x=0.012,y=0.053), family="ubuntu condensed", size=12)
pB = pB +
geom_line(aes(y=density_optimal_to_nonoptimal_codon,color="PO>nPO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_codon,fill="PO>nPO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_codon,
ymax=confint_high_density_optimal_to_nonoptimal_codon,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_codon,color="nPO>PO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_codon,fill="nPO>PO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_codon,
ymax=confint_high_density_nonoptimal_to_optimal_codon,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pB = pB + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0.5, size=0,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=0, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("SNP rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F)+ ylim(0.01,0.055)+
theme(legend.position = c(0.76, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(0.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) + guides(fill= guide_legend(override.aes = list(size=7,pch=21), byrow = TRUE,order = 2))
pB
jpeg(paste(path_pannel,"p3B_supptext.jpg",sep=""), width = 6000/1/resolution, height = 2800/1/resolution,res=600/1/resolution)
print(pB)
dev.off()
# Pannel C
data_10 = read.delim("data/data10_supp.tab")
dt_graph = data_10
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_codon),big.mark=",",scientific=T)," substitutions PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_codon),big.mark=",",scientific=T)," substitutions nPO>PO",sep=""))
pC = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="CDS",aes(x=0.012,y=0.048), family="ubuntu condensed", size=12)
pC = pC +
geom_line(aes(y=density_optimal_to_nonoptimal_codon,color="PO>nPO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_codon,fill="PO>nPO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_codon,
ymax=confint_high_density_optimal_to_nonoptimal_codon,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_codon,color="nPO>PO",linetype='CDS',alpha='CDS'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_codon,fill="nPO>PO",pch='CDS',alpha='CDS'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_codon,
ymax=confint_high_density_nonoptimal_to_optimal_codon,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pC = pC + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0, size=0,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=0, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("Substitution rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F) + ylim(0.005,0.05)+
theme(legend.position = c(0.7, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) +  guides(fill= guide_legend(override.aes = list(size=7,pch=21),byrow = TRUE,order = 2))
pC
jpeg(paste(path_pannel,"p3C_supptext.jpg",sep=""), width = 6000/1/resolution, height = 2800/1/resolution,res=600/1/resolution)
print(pC)
dev.off()
# Pannel D
data_11 = read.delim("data/data11_supp.tab")
dt_graph = data_11
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_intron),big.mark=",",scientific=T)," SNPs PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_intron),big.mark=",",scientific=T)," SNPs nPO>PO",sep=""))
pD = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="Intron",aes(x=0.015,y=0.053), family="ubuntu condensed", size=12)
pD = pD +
geom_line(aes(y=density_optimal_to_nonoptimal_intron,color="PO>nPO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_intron,fill="PO>nPO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_intron,
ymax=confint_high_density_optimal_to_nonoptimal_intron,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_intron,color="nPO>PO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_intron,fill="nPO>PO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_intron,
ymax=confint_high_density_nonoptimal_to_optimal_intron,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pD = pD + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=-0, size=25,family="ubuntu condensed"),
axis.title.y = element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=27, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("SNP rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F) + ylim(0.01,0.055) +
theme(legend.position = c(0.76, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) +  guides(fill= guide_legend(override.aes = list(size=7,pch=21),byrow = TRUE,order = 2))+
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
pD
jpeg(paste(path_pannel,"p3D_supptext.jpg",sep=""), width = 6000/1/resolution, height = 3000/1/resolution,res=600/1/resolution)
print(pD)
dev.off()
# Pannel E
data_10 = read.delim("data/data10_supp.tab")
dt_graph = data_10
labels_name = c( "PO>nPO" = paste( format(sum(dt_graph$sum_subst_density_optimal_to_nonoptimal_intron),big.mark=",",scientific=T)," substitutions PO>nPO",sep=""),
"nPO>PO"=paste( format(sum(dt_graph$sum_subst_density_nonoptimal_to_optimal_intron),big.mark=",",scientific=T)," substitutions nPO>PO",sep=""))
pE = ggplot(dt_graph,aes(x=fpkm)) + ggtitle("POCs")+
geom_text(data=data.frame(),label="Intron",aes(x=0.015,y=0.048), family="ubuntu condensed", size=12)
pE = pE +
geom_line(aes(y=density_optimal_to_nonoptimal_intron,color="PO>nPO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_optimal_to_nonoptimal_intron,fill="PO>nPO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_optimal_to_nonoptimal_intron,
ymax=confint_high_density_optimal_to_nonoptimal_intron,color="PO>nPO"),
width=0.03,show.legend=FALSE) +
geom_line(aes(y=density_nonoptimal_to_optimal_intron,color="nPO>PO",linetype='intron',alpha='intron'),size=1) +
geom_point(aes(y=density_nonoptimal_to_optimal_intron,fill="nPO>PO",pch='intron',alpha='intron'),size=3)+
geom_errorbar(aes(ymin=confint_low_density_nonoptimal_to_optimal_intron,
ymax=confint_high_density_nonoptimal_to_optimal_intron,color="nPO>PO"),
width=0.03,show.legend=FALSE)
pE = pE + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0, size=25,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=30, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=30, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=27, family="ubuntu condensed"),
title =  element_text(color="black", size=0, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=25, family="ubuntu condensed")
) + xlab("Gene expression level (FPKM, log scale)") +
scale_x_log10(limits = c(0.01,1000),
breaks=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000),
labels=c(0.005,0.01,0.1,0.5,1,5,10,50,100,1000,10000,50000)) +
ylab(paste("Substitution rate")) + scale_fill_manual("",values=set_color_class,label=labels_name) +
scale_color_manual("",values=set_color_class) + scale_linetype_manual("",values=set_linetype_class) +
scale_shape_manual("",values=set_shape_class) + scale_alpha_manual("",values=set_alpha_class) +
annotation_logticks(sides="b")+
guides(color = F, size = F , linetype=F, pch=F, alpha=F)  + ylim(0.005,0.05) +
theme(legend.position = c(0.7, 0.87),
legend.background = element_rect(fill="NA"),
legend.key.spacing.x = unit(.5, 'cm'),
legend.key.spacing.y = unit(.5, 'cm')
) +  guides(fill= guide_legend(override.aes = list(size=7,pch=21),byrow = TRUE,order = 2))+
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
pE
jpeg(paste(path_pannel,"p3E_supptext.jpg",sep=""), width = 6000/1/resolution, height = 3000/1/resolution,res=600/1/resolution)
print(pE)
dev.off()
# Supplementary Texts Figure 3
imgA = load.image(paste(path_require,"poly_subst.png",sep="") )
imgB = load.image(paste(path_pannel,"p3B_supptext.jpg",sep="") )
imgC = load.image(paste(path_pannel,"p3C_supptext.jpg",sep="") )
imgD = load.image(paste(path_pannel,"p3D_supptext.jpg",sep="") )
imgE = load.image(paste(path_pannel,"p3E_supptext.jpg",sep="") )
fly<-readPNG(paste(path_require,"Drosophila_melanogaster.png",sep=""))
{
pdf(file= paste(path_figure,"Figure3_supptext.pdf",sep=""), width=8, height=7)
m = matrix(rep(NA,10*120), nrow=120)
for(i in 1:6){
m[,i]=c(rep(1,50),rep(2,35),rep(3,35))
}
for(i in 6:10){
m[,i]=c(rep(1,50),rep(4,35),rep(5,35))
}
m
layout(m)
par(mar=c(0, 0, 0, 0))
plot(imgA, axes=FALSE)
mtext("A",at=100,adj=-4, side=2, line=1, font=2, cex=1.7,las=2)
xaxis=1300/1.1
yaxis=120/1.1
rasterImage(fly,xleft=0+xaxis, ybottom=0+yaxis, xright=1100/13+xaxis, ytop=-900/13+yaxis)
par(mar=c(0, 1, 1.5, 1))
plot(imgB, axes=FALSE)
mtext("B",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
par(mar=c(0.5, 1, 0, 1))
plot(imgD, axes=FALSE)
mtext("D",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
par(mar=c(0, 1, 1.5, 1))
plot(imgC, axes=FALSE)
mtext("C",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
par(mar=c(0.5, 1, 0, 1))
plot(imgE, axes=FALSE)
mtext("E",at=-100,adj=-0, side=2, line=1, font=2, cex=1.6,las=2)
dev.off()
}
# Generate Supplementary Texts Figure 4
source("figure/figure_supptext_generator/library_path.R")
# Pannel A
data3_supp = read.delim(paste("data/data9_supp.tab",sep="") , header=T )
data3_supp$clade_group = GTDrift_list_species[data3_supp$species,]$clade_group
data3_supp$from = str_replace_all(data3_supp$from , "from_5prime","From start codons")
data3_supp$from = str_replace_all(data3_supp$from , "from_3prime","From stop codons")
data3_supp$from = factor(data3_supp$from,levels = c("From start codons" , "From stop codons"))
data3_supp$label_facet = paste(data3_supp$clade_group, ", N=",  table(data3_supp[!duplicated(data3_supp$species),]$clade_group)[data3_supp$clade_group])
vector_label = unique(data3_supp$label_facet)
names(vector_label) = unique(data3_supp$clade_group)
data3_supp$label_facet = factor(data3_supp$label_facet , levels = vector_label[levels(data3_supp$clade_group)] )
data3_supp[data3_supp$from == "From start codons",]$group = log10(data3_supp[data3_supp$from == "From start codons",]$group)
data3_supp[data3_supp$from == "From stop codons",]$group = -log10(data3_supp[data3_supp$from == "From stop codons",]$group)
pA = ggplot(data3_supp[data3_supp$nb_genes >= 200,],aes(x = group,group=clade_group,y= gci_count/posi_sites  , label=nb_genes,fill=clade_group,col=clade_group)) +
geom_line(lwd = 0.5,aes(group=species), alpha=0.7) +
facet_wrap(~label_facet + from , ncol=6 ,scale="free_x") +
theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=-0, size=25,family="ubuntu condensed"),
axis.title.y = element_text(color="black", size=25, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=20, family="ubuntu condensed"),
axis.text.x =  element_text(color="black",vjust=.5, size=15, family="ubuntu condensed"),
title =  element_text(color="black", size=15, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=20, family="ubuntu condensed"),
strip.text = element_text(family = "ubuntu condensed", size = 14)
) + scale_fill_manual(values = Clade_color)+ scale_color_manual(values = Clade_color) +
scale_x_continuous(breaks=c(-1,-2,-3,-4,1,2,3,4),labels = c(0.01,0.1,1,10,0.01,0.1,1,10)) +
xlab("Distance from start codon or stop codon (kb, log scale)") + ylab ("GCi")  + theme(legend.position='none')
pA
jpeg(paste(path_pannel,"p4A_supptext.jpg",sep=""), width = 5500/1, height = 4000/1,res=400/1)
print(pA)
dev.off()
# Supplementary Texts Figure 4
imgA = load.image(paste(path_pannel,"p4A_supptext.jpg",sep="") )
human<-readPNG(paste(path_require,"human.png",sep=""))
aves<-readPNG(paste(path_require,"aves.png",sep=""))
teleostei<-readPNG(paste(path_require,"teleostei.png",sep=""))
monkey<-readPNG(paste(path_require,"monkey.png",sep=""))
fly<-readPNG(paste(path_require,"fly.png",sep=""))
bee<-readPNG(paste(path_require,"bee.png",sep=""))
tetrapod<-readPNG(paste(path_require,"tetrapod.png",sep=""))
Caenorhabditis_elegans = readPNG(paste(path_require,"Caenorhabditis_elegans.png",sep=""))
cnidaria = readPNG(paste(path_require,"cnidaria.png",sep=""))
insect = readPNG(paste(path_require,"insect.png",sep=""))
coleoptera<-readPNG(paste(path_require,"coleoptera.png",sep=""))
lepidoptera<-readPNG(paste(path_require,"lepidoptera.png",sep=""))
{
pdf(file= paste(path_figure,"Figure4_supptext.pdf",sep=""), width=6.75, height=5)
par(mar=c(0, 0, 0, 0))
plot(imgA, axes=FALSE)
# mtext("A", side=2,at=111, line=1, font=2, cex=1,las=2)
xaxis=1000
yaxis=2370
rasterImage(monkey,xleft=0+xaxis, ybottom=0+yaxis, xright=900/5+xaxis, ytop=-900/5+yaxis)
xaxis=2670
yaxis=2350
rasterImage(aves,xleft=0+xaxis, ybottom=0+yaxis, xright=600/3+xaxis, ytop=-750/3+yaxis)
xaxis=4440
yaxis=2380
rasterImage(tetrapod,xleft=0+xaxis, ybottom=0+yaxis, xright=600/3.8+xaxis, ytop=-750/3.8+yaxis)
xaxis=950
yaxis=1380
rasterImage(bee,xleft=0+xaxis, ybottom=0+yaxis, xright=900/5+xaxis, ytop=-700/5+yaxis)
xaxis=4350
yaxis=1350
rasterImage(Caenorhabditis_elegans,xleft=0+xaxis, ybottom=0+yaxis, xright=1000/4+xaxis, ytop=-350/4+yaxis)
xaxis=2650
yaxis=450
rasterImage(lepidoptera,xleft=0+xaxis, ybottom=0+yaxis, xright=1500/7+xaxis, ytop=-900/7+yaxis)
xaxis=970
yaxis=450
rasterImage(fly,xleft=0+xaxis, ybottom=0+yaxis, xright=1200/8+xaxis, ytop=-900/8+yaxis)
xaxis=4430
yaxis=450
rasterImage(coleoptera,xleft=0+xaxis, ybottom=0+yaxis, xright=1500/10+xaxis, ytop=-900/10+yaxis)
xaxis=2670
yaxis=1430
rasterImage(insect,xleft=0+xaxis, ybottom=0+yaxis, xright=1100/8+xaxis, ytop=-1100/8+yaxis)
xaxis=2670
yaxis=3350
rasterImage(cnidaria,xleft=0+xaxis, ybottom=0+yaxis, xright=900/4+xaxis, ytop=-750/4+yaxis)
xaxis=900
yaxis=3270
rasterImage(teleostei,xleft=0+xaxis, ybottom=0+yaxis, xright=1100/5+xaxis, ytop=-500/5+yaxis)
dev.off()
}
# Generate Supplementary Texts Figure 5
source("figure/figure_supptext_generator/library_path.R")
resolution = 3
# Pannel A
data6 = read.delim("data/data6_supp.tab")
data6$categorie = factor(data6$categorie,levels = rev( unique(data6$categorie)))
dt_graph = data6[data6$species == "Homo_sapiens" & data6$type_aa == "POCs",]
# dt_graph = data6[data6$species == "Drosophila_melanogaster",]
pA = ggplot( dt_graph , aes(y=freq,fill=categorie))  +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values=set_color[c(4,3,5,6)]) +
scale_shape_manual(values=c(24,22,21,23,25,20))+
xlab("Constrain") + ylab("POC frequency") + theme_bw() + theme(
axis.title.x = element_text(color="black",vjust=0.5, size=25,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=25, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=20, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=0, family="ubuntu condensed"),
title =  element_text(color="black", size=15, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=20, family="ubuntu condensed"),
strip.text = element_text(size=15),
plot.caption = element_text(hjust = 0.42, face= "italic", size=18, family="ubuntu condensed"),
plot.caption.position =  "plot"
) + ggtitle(paste("N = " ,dt_graph$nb_genes[1]," BUSCO genes",sep="")) +
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
) + theme(legend.position='none') + xlab("") + coord_cartesian(ylim=c(0.2,0.8))
pA
jpeg(paste(path_pannel,"p5A_supptext.jpg",sep=""),  width = 6200/2/resolution,  8000/2/resolution,res=900/resolution)
print(pA)
dev.off()
# Pannel B
dt_graph = data6[data6$species == "Caenorhabditis_elegans" & data6$type_aa == "POCs",]
pB = ggplot( dt_graph , aes(y=freq,fill=categorie))  +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual("Binning of codons per quartile\nof amino-acid constraint",values=set_color[c(4,3,5,6)],labels=c( "Unconstrained" = "25% least constrained" ,
"Slighlty constrained" = "25-50%" ,
"Moderately constrained" = "50-75%"  ,
"Highly constrained" = "25% most constrained")) +
scale_shape_manual(values=c(24,22,21,23,25,20)) +
xlab("Constrain") + ylab("POC frequency") + theme_bw() + theme(
axis.title.x = element_text(color="black", size=25,family="ubuntu condensed"),
axis.title.y = element_text(color="black", size=25, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=20, family="ubuntu condensed"),
axis.text.x =  element_text(color="black", size=0, family="ubuntu condensed"),
title =  element_text(color="black", size=15, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=16, family="ubuntu condensed"),
legend.title =  element_text(color="black", size=17, family="ubuntu condensed"),
strip.text = element_text(size=15),
plot.caption = element_text(hjust = 0.42, face= "italic", size=18, family="ubuntu condensed"),
plot.caption.position =  "plot"
)  + ggtitle(paste("N = " ,dt_graph$nb_genes[1]," BUSCO genes",sep="")) +
guides(fill = guide_legend(override.aes = list(pch=NA),order = 1),
color = guide_legend(order = 1),
linetype = guide_legend(order = 2),
shape = guide_legend(order = 2),
)+ xlab("") + coord_cartesian(ylim=c(0.2,0.8)) +
# theme(legend.spacing.y = unit(.4, 'cm'))   +
guides(fill = guide_legend(byrow = TRUE)) +ylab("")
pB
jpeg(paste(path_pannel,"p5B_supptext.jpg",sep=""),  width = 11500/2/resolution,  8000/2/resolution,res=900/resolution)
print(pB)
dev.off()
# Pannel C
data1 = read.delim("data/data1_supp.tab")
data1$clade_group = GTDrift_list_species[data1$species,]$clade_group
data1 = data1[ data1$nb_codon_not_decoded == 0  & data1$pval_aa_fpkm < 0.05 & data1$nb_genes_filtered >= 5000 ,]
pC = ggplot(data1,aes(y=constraint_overused_POCs,x=clade_group,fill=clade_group))  +
geom_hline(size=1,linetype="dashed",col="red",
yintercept = 0 ) +
geom_boxplot(alpha=.1) +
geom_point(aes(fill=clade_group),size=2.5,pch=21,alpha=0.7) + theme_bw() + theme(
axis.title.x = element_text(color="black",angle = 50, size=25,family="ubuntu condensed"),
axis.title.y = element_text(color="black",vjust=1.5, size=27, family="ubuntu condensed"),
axis.text.y =  element_text(color="black", size=22, family="ubuntu condensed"),
axis.text.x =  element_text(color="black",vjust=1,hjust=1, size=22,angle = 30, family="ubuntu condensed"),
title =  element_text(color="black", size=15, family="ubuntu condensed"),
legend.text =  element_text(color="black", size=20, family="ubuntu condensed")
) + scale_fill_manual("Clades",values=Clade_color)+
ylab(substitute(paste(Delta," POC"^"cons"))) + xlab("") + theme(legend.position='none')
pC
jpeg(paste(path_pannel,"p5C_supptext.jpg",sep=""), width = 5500/1/resolution, height = 3000/1/resolution,res=560/1/resolution)
print(pC)
dev.off()
# Supplementary Texts Figure 5
imgA = load.image(paste(path_pannel,"p5A_supptext.jpg",sep="") )
imgB = load.image(paste(path_pannel,"p5B_supptext.jpg",sep="") )
imgC = load.image(paste(path_pannel,"p5C_supptext.jpg",sep="") )
human<-readPNG(paste(path_require,"human.png",sep=""))
Caenorhabditis_elegans<-readPNG(paste(path_require,"Caenorhabditis_elegans.png",sep=""))
{
pdf(file= paste(path_figure,"Figure5_supptext.pdf",sep=""), width=5.7, height=5)
m = matrix(rep(NA,100*100), nrow=100)
for(i in 1:50){
m[i,]=c(rep(1,40),rep(2,60))
}
for(i in 50:100){
m[i,]=c(rep(3,100))
}
layout(m)
m
par(mar=c(0, 0, 1, 0))
plot(imgA, axes=FALSE)
mtext("A",at=40,adj=-1, side=2, line=1, font=2, cex=1.3,las=2)
xhuman=740/resolution
yhuman=-460/resolution
rasterImage(human,xleft=0+xhuman, ybottom=450/.8/resolution-yhuman, xright=190/.8/resolution+xhuman, ytop=0-yhuman)
par(mar=c(0, 0, 1, 0))
plot(imgB, axes=FALSE)
mtext("B",at=40,adj=-1, side=2, line=1, font=2, cex=1.3,las=2)
xcel=740/resolution
ycel=-480/resolution
rasterImage(Caenorhabditis_elegans,xleft=0+xcel, ybottom = 350/1.6/resolution-ycel, xright = 1000/1.6/resolution+xcel, ytop=0-ycel)
par(mar=c(0, 1, 0, 1))
plot(imgC, axes=FALSE)
mtext("C",at=50,adj=-1, side=2, line=1, font=2, cex=1.3,las=2)
dev.off()
}
